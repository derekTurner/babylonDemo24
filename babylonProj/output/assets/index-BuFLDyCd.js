const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/flowGraphSceneTickEventBlock-YCfZJfc8.js","assets/index-ISOSkmha.js","assets/index-Kkql4ZzK.css"])))=>i.map(i=>d[i]);
import{A as as,V as c,E as et,a as Tt,T as te,L as D,S as Wt,R as bt,b as j,c as rs,D as ns,M as C,Q as y,P as Qe,O as N,d as X,C as lt,e as d,f as os,g as Ke,h as vt,i as ne,U as hs,j as ls,k as Rt,l as at,m as cs,n as ds,o as dt,p as E,G as Me,q as gt,r as $,s as k,t as oe,u as fe,v as Je,w as ye,x as Fe,y as us,z as _s,B as $e,F as ps,H as Re,I as U,J as st,K as gs,N as ut,W as ms,X as rt,Y as fs,Z as Bt,_ as Ee,$ as _t,a0 as bs,a1 as nt,a2 as At,a3 as Ht,a4 as pe,a5 as it,a6 as He,a7 as xs,a8 as Ps,a9 as ys,aa as Ye,ab as he,ac as Ms,ad as Ss,ae as ot,af as Ts,ag as vs,ah as pt,ai as Rs,aj as Bs,ak as As,al as Ds,am as Cs,an as Dt,ao as ws,ap as Is,aq as je,ar as Es,as as Fs,at as Os,au as ks,av as Vs,aw as zs,ax as Gs,ay as se,az as Ls,aA as le,aB as Ut,aC as Ns,aD as mt,aE as Ws,aF as Hs,aG as Ue,aH as ft,aI as Ct,aJ as Us,aK as wt,aL as Qt,aM as jt,aN as Oe,aO as Qs,aP as js,aQ as qs,aR as Zs,aS as It,aT as Et,aU as Xs,aV as Ys,aW as Ks,aX as ht,aY as Js,aZ as Ft,a_ as $s,a$ as ei,b0 as ti,b1 as si,b2 as ii,b3 as H,b4 as ai,b5 as ri,b6 as ni}from"./flowGraphSceneTickEventBlock-YCfZJfc8.js";import{b7 as Ya,bV as Ka,tr as Ja,eE as $a,b8 as er,b9 as tr,ba as sr,bu as ir,j3 as ar,g3 as rr,g1 as nr,ds as or,d$ as hr,vD as lr,oz as cr,oA as dr,nX as ur,tk as _r,ps as pr,cJ as gr,cK as mr,cL as fr,pL as br,cM as xr,tp as Pr,lh as yr,bs as Mr,i_ as Sr,tv as Tr,bQ as vr,bU as Rr,bT as Br,bR as Ar,bS as Dr,jO as Cr,gY as wr,uy as Ir,li as Er,cG as Fr,cg as Or,cB as kr,ch as Vr,ci as zr,cj as Gr,ck as Lr,jv as Nr,bY as Wr,tq as Hr,tD as Ur,ts as Qr,uL as jr,bZ as qr,b_ as Zr,ea as Xr,uQ as Yr,c2 as Kr,v1 as Jr,g0 as $r,bD as en,gd as tn,c1 as sn,ce as an,cf as rn,vY as nn,oV as on,gJ as hn,tE as ln,tL as cn,tG as dn,tF as un,lg as _n,bN as pn,k2 as gn,tx as mn,kG as fn,ky as bn,kI as xn,kH as Pn,kJ as yn,kx as Mn,kC as Sn,kE as Tn,pM as vn,ef as Rn,eg as Bn,pN as An,pO as Dn,pP as Cn,c9 as wn,ca as In,cb as En,hF as Fn,of as On,oe as kn,bE as Vn,c3 as zn,od as Gn,rl as Ln,nk as Nn,lT as Wn,oW as Hn,cc as Un,e4 as Qn,dT as jn,dU as qn,lv as Zn,n5 as Xn,fe as Yn,cx as Kn,cy as Jn,pr as $n,eq as eo,er as to,nr as so,mP as io,fM as ao,pQ as ro,bC as no,pR as oo,j5 as ho,nJ as lo,jQ as co,iz as uo,eY as _o,eZ as po,j_ as go,pb as mo,c$ as fo,v4 as bo,k9 as xo,pS as Po,gi as yo,v3 as Mo,gK as So,jd as To,jf as vo,ee as Ro,bm as Bo,e2 as Ao,x4 as Do,e8 as Co,mY as wo,mX as Io,g$ as Eo,dM as Fo,d9 as Oo,nL as ko,el as Vo,p6 as zo,bb as Go,nD as Lo,nC as No,jZ as Wo,jY as Ho,oY as Uo,oX as Qo,dF as jo,tt as qo,v$ as Zo,pT as Xo,l9 as Yo,cd as Ko,w0 as Jo,vH as $o,lR as eh,mO as th,m4 as sh,mf as ih,md as ah,mJ as rh,lX as nh,u2 as oh,mG as hh,mI as lh,mH as ch,mV as dh,mU as uh,my as _h,mA as ph,mx as gh,mv as mh,m2 as fh,mM as bh,mL as xh,eM as Ph,u3 as yh,mo as Mh,me as Sh,mc as Th,dg as vh,di as Rh,dj as Bh,dh as Ah,mq as Dh,mi as Ch,mh as wh,mE as Ih,ux as Eh,l_ as Fh,lZ as Oh,uV as kh,uW as Vh,uY as zh,uZ as Gh,uX as Lh,lS as Nh,m0 as Wh,mR as Hh,mQ as Uh,lV as Qh,lU as jh,mz as qh,mw as Zh,mt as Xh,ms as Yh,m7 as Kh,ma as Jh,m9 as $h,m6 as el,mC as tl,j6 as sl,u9 as il,tA as al,bF as rl,ed as nl,iw as ol,ll as hl,k8 as ll,k7 as cl,j7 as dl,un as ul,p3 as _l,nq as pl,m5 as gl,o_ as ml,oZ as fl,tM as bl,vw as xl,oU as Pl,o4 as yl,du as Ml,dt as Sl,mK as Tl,km as vl,kl as Rl,vr as Bl,vl as Al,vm as Dl,h9 as Cl,uU as wl,d0 as Il,vx as El,f_ as Fl,q7 as Ol,tl as kl,pU as Vl,pW as zl,pV as Gl,pX as Ll,ro as Nl,rp as Wl,vv as Hl,rm as Ul,rn as Ql,hZ as jl,jL as ql,e_ as Zl,es as Xl,cC as Yl,dD as Kl,dE as Jl,dw as $l,fW as ec,ns as tc,lY as sc,hX as ic,pY as ac,jq as rc,pn as nc,ji as oc,bl as hc,vN as lc,j8 as cc,lt as dc,dA as uc,f8 as _c,f9 as pc,dz as gc,fa as mc,to as fc,vP as bc,gL as xc,gZ as Pc,bB as yc,rq as Mc,gj as Sc,fk as Tc,fl as vc,bG as Rc,k0 as Bc,vp as Ac,hn as Dc,dJ as Cc,ff as wc,u7 as Ic,gM as Ec,tC as Fc,vZ as Oc,et as kc,e$ as Vc,uc as zc,bn as Gc,eP as Lc,eR as Nc,bH as Wc,g_ as Hc,gN as Uc,pZ as Qc,mj as jc,ml as qc,mm as Zc,v5 as Xc,dS as Yc,vn as Kc,vb as Jc,e0 as $c,p_ as ed,l7 as td,x6 as sd,y4 as id,yu as ad,yB as rd,xW as nd,yt as od,yA as hd,yw as ld,yv as cd,yC as dd,yU as ud,yX as _d,yT as pd,yV as gd,yY as md,yW as fd,x7 as bd,xy as xd,y8 as Pd,ye as yd,xO as Md,xs as Sd,xr as Td,xu as vd,xR as Rd,xp as Bd,xQ as Ad,xq as Dd,yr as Cd,yy as wd,yZ as Id,y$ as Ed,y_ as Fd,xG as Od,yM as kd,yI as Vd,xt as zd,xI as Gd,yo as Ld,yQ as Nd,xZ as Wd,xz as Hd,x$ as Ud,y0 as Qd,yh as jd,xa as qd,x9 as Zd,yD as Xd,xJ as Yd,y7 as Kd,xA as Jd,y9 as $d,xS as eu,xP as tu,yk as su,yl as iu,y2 as au,yg as ru,yR as nu,yn as ou,ym as hu,yK as lu,yi as cu,yj as du,yG as uu,yF as _u,yE as pu,xT as gu,xV as mu,xU as fu,yS as bu,yd as xu,z0 as Pu,yc as yu,xD as Mu,xY as Su,y3 as Tu,ya as vu,yL as Ru,xN as Bu,y1 as Au,xL as Du,yJ as Cu,yp as wu,x_ as Iu,z2 as Eu,yb as Fu,yN as Ou,yO as ku,yf as Vu,z1 as zu,z3 as Gu,xx as Lu,xK as Nu,xw as Wu,xv as Hu,y5 as Uu,x8 as Qu,yq as ju,yx as qu,yH as Zu,x5 as Xu,xM as Yu,xX as Ku,xE as Ju,ys as $u,yz as e_,xB as t_,xC as s_,yP as i_,y6 as a_,xF as r_,xH as n_,rB as o_,rA as h_,rF as l_,rC as c_,rE as d_,rD as u_,rG as __,cD as p_,cE as g_,cl as m_,cm as f_,ir as b_,cF as x_,cH as P_,cn as y_,co as M_,cp as S_,h_ as T_,i4 as v_,c4 as R_,cq as B_,cr as A_,cz as D_,cs as C_,ct as w_,cu as I_,cv as E_,cw as F_,jn as O_,gk as k_,uA as V_,ec as z_,hY as G_,le as L_,p$ as N_,r$ as W_,s0 as H_,p7 as U_,d4 as Q_,vX as j_,f1 as q_,cI as Z_,f3 as X_,f4 as Y_,kw as K_,oB as J_,vE as $_,vF as ep,vG as tp,f2 as sp,lO as ip,lw as ap,og as rp,rs as np,rt as op,on as hp,nI as lp,oo as cp,oq as dp,op as up,or as _p,ou as pp,ov as gp,nK as mp,o5 as fp,ni as bp,oy as xp,ow as Pp,oh as yp,ol as Mp,oi as Sp,ng as Tp,nh as vp,os as Rp,om as Bp,ot as Ap,ox as Dp,ok as Cp,oj as wp,ob as Ip,oc as Ep,nS as Fp,nR as Op,nQ as kp,uS as Vp,uT as zp,vM as Gp,u0 as Lp,v0 as Np,kN as Wp,eL as Hp,dq as Up,dr as Qp,g4 as jp,tH as qp,g2 as Zp,mW as Xp,uH as Yp,uB as Kp,fb as Jp,fc as $p,fm as eg,ly as tg,jD as sg,jC as ig,v6 as ag,q0 as rg,n4 as ng,kt as og,m$ as hg,mS as lg,ks as cg,kr as dg,kq as ug,mT as _g,ko as pg,n3 as gg,n2 as mg,n0 as fg,n1 as bg,kp as xg,w1 as Pg,no as yg,mB as Mg,lx as Sg,gP as Tg,tB as vg,gO as Rg,u8 as Bg,lp as Ag,c8 as Dg,c6 as Cg,c7 as wg,c5 as Ig,wz as Eg,kM as Fg,uj as Og,i3 as kg,m3 as Vg,fX as zg,o$ as Gg,fn as Lg,pq as Ng,pp as Wg,gQ as Hg,gW as Ug,wv as Qg,nm as jg,mN as qg,ty as Zg,hV as Xg,gl as Yg,q1 as Kg,iy as Jg,bi as $g,ei as em,n7 as tm,u$ as sm,lB as im,hG as am,o0 as rm,o1 as nm,n_ as om,nZ as hm,n$ as lm,o2 as cm,bX as dm,o3 as um,hc as _m,gR as pm,br as gm,d2 as mm,vj as fm,n6 as bm,vL as xm,vi as Pm,vK as ym,vJ as Mm,uN as Sm,bW as Tm,eS as vm,eT as Rm,eU as Bm,ub as Am,vy as Dm,mp as Cm,lP as wm,nP as Im,fo as Em,fp as Fm,jr as Om,fE as km,fF as Vm,fG as zm,um as Gm,jh as Lm,is as Nm,fd as Wm,hI as Hm,rr as Um,mg as Qm,lA as jm,vg as qm,v8 as Zm,ve as Xm,vd as Ym,en as Km,tK as Jm,ka as $m,dV as ef,nB as tf,o7 as sf,o6 as af,gs as rf,gv as nf,gm as of,kk as hf,hu as lf,kn as cf,gr as df,gw as uf,kj as _f,kf as pf,gA as gf,gB as mf,nA as ff,nz as bf,jX as xf,o8 as Pf,k3 as yf,k4 as Mf,jo as Sf,nH as Tf,uq as vf,tu as Rf,k6 as Bf,k5 as Af,nl as Df,ku as Cf,kv as wf,lQ as If,p4 as Ef,lu as Ff,jp as Of,vu as kf,e1 as Vf,hd as zf,jW as Gf,oS as Lf,hH as Nf,q2 as Wf,po as Hf,ue as Uf,dn as Qf,dp as jf,j2 as qf,jE as Zf,dN as Xf,eG as Yf,dy as Kf,x2 as Jf,x0 as $f,w$ as eb,x1 as tb,js as sb,oT as ib,n8 as ab,n9 as rb,ne as nb,nd as ob,nc as hb,na as lb,nb as cb,nf as db,hE as ub,hC as _b,hx as pb,hw as gb,hv as mb,hB as fb,hz as bb,hy as xb,hA as Pb,hD as yb,j0 as Mb,j1 as Sb,nG as Tb,hg as vb,jH as Rb,ja as Bb,nN as Ab,nt as Db,ud as Cb,db as wb,dc as Ib,dd as Eb,pt as Fb,cW as Ob,jl as kb,lf as Vb,rw as zb,gu as Gb,gx as Lb,gt as Nb,jM as Wb,gy as Hb,gz as Ub,ld as Qb,vs as jb,ua as qb,g5 as Zb,h8 as Xb,h7 as Yb,h1 as Kb,h6 as Jb,h0 as $b,h4 as ex,h2 as tx,h3 as sx,h5 as ix,ha as ax,p8 as rx,jV as nx,p9 as ox,jU as hx,pa as lx,jT as cx,uo as dx,q4 as ux,q3 as _x,lj as px,lk as gx,uf as mx,vO as fx,hW as bx,fg as xx,pD as Px,px as yx,pw as Mx,pA as Sx,py as Tx,pl as vx,pu as Rx,pB as Bx,pE as Ax,pm as Dx,pv as Cx,pC as wx,pF as Ix,pI as Ex,pK as Fx,pz as Ox,pG as kx,pJ as Vx,pH as zx,dl as Gx,dk as Lx,dm as Nx,de as Wx,d1 as Hx,e9 as Ux,nj as Qx,mr as jx,bj as qx,bp as Zx,pd as Xx,fY as Yx,p0 as Kx,eX as Jx,eV as $x,eW as eP,dx as tP,pe as sP,pc as iP,lK as aP,mk as rP,lL as nP,mF as oP,lN as hP,q5 as lP,qn as cP,qo as dP,ul as uP,jz as _P,jt as pP,bI as gP,dR as mP,i6 as fP,ru as bP,i$ as xP,bd as PP,hb as yP,kF as MP,kK as SP,kL as TP,kA as vP,kz as RP,kV as BP,kU as AP,kS as DP,kZ as CP,kR as wP,kQ as IP,kP as EP,kD as FP,kO as OP,kT as kP,kW as VP,kX as zP,kY as GP,k_ as LP,k$ as NP,eb as WP,hh as HP,kd as UP,kB as QP,gG as jP,bJ as qP,lI as ZP,bK as XP,ep as YP,dG as KP,bL as JP,v2 as $P,r_ as ey,nF as ty,nE as sy,ju as iy,hi as ay,df as ry,vf as ny,va as oy,jx as hy,jJ as ly,jP as cy,iu as dy,iv as uy,rZ as _y,vI as py,jK as gy,jR as my,q6 as fy,uR as by,kg as xy,eF as Py,bt as yy,j9 as My,em as Sy,up as Ty,rx as vy,ry as Ry,rz as By,jy as Ay,vh as Dy,v9 as Cy,eO as wy,eQ as Iy,eN as Ey,v7 as Fy,gV as Oy,l$ as ky,xb as Vy,xc as zy,xf as Gy,xk as Ly,xl as Ny,xn as Wy,xj as Hy,xe as Uy,xm as Qy,xd as jy,xg as qy,xh as Zy,xi as Xy,ug as Yy,jI as Ky,nT as Jy,nU as $y,nV as eM,bO as tM,v_ as sM,q8 as iM,q9 as aM,qb as rM,e5 as nM,l4 as oM,j4 as hM,nW as lM,ta as cM,ix as dM,g6 as uM,gc as _M,uh as pM,us as gM,ur as mM,t9 as fM,h$ as bM,i0 as xM,qy as PM,qx as yM,u_ as MM,tI as SM,nx as TM,vc as vM,nO as RM,nv as BM,bo as AM,nu as DM,bg as CM,ny as wM,nw as IM,bh as EM,eH as FM,gH as OM,e3 as kM,eI as VM,fN as zM,fL as GM,i5 as LM,uk as NM,mn as WM,qp as HM,jN as UM,jG as QM,lJ as jM,lG as qM,lF as ZM,lH as XM,bM as YM,lm as KM,dv as JM,ut as $M,uu as eS,jw as tS,b$ as sS,c0 as iS,hl as aS,l8 as rS,nn as nS,m1 as oS,p2 as hS,p1 as lS,ln as cS,lo as dS,fZ as uS,tc as _S,te as pS,td as gS,tf as mS,tb as fS,gI as bS,qa as xS,vq as PS,be as yS,eh as MS,tm as SS,tn as TS,jk as vS,cN as RS,cO as BS,cP as AS,qr as DS,qq as CS,cQ as wS,f0 as IS,bk as ES,bq as FS,kb as OS,e7 as kS,kc as VS,eo as zS,uv as GS,vt as LS,pg as NS,pf as WS,jS as HS,rv as US,jj as QS,bf as jS,dC as qS,qc as ZS,i2 as XS,uJ as YS,uw as KS,bP as JS,o9 as $S,oa as eT,vk as tT,tw as sT,dZ as iT,tz as aT,it as rT,dW as nT,d_ as oT,ui as hT,he as lT,hf as cT,e6 as dT,hj as uT,uC as _T,dX as pT,dY as gT,dH as mT,lW as fT,mu as bT,vB as xT,la as PT,lb as yT,uz as MT,lc as ST,qt as TT,qs as vT,np as RT,m8 as BT,mb as AT,cA as DT,lz as CT,vz as wT,vA as IT,tJ as ET,hm as FT,da as OT,nY as kT,k1 as VT,jc as zT,jb as GT,mD as LT,i1 as NT,ki as WT,kh as HT,uI as UT,u4 as QT,u6 as jT,u5 as qT,cS as ZT,cT as XT,cU as YT,cV as KT,qv as JT,cX as $T,qw as ev,dO as tv,bc as sv,lq as iv,lr as av,ls as rv,nM as nv,je as ov,jg as hv,lE as lv,ej as cv,ek as dv,fi as uv,uM as _v,hk as pv,jm as gv,uO as mv,cR as fv,qu as bv,j$ as xv,gX as Pv,jB as yv,jA as Mv,p5 as Sv,eD as Tv,mZ as vv,dQ as Rv,dP as Bv,ew as Av,eu as Dv,ev as Cv,ex as wv,m_ as Iv,ey as Ev,ez as Fv,eA as Ov,eB as kv,eC as Vv,wo as zv,wS as Gv,wq as Lv,ws as Nv,w8 as Wv,wT as Hv,wI as Uv,ww as Qv,wu as jv,wl as qv,wk as Zv,wN as Xv,wH as Yv,wb as Kv,w9 as Jv,wa as $v,wc as eR,wK as tR,wm as sR,wy as iR,wn as aR,wU as rR,wV as nR,wZ as oR,wB as hR,wA as lR,wC as cR,wx as dR,wp as uR,wE as _R,wd as pR,we as gR,x3 as mR,wM as fR,wJ as bR,wg as xR,wf as PR,wD as yR,wW as MR,wX as SR,wt as TR,wF as vR,wG as RR,wY as BR,wr as AR,w_ as DR,wR as CR,wj as wR,wQ as IR,wP as ER,wh as FR,wi as OR,wL as kR,uP as VR,jF as zR,wO as GR,f5 as LR,f6 as NR,f7 as WR,dB as HR,f$ as UR,eK as QR,eJ as jR,lC as qR,gU as ZR,lD as XR,d3 as YR,dI as KR,lM as JR,fj as $R,fh as eB,dK as tB,vo as sB,bz as iB,bA as aB,bv as rB,by as nB,bx as oB,bw as hB,gn as lB,dL as cB,r5 as dB,r6 as uB,g9 as _B,gh as pB,gf as gB,gg as mB,ge as fB,s1 as bB,s5 as xB,s2 as PB,s6 as yB,gq as MB,r3 as SB,r4 as TB,qX as vB,qY as RB,hL as BB,hJ as AB,hM as DB,hK as CB,sh as wB,sj as IB,si as EB,sk as FB,ih as OB,ij as kB,ig as VB,ii as zB,ie as GB,id as LB,qR as NB,qS as WB,qV as HB,qW as UB,uK as QB,iE as jB,iF as qB,iB as ZB,iA as XB,iG as YB,iH as KB,iD as JB,iC as $B,r9 as eA,ra as tA,oC as sA,oE as iA,oD as aA,oF as rA,r7 as nA,r8 as oA,st as hA,su as lA,w6 as cA,w7 as dA,vR as uA,l0 as _A,l2 as pA,l1 as gA,l3 as mA,fU as fA,fQ as bA,qT as xA,qU as PA,s9 as yA,sb as MA,sa as SA,sc as TA,rh as vA,ri as RA,ke as BA,tN as AA,qZ as DA,q_ as CA,l6 as wA,l5 as IA,rd as EA,re as FA,rN as OA,rW as kA,rI as VA,rR as zA,rH as GA,rQ as LA,rM as NA,rV as WA,rL as HA,rU as UA,rK as QA,rT as jA,rJ as qA,rS as ZA,rP as XA,rY as YA,rO as KA,rX as JA,iJ as $A,iI as eD,q$ as tD,r1 as sD,r0 as iD,r2 as aD,sd as rD,sf as nD,se as oD,sg as hD,xo as lD,fw as cD,fz as dD,fq as uD,fs as _D,fr as pD,ft as gD,fu as mD,fx as fD,fv as bD,fy as xD,qP as PD,qQ as yD,hr as MD,ht as SD,hq as TD,hs as vD,ia as RD,i7 as BD,rf as AD,rg as DD,sG as CD,sF as wD,sH as ID,sI as ED,sC as FD,sB as OD,sx as kD,sy as VD,sJ as zD,sK as GD,sA as LD,sz as ND,sv as WD,sw as HD,sM as UD,sL as QD,sO as jD,sN as qD,sD as ZD,sE as XD,sQ as YD,sP as KD,sS as JD,sR as $D,sU as eC,sT as tC,sV as sC,sW as iC,s$ as aC,t0 as rC,sX as nC,sZ as oC,sY as hC,s_ as lC,t2 as cC,t4 as dC,t1 as uC,t3 as _C,ib as pC,i8 as gC,ic as mC,i9 as fC,qM as bC,qL as xC,gb as PC,vQ as yC,qB as MC,qD as SC,qC as TC,qE as vC,fA as RC,fC as BC,fB as AC,fD as DC,fH as CC,fJ as wC,fI as IC,fK as EC,iR as FC,iQ as OC,iK as kC,iS as VC,iL as zC,iU as GC,iT as LC,iM as NC,iV as WC,iN as HC,sl as UC,sn as QC,sm as jC,so as qC,ga as ZC,g8 as XC,uD as YC,uF as KC,uE as JC,uG as $C,vW as e0,vV as t0,oK as s0,oQ as i0,oL as a0,oR as r0,oJ as n0,oP as o0,oI as h0,oO as l0,oH as c0,oN as d0,oG as u0,oM as _0,hR as p0,hS as g0,hO as m0,hT as f0,hU as b0,hQ as x0,hP as P0,hN as y0,rb as M0,rc as S0,t$ as T0,u1 as v0,t5 as R0,t7 as B0,t6 as A0,t8 as D0,sp as C0,sr as w0,sq as I0,ss as E0,ip as F0,il as O0,ph as k0,pj as V0,pi as z0,pk as G0,qG as L0,qI as N0,qF as W0,qH as H0,gF as U0,gD as Q0,gE as j0,gC as q0,d5 as Z0,d7 as X0,d6 as Y0,d8 as K0,qz as J0,qA as $0,gp as ew,go as tw,hp as sw,ho as iw,iZ as aw,iY as rw,g7 as nw,gS as ow,w2 as hw,w4 as lw,w3 as cw,w5 as dw,s4 as uw,s8 as _w,s3 as pw,s7 as gw,vS as mw,vU as fw,vT as bw,qj as xw,qm as Pw,qi as yw,ql as Mw,qh as Sw,qk as Tw,tO as vw,t_ as Rw,tQ as Bw,tW as Aw,tV as Dw,tR as Cw,tX as ww,tZ as Iw,tU as Ew,tY as Fw,tP as Ow,tS as kw,tT as Vw,vC as zw,cY as Gw,cZ as Lw,c_ as Nw,iq as Ww,fV as Hw,fR as Uw,im as Qw,fS as jw,fO as qw,io as Zw,ik as Xw,fT as Yw,fP as Kw,iW as Jw,iO as $w,iX as eI,iP as tI,qN as sI,qO as iI,tg as aI,ti as rI,th as nI,tj as oI,qd as hI,qf as lI,qe as cI,qg as dI,rj as uI,rk as _I,gT as pI,qJ as gI,qK as mI}from"./flowGraphSceneTickEventBlock-YCfZJfc8.js";import{_ as M}from"./index-ISOSkmha.js";import{_DDSTextureLoader as bI}from"./ddsTextureLoader-BC2qFJUN.js";import{_ENVTextureLoader as PI}from"./envTextureLoader-CYs2UvnK.js";import{_KTXTextureLoader as MI}from"./ktxTextureLoader-B3-IWxZD.js";import{_TGATextureLoader as TI}from"./tgaTextureLoader-Dy9MKyaw.js";import{_HDRTextureLoader as RI}from"./hdrTextureLoader-DYrEOaxv.js";import{_BasisTextureLoader as AI}from"./basisTextureLoader-BU01LjeA.js";import{C as CI,D as wI,G as II,S as EI,d as FI,c as OI,U as kI,a as VI,b as zI,_ as GI}from"./exrTextureLoader-BL6JbTzM.js";class Vi{constructor(){this.enableBlending=!1,this.blendingSpeed=.01,this.loopMode=as.ANIMATIONLOOPMODE_CYCLE}}class qt{constructor(e,t,s){this.frame=e,this.action=t,this.onlyOnce=s,this.isDone=!1}_clone(){return new qt(this.frame,this.action,this.onlyOnce)}}class zi{constructor(e){this._path=e,this._onchange=new Array,this.value=0,this.animations=[]}getPoint(){const e=this._path.getPointAtLengthPosition(this.value);return new c(e.x,0,e.y)}moveAhead(e=.002){return this.move(e),this}moveBack(e=.002){return this.move(-e),this}move(e){if(Math.abs(e)>1)throw"step size should be less than 1.";return this.value+=e,this._ensureLimits(),this._raiseOnChange(),this}_ensureLimits(){for(;this.value>1;)this.value-=1;for(;this.value<0;)this.value+=1;return this}_raiseOnChange(){return this._onchange.forEach(e=>e(this)),this}onchange(e){return this._onchange.push(e),this}}class Gi{constructor(e){if(this.SMOOTHING=.75,this.FFT_SIZE=512,this.BARGRAPHAMPLITUDE=256,this.DEBUGCANVASPOS={x:20,y:20},this.DEBUGCANVASSIZE={width:320,height:200},e=e||et.LastCreatedScene,!!e){if(this._scene=e,!Tt.audioEngine){te.Warn("No audio engine initialized, failed to create an audio analyser");return}this._audioEngine=Tt.audioEngine,this._audioEngine.canUseWebAudio&&this._audioEngine.audioContext&&(this._webAudioAnalyser=this._audioEngine.audioContext.createAnalyser(),this._webAudioAnalyser.minDecibels=-140,this._webAudioAnalyser.maxDecibels=0,this._byteFreqs=new Uint8Array(this._webAudioAnalyser.frequencyBinCount),this._byteTime=new Uint8Array(this._webAudioAnalyser.frequencyBinCount),this._floatFreqs=new Float32Array(this._webAudioAnalyser.frequencyBinCount))}}getFrequencyBinCount(){return this._audioEngine.canUseWebAudio?this._webAudioAnalyser.frequencyBinCount:0}getByteFrequencyData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteFrequencyData(this._byteFreqs)),this._byteFreqs}getByteTimeDomainData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteTimeDomainData(this._byteTime)),this._byteTime}getFloatFrequencyData(){return this._audioEngine.canUseWebAudio&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getFloatFrequencyData(this._floatFreqs)),this._floatFreqs}drawDebugCanvas(){if(this._audioEngine.canUseWebAudio&&(this._debugCanvas||(this._debugCanvas=document.createElement("canvas"),this._debugCanvas.width=this.DEBUGCANVASSIZE.width,this._debugCanvas.height=this.DEBUGCANVASSIZE.height,this._debugCanvas.style.position="absolute",this._debugCanvas.style.top=this.DEBUGCANVASPOS.y+"px",this._debugCanvas.style.left=this.DEBUGCANVASPOS.x+"px",this._debugCanvasContext=this._debugCanvas.getContext("2d"),document.body.appendChild(this._debugCanvas),this._registerFunc=()=>{this.drawDebugCanvas()},this._scene.registerBeforeRender(this._registerFunc)),this._registerFunc&&this._debugCanvasContext)){const e=this.getByteFrequencyData();this._debugCanvasContext.fillStyle="rgb(0, 0, 0)",this._debugCanvasContext.fillRect(0,0,this.DEBUGCANVASSIZE.width,this.DEBUGCANVASSIZE.height);for(let t=0;t<this.getFrequencyBinCount();t++){const i=e[t]/this.BARGRAPHAMPLITUDE,a=this.DEBUGCANVASSIZE.height*i,r=this.DEBUGCANVASSIZE.height-a-1,n=this.DEBUGCANVASSIZE.width/this.getFrequencyBinCount(),o=t/this.getFrequencyBinCount()*360;this._debugCanvasContext.fillStyle="hsl("+o+", 100%, 50%)",this._debugCanvasContext.fillRect(t*n,r,n,a)}}}stopDebugCanvas(){this._debugCanvas&&(this._registerFunc&&(this._scene.unregisterBeforeRender(this._registerFunc),this._registerFunc=null),document.body.removeChild(this._debugCanvas),this._debugCanvas=null,this._debugCanvasContext=null)}connectAudioNodes(e,t){this._audioEngine.canUseWebAudio&&(e.connect(this._webAudioAnalyser),this._webAudioAnalyser.connect(t))}dispose(){this._audioEngine.canUseWebAudio&&this._webAudioAnalyser.disconnect()}}class Li{constructor(e,t,s){if(this.loop=!1,this._coneInnerAngle=360,this._coneOuterAngle=360,this._volume=1,this.isPlaying=!1,this.isPaused=!1,this._sounds=[],this._weights=[],t.length!==s.length)throw new Error("Sounds length does not equal weights length");this.loop=e,this._weights=s;let i=0;for(const r of s)i+=r;const a=i>0?1/i:0;for(let r=0;r<this._weights.length;r++)this._weights[r]*=a;this._sounds=t;for(const r of this._sounds)r.onEndedObservable.add(()=>{this._onended()})}get directionalConeInnerAngle(){return this._coneInnerAngle}set directionalConeInnerAngle(e){if(e!==this._coneInnerAngle){if(this._coneOuterAngle<e){D.Error("directionalConeInnerAngle: outer angle of the cone must be superior or equal to the inner angle.");return}this._coneInnerAngle=e;for(const t of this._sounds)t.directionalConeInnerAngle=e}}get directionalConeOuterAngle(){return this._coneOuterAngle}set directionalConeOuterAngle(e){if(e!==this._coneOuterAngle){if(e<this._coneInnerAngle){D.Error("directionalConeOuterAngle: outer angle of the cone must be superior or equal to the inner angle.");return}this._coneOuterAngle=e;for(const t of this._sounds)t.directionalConeOuterAngle=e}}get volume(){return this._volume}set volume(e){if(e!==this._volume)for(const t of this._sounds)t.setVolume(e)}_onended(){this._currentIndex!==void 0&&(this._sounds[this._currentIndex].autoplay=!1),this.loop&&this.isPlaying?this.play():this.isPlaying=!1}pause(){this.isPlaying&&(this.isPaused=!0,this._currentIndex!==void 0&&this._sounds[this._currentIndex].pause())}stop(){this.isPlaying=!1,this._currentIndex!==void 0&&this._sounds[this._currentIndex].stop()}play(e){if(!this.isPaused){this.stop();const s=Math.random();let i=0;for(let a=0;a<this._weights.length;a++)if(i+=this._weights[a],s<=i){this._currentIndex=a;break}}const t=this._sounds[this._currentIndex??0];t.isReady()?t.play(0,this.isPaused?void 0:e):t.autoplay=!0,this.isPlaying=!0,this.isPaused=!1}}class Ni{constructor(e,t){this._scene=e,t instanceof Wt?(this._skeleton=t,this._mesh=null):(this._mesh=t,this._skeleton=t.skeleton)}async bakeVertexData(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=e.reduce((n,o)=>n+o.to-o.from+1,0);if(isNaN(s))throw new Error("Invalid animation ranges.");let i=0;const a=(t+1)*4*4*s,r=new Float32Array(a);this._scene.stopAnimation(this._skeleton),this._skeleton.returnToRest();for(const n of e)for(let o=n.from;o<=n.to;o++)await this._executeAnimationFrame(r,o,i++);return r}async _executeAnimationFrame(e,t,s){return new Promise((i,a)=>{this._scene.beginAnimation(this._skeleton,t,t,!1,1,()=>{const r=this._skeleton.getTransformMatrices(this._mesh);e.set(r,s*r.length),i()})})}textureFromBakedVertexData(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=bt.CreateRGBATexture(e,(t+1)*4,e.length/((t+1)*4*4),this._scene,!1,!1,j.NEAREST_NEAREST,1);return s.name="VAT"+this._skeleton.name,s}serializeBakedVertexDataToObject(e){if(!this._skeleton)throw new Error("No skeleton provided.");const t=this._skeleton.bones.length,s=(t+1)*4,i=e.length/((t+1)*4*4);return{vertexData:rs(e),width:s,height:i}}loadBakedVertexDataFromObject(e){return new Float32Array(ns(e.vertexData))}serializeBakedVertexDataToJSON(e){return JSON.stringify(this.serializeBakedVertexDataToObject(e))}loadBakedVertexDataFromJSON(e){return this.loadBakedVertexDataFromObject(JSON.parse(e))}}class Xe{constructor(e,t=new c,s=0,i=!1){this.direction=e,this.rotatedDirection=t,this.diff=s,this.ignore=i}}class Wi{constructor(e){this._ui=e,this.name="AttachToBoxBehavior",this.distanceAwayFromFace=.15,this.distanceAwayFromBottomOfFace=.15,this._faceVectors=[new Xe(c.Up()),new Xe(c.Down()),new Xe(c.Left()),new Xe(c.Right()),new Xe(c.Forward()),new Xe(c.Forward().scaleInPlace(-1))],this._tmpMatrix=new C,this._tmpVector=new c,this._zeroVector=c.Zero(),this._lookAtTmpMatrix=new C}init(){}_closestFace(e){return this._faceVectors.forEach(t=>{this._target.rotationQuaternion||(this._target.rotationQuaternion=y.RotationYawPitchRoll(this._target.rotation.y,this._target.rotation.x,this._target.rotation.z)),this._target.rotationQuaternion.toRotationMatrix(this._tmpMatrix),c.TransformCoordinatesToRef(t.direction,this._tmpMatrix,t.rotatedDirection),t.diff=c.GetAngleBetweenVectors(t.rotatedDirection,e,c.Cross(t.rotatedDirection,e))}),this._faceVectors.reduce((t,s)=>t.ignore?s:s.ignore||t.diff<s.diff?t:s,this._faceVectors[0])}_lookAtToRef(e,t=new c(0,1,0),s){C.LookAtLHToRef(this._zeroVector,e,t,this._lookAtTmpMatrix),this._lookAtTmpMatrix.invert(),y.FromRotationMatrixToRef(this._lookAtTmpMatrix,s)}attach(e){this._target=e,this._scene=this._target.getScene(),this._onRenderObserver=this._scene.onBeforeRenderObservable.add(()=>{if(!this._scene.activeCamera)return;let t=this._scene.activeCamera.position;this._scene.activeCamera.devicePosition&&(t=this._scene.activeCamera.devicePosition);const s=this._closestFace(t.subtract(e.position));this._scene.activeCamera.leftCamera?this._scene.activeCamera.leftCamera.computeWorldMatrix().getRotationMatrixToRef(this._tmpMatrix):this._scene.activeCamera.computeWorldMatrix().getRotationMatrixToRef(this._tmpMatrix),c.TransformCoordinatesToRef(c.Up(),this._tmpMatrix,this._tmpVector),this._faceVectors.forEach(a=>{s.direction.x&&a.direction.x&&(a.ignore=!0),s.direction.y&&a.direction.y&&(a.ignore=!0),s.direction.z&&a.direction.z&&(a.ignore=!0)});const i=this._closestFace(this._tmpVector);this._faceVectors.forEach(a=>{a.ignore=!1}),this._ui.position.copyFrom(e.position),s.direction.x&&(s.rotatedDirection.scaleToRef(e.scaling.x/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),s.direction.y&&(s.rotatedDirection.scaleToRef(e.scaling.y/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),s.direction.z&&(s.rotatedDirection.scaleToRef(e.scaling.z/2+this.distanceAwayFromFace,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)),this._ui.rotationQuaternion||(this._ui.rotationQuaternion=y.RotationYawPitchRoll(this._ui.rotation.y,this._ui.rotation.x,this._ui.rotation.z)),s.rotatedDirection.scaleToRef(-1,this._tmpVector),this._lookAtToRef(this._tmpVector,i.rotatedDirection,this._ui.rotationQuaternion),i.direction.x&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.x/2,this._tmpVector),i.direction.y&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.y/2,this._tmpVector),i.direction.z&&this._ui.up.scaleToRef(this.distanceAwayFromBottomOfFace-e.scaling.z/2,this._tmpVector),this._ui.position.addInPlace(this._tmpVector)})}detach(){this._scene.onBeforeRenderObservable.remove(this._onRenderObserver)}}class Hi{get delay(){return this.fadeInDelay}set delay(e){this.fadeInDelay=e,this.fadeOutDelay=e}constructor(){this.fadeInDelay=0,this.fadeOutDelay=0,this.fadeInTime=300,this.fadeOutTime=300,this._millisecondsPerFrame=1e3/60,this._hovered=!1,this._hoverValue=0,this._ownerNode=null,this._delay=0,this._time=300,this._update=()=>{if(this._ownerNode){if(this._hoverValue+=this._hovered?this._millisecondsPerFrame:-this._millisecondsPerFrame,this._setAllVisibility(this._ownerNode,(this._hoverValue-this._delay)/this._time),this._ownerNode.visibility>1){if(this._setAllVisibility(this._ownerNode,1),this._hoverValue>this._time){this._hoverValue=this._time,this._detachObserver();return}}else if(this._ownerNode.visibility<0&&(this._setAllVisibility(this._ownerNode,0),this._hoverValue<0)){this._hoverValue=0,this._detachObserver();return}this._attachObserver()}}}get name(){return"FadeInOut"}init(){}attach(e){this._ownerNode=e,this._setAllVisibility(this._ownerNode,0)}detach(){this._ownerNode=null}fadeIn(e=!0){this._delay=e?this.fadeInDelay:this.fadeOutDelay,this._time=e?this.fadeInTime:this.fadeOutTime,this._detachObserver(),!(this._ownerNode&&(e&&this._ownerNode.visibility>=1||!e&&this._ownerNode.visibility<=0))&&(this._hovered=e,this._hovered||(this._delay*=-1),this._ownerNode.visibility>=1?this._hoverValue=this._time:this._ownerNode.visibility<=0&&(this._hoverValue=0),this._update())}fadeOut(){this.fadeIn(!1)}_setAllVisibility(e,t){e.visibility=t,e.getChildMeshes().forEach(s=>{this._setAllVisibility(s,t)})}_attachObserver(){var e;this._onBeforeRenderObserver||(this._onBeforeRenderObserver=(e=this._ownerNode)==null?void 0:e.getScene().onBeforeRenderObservable.add(this._update))}_detachObserver(){var e;this._onBeforeRenderObserver&&((e=this._ownerNode)==null||e.getScene().onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._onBeforeRenderObserver=null)}}class Ui{constructor(){this._startDistance=0,this._initialScale=new c(0,0,0),this._targetScale=new c(0,0,0),this._sceneRenderObserver=null,this._dragBehaviorA=new Qe({}),this._dragBehaviorA.moveAttached=!1,this._dragBehaviorB=new Qe({}),this._dragBehaviorB.moveAttached=!1}get name(){return"MultiPointerScale"}init(){}_getCurrentDistance(){return this._dragBehaviorA.lastDragPosition.subtract(this._dragBehaviorB.lastDragPosition).length()}attach(e){this._ownerNode=e,this._dragBehaviorA.onDragStartObservable.add(()=>{this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging&&(this._dragBehaviorA.currentDraggingPointerId==this._dragBehaviorB.currentDraggingPointerId?this._dragBehaviorA.releaseDrag():(this._initialScale.copyFrom(e.scaling),this._startDistance=this._getCurrentDistance()))}),this._dragBehaviorB.onDragStartObservable.add(()=>{this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging&&(this._dragBehaviorA.currentDraggingPointerId==this._dragBehaviorB.currentDraggingPointerId?this._dragBehaviorB.releaseDrag():(this._initialScale.copyFrom(e.scaling),this._startDistance=this._getCurrentDistance()))}),[this._dragBehaviorA,this._dragBehaviorB].forEach(t=>{t.onDragObservable.add(()=>{if(this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging){const s=this._getCurrentDistance()/this._startDistance;this._initialScale.scaleToRef(s,this._targetScale)}})}),e.addBehavior(this._dragBehaviorA),e.addBehavior(this._dragBehaviorB),this._sceneRenderObserver=e.getScene().onBeforeRenderObservable.add(()=>{if(this._dragBehaviorA.dragging&&this._dragBehaviorB.dragging){const t=this._targetScale.subtract(e.scaling).scaleInPlace(.1);t.length()>.01&&e.scaling.addInPlace(t)}})}detach(){this._ownerNode.getScene().onBeforeRenderObservable.remove(this._sceneRenderObserver),[this._dragBehaviorA,this._dragBehaviorB].forEach(e=>{e.onDragStartObservable.clear(),e.onDragObservable.clear(),this._ownerNode.removeBehavior(e)})}}class ve{constructor(){this._attachedToElement=!1,this._virtualMeshesInfo={},this._tmpVector=new c,this._tmpQuaternion=new y,this._dragType={NONE:0,DRAG:1,DRAG_WITH_CONTROLLER:2,NEAR_DRAG:3},this._moving=!1,this._dragging=this._dragType.NONE,this.draggableMeshes=null,this.zDragFactor=3,this.currentDraggingPointerIds=[],this.detachCameraControls=!0,this.onDragStartObservable=new N,this.onDragObservable=new N,this.onDragEndObservable=new N,this.allowMultiPointer=!0}get currentDraggingPointerId(){return this.currentDraggingPointerIds[0]!==void 0?this.currentDraggingPointerIds[0]:-1}set currentDraggingPointerId(e){this.currentDraggingPointerIds[0]=e}get currentDraggingPointerID(){return this.currentDraggingPointerId}set currentDraggingPointerID(e){this.currentDraggingPointerId=e}get name(){return"BaseSixDofDrag"}get isMoving(){return this._moving}init(){}get _pointerCamera(){return this._scene.cameraToUseForPointers?this._scene.cameraToUseForPointers:this._scene.activeCamera}_createVirtualMeshInfo(){const e=new X("",ve._virtualScene);e.rotationQuaternion=new y;const t=new X("",ve._virtualScene);t.rotationQuaternion=new y;const s=new X("",ve._virtualScene);return s.rotationQuaternion=new y,{dragging:!1,moving:!1,dragMesh:e,originMesh:t,pivotMesh:s,startingPivotPosition:new c,startingPivotOrientation:new y,startingPosition:new c,startingOrientation:new y,lastOriginPosition:new c,lastDragPosition:new c}}_resetVirtualMeshesPosition(){for(let e=0;e<this.currentDraggingPointerIds.length;e++)this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint()),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.rotationQuaternion),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPivotPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.position),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPivotOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].pivotMesh.rotationQuaternion),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].dragMesh.position),this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].startingOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[e]].dragMesh.rotationQuaternion)}_pointerUpdate2D(e,t,s){this._pointerCamera&&this._pointerCamera.cameraRigMode==lt.RIG_MODE_NONE&&!this._pointerCamera._isLeftCamera&&!this._pointerCamera._isRightCamera&&(e.origin.copyFrom(this._pointerCamera.globalPosition),s=0);const i=this._virtualMeshesInfo[t],a=d.Vector3[0];e.origin.subtractToRef(i.lastOriginPosition,a),i.lastOriginPosition.copyFrom(e.origin);const r=-c.Dot(a,e.direction);i.originMesh.addChild(i.dragMesh),i.originMesh.addChild(i.pivotMesh),this._applyZOffset(i.dragMesh,r,s),this._applyZOffset(i.pivotMesh,r,s),i.originMesh.position.copyFrom(e.origin);const n=d.Vector3[0];e.origin.addToRef(e.direction,n),i.originMesh.lookAt(n),i.originMesh.removeChild(i.dragMesh),i.originMesh.removeChild(i.pivotMesh)}_pointerUpdateXR(e,t,s,i){const a=this._virtualMeshesInfo[s];if(a.originMesh.position.copyFrom(e.position),this._dragging===this._dragType.NEAR_DRAG&&t?a.originMesh.rotationQuaternion.copyFrom(t.rotationQuaternion):a.originMesh.rotationQuaternion.copyFrom(e.rotationQuaternion),a.pivotMesh.computeWorldMatrix(!0),a.dragMesh.computeWorldMatrix(!0),i!==0){const r=d.Vector3[0],n=d.Vector3[1];r.copyFrom(this._pointerCamera.getForwardRay().direction),a.originMesh.position.subtractToRef(a.lastOriginPosition,n),a.lastOriginPosition.copyFrom(a.originMesh.position);const o=n.length();n.normalize();const h=d.Vector3[2],l=d.Vector3[3];a.dragMesh.absolutePosition.subtractToRef(this._pointerCamera.globalPosition,h),a.dragMesh.absolutePosition.subtractToRef(a.originMesh.position,l);const u=l.length();h.normalize(),l.normalize();let _=Math.abs(c.Dot(n,l))*c.Dot(n,r)*i*o*u;const f=.01;_<0&&f-u>_&&(_=Math.min(f-u,0)),l.scaleInPlace(_),l.addToRef(a.pivotMesh.absolutePosition,this._tmpVector),a.pivotMesh.setAbsolutePosition(this._tmpVector),l.addToRef(a.dragMesh.absolutePosition,this._tmpVector),a.dragMesh.setAbsolutePosition(this._tmpVector)}}attach(e){this._ownerNode=e,this._scene=this._ownerNode.getScene(),ve._virtualScene||(ve._virtualScene=new os(this._scene.getEngine(),{virtual:!0}),ve._virtualScene.detachControl());const t=s=>this._ownerNode===s||s.isDescendantOf(this._ownerNode)&&(!this.draggableMeshes||this.draggableMeshes.indexOf(s)!==-1);this._pointerObserver=this._scene.onPointerObservable.add(s=>{const i=s.event.pointerId;this._virtualMeshesInfo[i]||(this._virtualMeshesInfo[i]=this._createVirtualMeshInfo());const a=this._virtualMeshesInfo[i],r=s.event.pointerType==="xr-near"||s.event.pointerType==="xr";if(s.type==Ke.POINTERDOWN){if(!a.dragging&&s.pickInfo&&s.pickInfo.hit&&s.pickInfo.pickedMesh&&s.pickInfo.pickedPoint&&s.pickInfo.ray&&(!r||s.pickInfo.aimTransform)&&t(s.pickInfo.pickedMesh)){if((!this.allowMultiPointer||r)&&this.currentDraggingPointerIds.length>0)return;this._pointerCamera&&this._pointerCamera.cameraRigMode===lt.RIG_MODE_NONE&&!this._pointerCamera._isLeftCamera&&!this._pointerCamera._isRightCamera&&s.pickInfo.ray.origin.copyFrom(this._pointerCamera.globalPosition),this._ownerNode.computeWorldMatrix(!0);const n=this._virtualMeshesInfo[i];r?(this._dragging=s.pickInfo.originMesh?this._dragType.NEAR_DRAG:this._dragType.DRAG_WITH_CONTROLLER,n.originMesh.position.copyFrom(s.pickInfo.aimTransform.position),this._dragging===this._dragType.NEAR_DRAG&&s.pickInfo.gripTransform?n.originMesh.rotationQuaternion.copyFrom(s.pickInfo.gripTransform.rotationQuaternion):n.originMesh.rotationQuaternion.copyFrom(s.pickInfo.aimTransform.rotationQuaternion)):(this._dragging=this._dragType.DRAG,n.originMesh.position.copyFrom(s.pickInfo.ray.origin)),n.lastOriginPosition.copyFrom(n.originMesh.position),n.dragMesh.position.copyFrom(s.pickInfo.pickedPoint),n.lastDragPosition.copyFrom(s.pickInfo.pickedPoint),n.pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint()),n.pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.absoluteRotationQuaternion),n.startingPosition.copyFrom(n.dragMesh.position),n.startingPivotPosition.copyFrom(n.pivotMesh.position),n.startingOrientation.copyFrom(n.dragMesh.rotationQuaternion),n.startingPivotOrientation.copyFrom(n.pivotMesh.rotationQuaternion),r?(n.originMesh.addChild(n.dragMesh),n.originMesh.addChild(n.pivotMesh)):n.originMesh.lookAt(n.dragMesh.position),n.dragging=!0,this.currentDraggingPointerIds.indexOf(i)===-1&&this.currentDraggingPointerIds.push(i),this.detachCameraControls&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._pointerCamera.inputs&&this._pointerCamera.inputs.attachedToElement?(this._pointerCamera.detachControl(),this._attachedToElement=!0):(!this.allowMultiPointer||this.currentDraggingPointerIds.length===0)&&(this._attachedToElement=!1)),this._targetDragStart(n.pivotMesh.position,n.pivotMesh.rotationQuaternion,i),this.onDragStartObservable.notifyObservers({position:n.pivotMesh.position})}}else if(s.type==Ke.POINTERUP||s.type==Ke.POINTERDOUBLETAP){const n=this.currentDraggingPointerIds.indexOf(i);a.dragging=!1,n!==-1&&(this.currentDraggingPointerIds.splice(n,1),this.currentDraggingPointerIds.length===0&&(this._moving=!1,this._dragging=this._dragType.NONE,this.detachCameraControls&&this._attachedToElement&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._reattachCameraControls(),this._attachedToElement=!1)),a.originMesh.removeChild(a.dragMesh),a.originMesh.removeChild(a.pivotMesh),this._targetDragEnd(i),this.onDragEndObservable.notifyObservers({}))}else if(s.type==Ke.POINTERMOVE&&this.currentDraggingPointerIds.indexOf(i)!==-1&&a.dragging&&s.pickInfo&&(s.pickInfo.ray||s.pickInfo.aimTransform)){let o=this.zDragFactor;(this.currentDraggingPointerIds.length>1||s.pickInfo.originMesh)&&(o=0),this._ownerNode.computeWorldMatrix(!0),r?this._pointerUpdateXR(s.pickInfo.aimTransform,s.pickInfo.gripTransform,i,o):this._pointerUpdate2D(s.pickInfo.ray,i,o),this._tmpQuaternion.copyFrom(a.startingPivotOrientation),this._tmpQuaternion.x=-this._tmpQuaternion.x,this._tmpQuaternion.y=-this._tmpQuaternion.y,this._tmpQuaternion.z=-this._tmpQuaternion.z,a.pivotMesh.absoluteRotationQuaternion.multiplyToRef(this._tmpQuaternion,this._tmpQuaternion),a.pivotMesh.absolutePosition.subtractToRef(a.startingPivotPosition,this._tmpVector),this.onDragObservable.notifyObservers({delta:this._tmpVector,position:a.pivotMesh.position,pickInfo:s.pickInfo}),this._targetDrag(this._tmpVector,this._tmpQuaternion,i),a.lastDragPosition.copyFrom(a.dragMesh.absolutePosition),this._moving=!0}})}_applyZOffset(e,t,s){e.position.z-=e.position.z<1?t*s:t*s*e.position.z,e.position.z<0&&(e.position.z=0)}_targetDragStart(e,t,s){}_targetDrag(e,t,s){}_targetDragEnd(e){}_reattachCameraControls(){if(this._pointerCamera)if(this._pointerCamera.getClassName()==="ArcRotateCamera"){const e=this._pointerCamera;e.attachControl(e.inputs?e.inputs.noPreventDefault:!0,e._useCtrlForPanning,e._panningMouseButton)}else this._pointerCamera.attachControl(this._pointerCamera.inputs?this._pointerCamera.inputs.noPreventDefault:!0)}detach(){this._scene&&(this.detachCameraControls&&this._attachedToElement&&this._pointerCamera&&!this._pointerCamera.leftCamera&&(this._reattachCameraControls(),this._attachedToElement=!1),this._scene.onPointerObservable.remove(this._pointerObserver));for(const e in this._virtualMeshesInfo)this._virtualMeshesInfo[e].originMesh.dispose(),this._virtualMeshesInfo[e].dragMesh.dispose();this.onDragEndObservable.clear(),this.onDragObservable.clear(),this.onDragStartObservable.clear()}}class oi extends ve{constructor(){super(...arguments),this._sceneRenderObserver=null,this._targetPosition=new c(0,0,0),this._targetOrientation=new y,this._targetScaling=new c(1,1,1),this._startingPosition=new c(0,0,0),this._startingOrientation=new y,this._startingScaling=new c(1,1,1),this.onPositionChangedObservable=new N,this.dragDeltaRatio=.2,this.rotateDraggedObject=!0,this.rotateAroundYOnly=!1,this.rotateWithMotionController=!0,this.disableMovement=!1,this.faceCameraOnDragStart=!1}get name(){return"SixDofDrag"}attach(e){super.attach(e),e.isNearGrabbable=!0,e.getChildMeshes().forEach(t=>{t.isNearGrabbable=!0}),this._virtualTransformNode=new X("virtual_sixDof",ve._virtualScene),this._virtualTransformNode.rotationQuaternion=y.Identity(),this._sceneRenderObserver=e.getScene().onBeforeRenderObservable.add(()=>{if(this.currentDraggingPointerIds.length===1&&this._moving&&!this.disableMovement){const t=d.Vector3[0];t.copyFrom(this._targetPosition).subtractInPlace(e.absolutePosition).scaleInPlace(this.dragDeltaRatio);const s=d.Vector3[1];if(s.copyFrom(t),e.parent){const i=d.Matrix[0];e.parent.absoluteRotationQuaternion.toRotationMatrix(i),i.invert(),c.TransformNormalToRef(t,i,s)}if(e.position.addInPlace(s),this.onPositionChangedObservable.notifyObservers({position:e.absolutePosition}),!e.parent||e.parent.scaling&&!e.parent.scaling.isNonUniformWithinEpsilon(.001)){const i=d.Quaternion[0];if(i.copyFrom(this._targetOrientation),e.parent){const a=d.Quaternion[0];a.copyFrom(e.parent.absoluteRotationQuaternion),a.invertInPlace(),a.multiplyToRef(this._targetOrientation,i)}y.SlerpToRef(e.rotationQuaternion,i,this.dragDeltaRatio,e.rotationQuaternion)}}})}_getPositionOffsetAround(e,t,s){const i=d.Matrix[0],a=d.Matrix[1],r=d.Matrix[2],n=d.Matrix[3],o=d.Matrix[4];return C.TranslationToRef(e.x,e.y,e.z,i),C.TranslationToRef(-e.x,-e.y,-e.z,a),C.FromQuaternionToRef(s,r),C.ScalingToRef(t,t,t,n),a.multiplyToRef(r,o),o.multiplyToRef(n,o),o.multiplyToRef(i,o),o.getTranslation()}_onePointerPositionUpdated(e,t){d.Vector3[0].setAll(0),this._dragging===this._dragType.DRAG?this.rotateDraggedObject&&(this.rotateAroundYOnly?y.RotationYawPitchRollToRef(t.toEulerAngles().y,0,0,d.Quaternion[0]):d.Quaternion[0].copyFrom(t),d.Quaternion[0].multiplyToRef(this._startingOrientation,this._targetOrientation)):(this._dragging===this._dragType.NEAR_DRAG||this._dragging===this._dragType.DRAG_WITH_CONTROLLER&&this.rotateWithMotionController)&&t.multiplyToRef(this._startingOrientation,this._targetOrientation),this._targetPosition.copyFrom(this._startingPosition).addInPlace(e)}_twoPointersPositionUpdated(){const e=this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].startingPosition,t=this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].startingPosition,s=d.Vector3[0];e.addToRef(t,s),s.scaleInPlace(.5);const i=d.Vector3[1];t.subtractToRef(e,i);const a=this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].dragMesh.absolutePosition,r=this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].dragMesh.absolutePosition,n=d.Vector3[2];a.addToRef(r,n),n.scaleInPlace(.5);const o=d.Vector3[3];r.subtractToRef(a,o);const h=o.length()/i.length(),l=n.subtract(s),u=y.FromEulerAngles(0,c.GetAngleBetweenVectorsOnPlane(i.normalize(),o.normalize(),c.UpReadOnly),0),g=this._ownerNode.parent;this._ownerNode.setParent(null);const _=this._getPositionOffsetAround(s.subtract(this._virtualTransformNode.getAbsolutePivotPoint()),h,u);this._virtualTransformNode.rotationQuaternion.multiplyToRef(u,this._ownerNode.rotationQuaternion),this._virtualTransformNode.scaling.scaleToRef(h,this._ownerNode.scaling),this._virtualTransformNode.position.addToRef(l.addInPlace(_),this._ownerNode.position),this.onPositionChangedObservable.notifyObservers({position:this._ownerNode.position}),this._ownerNode.setParent(g)}_targetDragStart(){const e=this.currentDraggingPointerIds.length;this._ownerNode.rotationQuaternion||(this._ownerNode.rotationQuaternion=y.RotationYawPitchRoll(this._ownerNode.rotation.y,this._ownerNode.rotation.x,this._ownerNode.rotation.z));const t=this._ownerNode.getAbsolutePivotPoint();if(e===1){if(this._targetPosition.copyFrom(this._ownerNode.absolutePosition),this._targetOrientation.copyFrom(this._ownerNode.rotationQuaternion),this._targetScaling.copyFrom(this._ownerNode.absoluteScaling),this.faceCameraOnDragStart&&this._scene.activeCamera){const s=d.Vector3[0];this._scene.activeCamera.position.subtractToRef(t,s),s.normalize();const i=d.Quaternion[0];this._scene.useRightHandedSystem?y.FromLookDirectionRHToRef(s,new c(0,1,0),i):y.FromLookDirectionLHToRef(s,new c(0,1,0),i),i.normalize(),y.RotationYawPitchRollToRef(i.toEulerAngles().y,0,0,d.Quaternion[0]),this._targetOrientation.copyFrom(d.Quaternion[0])}this._startingPosition.copyFrom(this._targetPosition),this._startingOrientation.copyFrom(this._targetOrientation),this._startingScaling.copyFrom(this._targetScaling)}else e===2&&(this._virtualTransformNode.setPivotPoint(new c(0,0,0),0),this._virtualTransformNode.position.copyFrom(this._ownerNode.absolutePosition),this._virtualTransformNode.scaling.copyFrom(this._ownerNode.absoluteScaling),this._virtualTransformNode.rotationQuaternion.copyFrom(this._ownerNode.absoluteRotationQuaternion),this._virtualTransformNode.setPivotPoint(t,1),this._resetVirtualMeshesPosition())}_targetDrag(e,t){this.currentDraggingPointerIds.length===1?this._onePointerPositionUpdated(e,t):this.currentDraggingPointerIds.length===2&&this._twoPointersPositionUpdated()}_targetDragEnd(){if(this.currentDraggingPointerIds.length===1){this._resetVirtualMeshesPosition();const e=this.faceCameraOnDragStart;this.faceCameraOnDragStart=!1,this._targetDragStart(),this.faceCameraOnDragStart=e}}detach(){super.detach(),this._ownerNode&&this._ownerNode.getScene().onBeforeRenderObservable.remove(this._sceneRenderObserver),this._virtualTransformNode&&this._virtualTransformNode.dispose()}}class Qi{constructor(){this._attachPointLocalOffset=new c,this._workingPosition=new c,this._workingQuaternion=new y,this._lastTick=-1,this._hit=!1,this.hitNormalOffset=.05,this.meshes=[],this.interpolatePose=!0,this.lerpTime=250,this.keepOrientationVertical=!0,this.enabled=!0,this.maxStickingDistance=.8}get name(){return"SurfaceMagnetism"}init(){}attach(e,t){this._attachedMesh=e,this._scene=t||e.getScene(),this._attachedMesh.rotationQuaternion||(this._attachedMesh.rotationQuaternion=y.RotationYawPitchRoll(this._attachedMesh.rotation.y,this._attachedMesh.rotation.x,this._attachedMesh.rotation.z)),this.updateAttachPoint(),this._workingPosition.copyFrom(this._attachedMesh.position),this._workingQuaternion.copyFrom(this._attachedMesh.rotationQuaternion),this._addObservables()}detach(){this._attachedMesh=null,this._removeObservables()}_getTargetPose(e){if(!this._attachedMesh)return null;if(e&&e.hit){const t=e.getNormal(!0,!0),s=e.pickedPoint;if(!t||!s)return null;t.normalize();const i=d.Vector3[0];return i.copyFrom(t),i.scaleInPlace(this.hitNormalOffset),i.addInPlace(s),this._attachedMesh.parent&&(d.Matrix[0].copyFrom(this._attachedMesh.parent.getWorldMatrix()).invert(),c.TransformNormalToRef(i,d.Matrix[0],i)),{position:i,quaternion:y.RotationYawPitchRoll(-Math.atan2(t.x,-t.z),this.keepOrientationVertical?0:Math.atan2(t.y,Math.sqrt(t.z*t.z+t.x*t.x)),0)}}return null}updateAttachPoint(){this._getAttachPointOffsetToRef(this._attachPointLocalOffset)}findAndUpdateTarget(e){if(this._hit=!1,!e.ray)return!1;const t=e.ray.intersectsMeshes(this.meshes)[0];if(this._attachedMesh&&t&&t.hit&&t.pickedMesh){const s=this._getTargetPose(t);s&&c.Distance(this._attachedMesh.position,s.position)<this.maxStickingDistance&&(this._workingPosition.copyFrom(s.position),this._workingQuaternion.copyFrom(s.quaternion),this._hit=!0)}return this._hit}_getAttachPointOffsetToRef(e){if(!this._attachedMesh){e.setAll(0);return}const t=d.Quaternion[0];t.copyFrom(this._attachedMesh.rotationQuaternion),this._attachedMesh.rotationQuaternion.copyFromFloats(0,0,0,1),this._attachedMesh.computeWorldMatrix();const s=this._attachedMesh.getHierarchyBoundingVectors(),i=d.Vector3[0];s.max.addToRef(s.min,i),i.scaleInPlace(.5),i.z=s.max.z;const a=d.Matrix[0];this._attachedMesh.getWorldMatrix().invertToRef(a),c.TransformCoordinatesToRef(i,a,e),this._attachedMesh.rotationQuaternion.copyFrom(t)}_updateTransformToGoal(e){if(!this._attachedMesh||!this._hit)return;const t=this._attachedMesh.parent;this._attachedMesh.setParent(null);const s=d.Vector3[0];if(c.TransformNormalToRef(this._attachPointLocalOffset,this._attachedMesh.getWorldMatrix(),s),!this.interpolatePose){this._attachedMesh.position.copyFrom(this._workingPosition).subtractInPlace(s),this._attachedMesh.rotationQuaternion.copyFrom(this._workingQuaternion);return}const i=new c;c.SmoothToRef(this._attachedMesh.position,this._workingPosition,e,this.lerpTime,i),this._attachedMesh.position.copyFrom(i);const a=new y;a.copyFrom(this._attachedMesh.rotationQuaternion),y.SmoothToRef(a,this._workingQuaternion,e,this.lerpTime,this._attachedMesh.rotationQuaternion),this._attachedMesh.setParent(t)}_addObservables(){this._pointerObserver=this._scene.onPointerObservable.add(e=>{this.enabled&&e.type==Ke.POINTERMOVE&&e.pickInfo&&this.findAndUpdateTarget(e.pickInfo)}),this._lastTick=Date.now(),this._onBeforeRender=this._scene.onBeforeRenderObservable.add(()=>{const e=Date.now();this._updateTransformToGoal(e-this._lastTick),this._lastTick=e})}_removeObservables(){this._scene.onPointerObservable.remove(this._pointerObserver),this._scene.onBeforeRenderObservable.remove(this._onBeforeRender),this._pointerObserver=null,this._onBeforeRender=null}}class ji{constructor(){this._tmpQuaternion=new y,this._tmpVectors=[new c,new c,new c,new c,new c,new c,new c],this._tmpMatrix=new C,this._tmpInvertView=new C,this._tmpForward=new c,this._tmpNodeForward=new c,this._tmpPosition=new c,this._workingPosition=new c,this._workingQuaternion=new y,this._lastTick=-1,this._recenterNextUpdate=!0,this.interpolatePose=!0,this.lerpTime=500,this.ignoreCameraPitchAndRoll=!1,this.pitchOffset=15,this.maxViewVerticalDegrees=30,this.maxViewHorizontalDegrees=30,this.orientToCameraDeadzoneDegrees=60,this.ignoreDistanceClamp=!1,this.ignoreAngleClamp=!1,this.verticalMaxDistance=0,this.defaultDistance=.8,this.maximumDistance=2,this.minimumDistance=.3,this.useFixedVerticalOffset=!1,this.fixedVerticalOffset=0,this._enabled=!0}get followedCamera(){return this._followedCamera||this._scene.activeCamera}set followedCamera(e){this._followedCamera=e}get name(){return"Follow"}init(){}attach(e,t){this._scene=e.getScene(),this.attachedNode=e,t&&(this.followedCamera=t),this._addObservables()}detach(){this.attachedNode=null,this._removeObservables()}recenter(){this._recenterNextUpdate=!0}_angleBetweenVectorAndPlane(e,t){return this._tmpVectors[0].copyFrom(e),e=this._tmpVectors[0],this._tmpVectors[1].copyFrom(t),t=this._tmpVectors[1],e.normalize(),t.normalize(),Math.PI/2-Math.acos(c.Dot(e,t))}_length2D(e){return Math.sqrt(e.x*e.x+e.z*e.z)}_distanceClamp(e,t=!1){let s=this.minimumDistance,i=this.maximumDistance;const a=this.defaultDistance,r=this._tmpVectors[0];r.copyFrom(e);let n=r.length();if(r.normalizeFromLength(n),this.ignoreCameraPitchAndRoll){s=this._length2D(r)*s,i=this._length2D(r)*i;const h=this._length2D(e);r.scaleInPlace(n/h),n=h}let o=n;return t?o=a:o=vt(n,s,i),e.copyFrom(r).scaleInPlace(o),n!==o}_applyVerticalClamp(e){this.verticalMaxDistance!==0&&(e.y=vt(e.y,-this.verticalMaxDistance,this.verticalMaxDistance))}_toOrientationQuatToRef(e,t){y.RotationYawPitchRollToRef(Math.atan2(e.x,e.z),Math.atan2(e.y,Math.sqrt(e.z*e.z+e.x*e.x)),0,t)}_applyPitchOffset(e){const t=this._tmpVectors[0],s=this._tmpVectors[1];t.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),s.copyFromFloats(1,0,0),c.TransformNormalToRef(t,e,t),t.y=0,t.normalize(),c.TransformNormalToRef(s,e,s),y.RotationAxisToRef(s,this.pitchOffset*Math.PI/180,this._tmpQuaternion),t.rotateByQuaternionToRef(this._tmpQuaternion,t),this._toOrientationQuatToRef(t,this._tmpQuaternion),this._tmpQuaternion.toRotationMatrix(this._tmpMatrix),e.copyFrom(this._tmpMatrix)}_angularClamp(e,t){const s=this._tmpVectors[5];s.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1);const i=this._tmpVectors[6];i.copyFromFloats(1,0,0),c.TransformNormalToRef(s,e,s),c.TransformNormalToRef(i,e,i);const a=c.UpReadOnly;if(t.length()<ne)return!1;let n=!1;const o=this._tmpQuaternion;if(this.ignoreCameraPitchAndRoll){const u=c.GetAngleBetweenVectorsOnPlane(t,s,i);y.RotationAxisToRef(i,u,o),t.rotateByQuaternionToRef(o,t)}else{const u=-c.GetAngleBetweenVectorsOnPlane(t,s,i),g=this.maxViewVerticalDegrees*Math.PI/180*.5;u<-g?(y.RotationAxisToRef(i,-u-g,o),t.rotateByQuaternionToRef(o,t),n=!0):u>g&&(y.RotationAxisToRef(i,-u+g,o),t.rotateByQuaternionToRef(o,t),n=!0)}const h=this._angleBetweenVectorAndPlane(t,i)*(this._scene.useRightHandedSystem?-1:1),l=this.maxViewHorizontalDegrees*Math.PI/180*.5;return h<-l?(y.RotationAxisToRef(a,-h-l,o),t.rotateByQuaternionToRef(o,t),n=!0):h>l&&(y.RotationAxisToRef(a,-h+l,o),t.rotateByQuaternionToRef(o,t),n=!0),n}_orientationClamp(e,t){var n;const s=this._tmpVectors[0];s.copyFrom(e).scaleInPlace(-1).normalize();const i=this._tmpVectors[1],a=this._tmpVectors[2];i.copyFromFloats(0,1,0),c.CrossToRef(s,i,a);const r=a.length();r<ne||(a.normalizeFromLength(r),c.CrossToRef(a,s,i),(n=this.attachedNode)!=null&&n.getScene().useRightHandedSystem?y.FromLookDirectionRHToRef(s,i,t):y.FromLookDirectionLHToRef(s,i,t))}_passedOrientationDeadzone(e,t){const s=this._tmpVectors[5];return s.copyFrom(e),s.normalize(),Math.abs(c.GetAngleBetweenVectorsOnPlane(t,s,c.UpReadOnly))*180/Math.PI>this.orientToCameraDeadzoneDegrees}_updateLeashing(e){if(this.attachedNode&&this._enabled){const t=this.attachedNode.parent;this.attachedNode.setParent(null);const s=this.attachedNode.getWorldMatrix(),i=this._workingPosition,a=this._workingQuaternion,r=this.attachedNode.getPivotPoint(),n=this._tmpInvertView;n.copyFrom(e.getViewMatrix()),n.invert(),c.TransformCoordinatesToRef(r,s,i);const o=this._tmpPosition;o.copyFromFloats(0,0,0),c.TransformCoordinatesToRef(o,s,o),o.scaleInPlace(-1).subtractInPlace(r),i.subtractInPlace(e.globalPosition),this.ignoreCameraPitchAndRoll&&this._applyPitchOffset(n);let h=!1;const l=this._tmpForward;l.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),c.TransformNormalToRef(l,n,l);const u=this._tmpNodeForward;if(u.copyFromFloats(0,0,this._scene.useRightHandedSystem?-1:1),c.TransformNormalToRef(u,s,u),this._recenterNextUpdate)i.copyFrom(l).scaleInPlace(this.defaultDistance);else if(this.ignoreAngleClamp){const _=i.length();i.copyFrom(l).scaleInPlace(_)}else h=this._angularClamp(n,i);let g=!1;this.ignoreDistanceClamp||(g=this._distanceClamp(i,h),this._applyVerticalClamp(i)),this.useFixedVerticalOffset&&(i.y=o.y-e.globalPosition.y+this.fixedVerticalOffset),(h||g||this._passedOrientationDeadzone(i,u)||this._recenterNextUpdate)&&this._orientationClamp(i,a),this._workingPosition.subtractInPlace(r),this._recenterNextUpdate=!1,this.attachedNode.setParent(t)}}_updateTransformToGoal(e){if(!this.attachedNode||!this.followedCamera||!this._enabled)return;this.attachedNode.rotationQuaternion||(this.attachedNode.rotationQuaternion=y.Identity());const t=this.attachedNode.parent;if(this.attachedNode.setParent(null),!this.interpolatePose){this.attachedNode.position.copyFrom(this.followedCamera.globalPosition).addInPlace(this._workingPosition),this.attachedNode.rotationQuaternion.copyFrom(this._workingQuaternion);return}const s=new c;s.copyFrom(this.attachedNode.position).subtractInPlace(this.followedCamera.globalPosition),c.SmoothToRef(s,this._workingPosition,e,this.lerpTime,s),s.addInPlace(this.followedCamera.globalPosition),this.attachedNode.position.copyFrom(s);const i=new y;i.copyFrom(this.attachedNode.rotationQuaternion),y.SmoothToRef(i,this._workingQuaternion,e,this.lerpTime,this.attachedNode.rotationQuaternion),this.attachedNode.setParent(t)}_addObservables(){this._lastTick=Date.now(),this._onBeforeRender=this._scene.onBeforeRenderObservable.add(()=>{if(!this.followedCamera)return;const e=Date.now();this._updateLeashing(this.followedCamera),this._updateTransformToGoal(e-this._lastTick),this._lastTick=e})}_removeObservables(){this._onBeforeRender&&this._scene.onBeforeRenderObservable.remove(this._onBeforeRender)}}class qi extends hs{set distanceBetweenEyes(e){this._distanceBetweenEyes=e}get distanceBetweenEyes(){return this._distanceBetweenEyes}set distanceToProjectionPlane(e){this._distanceToProjectionPlane=e}get distanceToProjectionPlane(){return this._distanceToProjectionPlane}constructor(e,t,s,i=1,a=.065){super(e,t,s),this._distanceBetweenEyes=a,this._distanceToProjectionPlane=i,this.setCameraRigMode(lt.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL,{stereoHalfAngle:0}),this._cameraRigParams.stereoHalfAngle=0,this._cameraRigParams.interaxialDistance=a}getClassName(){return"StereoscopicUniversalCamera"}createRigCamera(e){const t=new ls(e,c.Zero(),this.getScene()),s=new X("tm_"+e,this.getScene());return t.parent=s,s.setPivotMatrix(C.Identity(),!1),t.isRigCamera=!0,t.rigParent=this,t}_updateRigCameras(){for(let e=0;e<this._rigCameras.length;e++){const t=this._rigCameras[e];t.minZ=this.minZ,t.maxZ=this.maxZ,t.fov=this.fov,t.upVector.copyFrom(this.upVector),t.rotationQuaternion?t.rotationQuaternion.copyFrom(this.rotationQuaternion):t.rotation.copyFrom(this.rotation),this._updateCamera(this._rigCameras[e],e)}}_updateCamera(e,t){const s=this.distanceBetweenEyes/2,i=s/this.distanceToProjectionPlane;e.position.copyFrom(this.position),e.position.addInPlaceFromFloats(t===0?-s:s,0,-this._distanceToProjectionPlane);const a=e.parent,r=a.getPivotMatrix();r.setTranslationFromFloats(t===0?s:-s,0,0),r.setRowFromFloats(2,t===0?i:-i,0,1,0),a.setPivotMatrix(r,!1)}_setRigMode(){this._rigCameras[0].viewport=new Rt(0,0,.5,1),this._rigCameras[1].viewport=new Rt(.5,0,.5,1);for(let e=0;e<this._rigCameras.length;e++)this._updateCamera(this._rigCameras[e],e)}}class Zt{constructor(e=c.Zero(),t=c.Up()){this.position=e,this.normal=t}clone(){return new Zt(this.position.clone(),this.normal.clone())}}class Xt{constructor(e=c.Zero(),t=c.Up(),s=at.Zero()){this.position=e,this.normal=t,this.uv=s}clone(){return new Xt(this.position.clone(),this.normal.clone(),this.uv.clone())}}class Zi{constructor(e){this._engine=e}async _initializePlatform(){if(!this._platform)if(this._engine.getCaps().supportComputeShaders){const e=await M(()=>Promise.resolve().then(()=>li),void 0);this._platform=new e.ComputeShaderBoundingHelper(this._engine)}else if(this._engine.getCaps().supportTransformFeedbacks){const e=await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.za),__vite__mapDeps([0,1,2]));this._platform=new e.TransformFeedbackBoundingHelper(this._engine)}else throw new Error("Your engine does not support Compute Shaders or Transform Feedbacks")}async computeAsync(e){return await this._initializePlatform(),this._platform.processAsync(e)}async batchInitializeAsync(e){return await this._initializePlatform(),this._platform.registerMeshListAsync(e)}batchProcess(){this._platform.processMeshList()}async batchFetchResultsAsync(){return this._platform.fetchResultsForMeshListAsync()}dispose(){this._platform.dispose()}}class hi{constructor(e){this._computeShadersCache={},this._positionBuffers={},this._indexBuffers={},this._weightBuffers={},this._indexExtraBuffers={},this._weightExtraBuffers={},this._morphTargetInfluenceBuffers={},this._morphTargetTextureIndexBuffers={},this._ubos=[],this._uboIndex=0,this._processedMeshes=[],this._computeShaders=[],this._uniqueComputeShaders=new Set,this._resultBuffers=[],this._engine=e}_getComputeShader(e,t,s){let i;const a=e.join(`
`);if(this._computeShadersCache[a])i=this._computeShadersCache[a];else{const r={positionBuffer:{group:0,binding:0},resultBuffer:{group:0,binding:1},settings:{group:0,binding:7}};t&&(r.boneSampler={group:0,binding:2},r.indexBuffer={group:0,binding:3},r.weightBuffer={group:0,binding:4},r.indexExtraBuffer={group:0,binding:5},r.weightExtraBuffer={group:0,binding:6}),s&&(r.morphTargets={group:0,binding:8},r.morphTargetInfluences={group:0,binding:9},r.morphTargetTextureIndices={group:0,binding:10}),i=new cs(`boundingInfoCompute${t?"_bones":""}${s?"_morphs":""}`,this._engine,"boundingInfo",{bindingsMapping:r,defines:e}),this._computeShadersCache[a]=i}return i}_getUBO(){if(this._uboIndex>=this._ubos.length){const e=new ds(this._engine);e.addFloat3("morphTargetTextureInfo",0,0,0),e.addUniform("morphTargetCount",1),e.addUniform("indexResult",1),this._ubos.push(e)}return this._ubos[this._uboIndex++]}_extractDataAndLink(e,t,s,i,a,r){var h;let n;const o=t.getTotalVertices();if(r[t.uniqueId])n=r[t.uniqueId];else{const l=(h=t.getVertexBuffer(s))==null?void 0:h.getFloatData(o);n=new dt(this._engine,Float32Array.BYTES_PER_ELEMENT*o*i),n.update(l),r[t.uniqueId]=n}e.setStorageBuffer(a,n)}_prepareStorage(e,t,s,i,a,r){let n;i[s]?n=i[s]:(n=new dt(this._engine,Float32Array.BYTES_PER_ELEMENT*a),i[s]=n),n.update(r),e.setStorageBuffer(t,n)}async processAsync(e){await this.registerMeshListAsync(e),this.processMeshList(),await this.fetchResultsForMeshListAsync()}registerMeshListAsync(e){this._disposeForMeshList(),Array.isArray(e)||(e=[e]);let t=0;for(let s=0;s<e.length;s++){const i=e[s];if(i.getTotalVertices()===0||!i.getVertexBuffer||!i.getVertexBuffer(E.PositionKind))continue;this._processedMeshes.push(i);const r=i.morphTargetManager;r&&(t=Math.max(t,r.numTargets))}for(let s=0;s<this._processedMeshes.length;s++){const i=this._processedMeshes[s];let a=[""],r=!1;i&&i.useBones&&i.computeBonesUsingShaders&&i.skeleton&&(a.push("#define NUM_BONE_INFLUENCERS "+i.numBoneInfluencers),r=!0);const n=this._getComputeShader(a,r,!1);if(this._uniqueComputeShaders.add(n),i.morphTargetManager){a=a.slice(),a.push("#define MORPHTARGETS"),a.push("#define NUM_MORPH_INFLUENCERS "+t);const l=this._getComputeShader(a,r,!0);this._uniqueComputeShaders.add(l),this._computeShaders.push([n,l])}else this._computeShaders.push([n,n]);const h=this._getUBO();h.updateUInt("indexResult",s),h.update()}return new Promise(s=>{const i=()=>{const a=this._uniqueComputeShaders.keys();for(let r=a.next();r.done!==!0;r=a.next())if(!r.value.isReady()){setTimeout(i,10);return}s()};i()})}processMeshList(){if(this._processedMeshes.length===0)return;this._uboIndex=0;const e=8*this._processedMeshes.length,t=new Float32Array(e),s=new dt(this._engine,Float32Array.BYTES_PER_ELEMENT*e);this._resultBuffers.push(s);for(let i=0;i<this._processedMeshes.length;i++)t[i*8+0]=Number.POSITIVE_INFINITY,t[i*8+1]=Number.POSITIVE_INFINITY,t[i*8+2]=Number.POSITIVE_INFINITY,t[i*8+3]=Number.NEGATIVE_INFINITY,t[i*8+4]=Number.NEGATIVE_INFINITY,t[i*8+5]=Number.NEGATIVE_INFINITY;s.update(t);for(let i=0;i<this._processedMeshes.length;i++){const a=this._processedMeshes[i],r=a.getTotalVertices(),[n,o]=this._computeShaders[i],h=a.morphTargetManager,l=h&&h.numInfluencers>0,u=l?o:n;if(this._extractDataAndLink(u,a,E.PositionKind,3,"positionBuffer",this._positionBuffers),a&&a.useBones&&a.computeBonesUsingShaders&&a.skeleton&&a.skeleton.useTextureToStoreBoneMatrices){this._extractDataAndLink(u,a,E.MatricesIndicesKind,4,"indexBuffer",this._indexBuffers),this._extractDataAndLink(u,a,E.MatricesWeightsKind,4,"weightBuffer",this._weightBuffers);const _=a.skeleton.getTransformMatrixTexture(a);u.setTexture("boneSampler",_,!1),a.numBoneInfluencers>4&&(this._extractDataAndLink(u,a,E.MatricesIndicesExtraKind,4,"indexExtraBuffer",this._indexExtraBuffers),this._extractDataAndLink(u,a,E.MatricesWeightsExtraKind,4,"weightExtraBuffer",this._weightExtraBuffers))}const g=this._getUBO();if(l){const _=h._targetStoreTexture;u.setTexture("morphTargets",_,!1),this._prepareStorage(u,"morphTargetInfluences",a.uniqueId,this._morphTargetInfluenceBuffers,h.numInfluencers,h.influences),this._prepareStorage(u,"morphTargetTextureIndices",a.uniqueId,this._morphTargetTextureIndexBuffers,h.numInfluencers,h._morphTargetTextureIndices),g.updateFloat3("morphTargetTextureInfo",h._textureVertexStride,h._textureWidth,h._textureHeight),g.updateInt("morphTargetCount",h.numInfluencers),g.update()}u.setStorageBuffer("resultBuffer",s),u.setUniformBuffer("settings",g),u.dispatch(Math.ceil(r/256)),this._engine.flushFramebuffer()}}fetchResultsForMeshListAsync(){return new Promise(e=>{const t=[];let s=0;for(let o=0;o<this._resultBuffers.length;o++){const h=this._resultBuffers[o].getBuffer();t.push(h),s+=h.capacity}const i=new Float32Array(s/Float32Array.BYTES_PER_ELEMENT),a=c.Zero(),r=c.Zero(),n={minimum:a,maximum:r};this._engine.readFromMultipleStorageBuffers(t,0,void 0,i,!0).then(()=>{let o=0;for(let h=0;h<this._resultBuffers.length;h++){for(let l=0;l<this._processedMeshes.length;l++){const u=this._processedMeshes[l];c.FromArrayToRef(i,o+l*8,a),c.FromArrayToRef(i,o+l*8+3,r),h>0&&(a.minimizeInPlace(u.getBoundingInfo().minimum),r.maximizeInPlace(u.getBoundingInfo().maximum)),u._refreshBoundingInfoDirect(n)}o+=8*this._processedMeshes.length}for(const h of this._resultBuffers)h.dispose();this._resultBuffers=[],this._uboIndex=0,e()})})}_disposeCache(e){for(const t in e)e[t].dispose()}_disposeForMeshList(){for(const e of this._resultBuffers)e.dispose();this._resultBuffers=[],this._processedMeshes=[],this._computeShaders=[],this._uniqueComputeShaders=new Set}dispose(){this._disposeCache(this._positionBuffers),this._positionBuffers={},this._disposeCache(this._indexBuffers),this._indexBuffers={},this._disposeCache(this._weightBuffers),this._weightBuffers={},this._disposeCache(this._morphTargetInfluenceBuffers),this._morphTargetInfluenceBuffers={},this._disposeCache(this._morphTargetTextureIndexBuffers),this._morphTargetTextureIndexBuffers={};for(const e of this._ubos)e.dispose();this._ubos=[],this._computeShadersCache={},this._engine=void 0,this._disposeForMeshList()}}const li=Object.freeze(Object.defineProperty({__proto__:null,ComputeShaderBoundingHelper:hi},Symbol.toStringTag,{value:"Module"}));class ue extends Me{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}static _CreateArrow(e,t,s=1,i=!1){const a=new X("arrow",e),r=gt("cylinder",{diameterTop:0,height:.075,diameterBottom:.0375*(1+(s-1)/4),tessellation:96},e),n=gt("cylinder",{diameterTop:.005*s,height:.275,diameterBottom:.005*s,tessellation:96},e);return r.parent=a,r.material=t,r.rotation.x=Math.PI/2,r.position.z+=.3,n.parent=a,n.material=t,n.position.z+=.275/2,n.rotation.x=Math.PI/2,i&&(n.visibility=0,r.visibility=0),a}static _CreateArrowInstance(e,t){const s=new X("arrow",e);for(const i of t.getChildMeshes()){const a=i.createInstance(i.name);a.parent=s}return s}constructor(e,t=k.Gray(),s=fe.DefaultUtilityLayer,i=null,a=1,r=k.Yellow(),n=k.Gray()){var f;super(s),this._pointerObserver=null,this.snapDistance=0,this.onSnapObservable=new N,this._isEnabled=!0,this._parent=null,this._dragging=!1,this._parent=i,this._coloredMaterial=new $("",s.utilityLayerScene),this._coloredMaterial.diffuseColor=t,this._coloredMaterial.specularColor=t.subtract(new k(.1,.1,.1)),this._hoverMaterial=new $("",s.utilityLayerScene),this._hoverMaterial.diffuseColor=r,this._disableMaterial=new $("",s.utilityLayerScene),this._disableMaterial.diffuseColor=n,this._disableMaterial.alpha=.4;const o=ue._CreateArrow(s.utilityLayerScene,this._coloredMaterial,a),h=ue._CreateArrow(s.utilityLayerScene,this._coloredMaterial,a+4,!0);this._gizmoMesh=new oe("",s.utilityLayerScene),this._gizmoMesh.addChild(o),this._gizmoMesh.addChild(h),this._gizmoMesh.lookAt(this._rootMesh.position.add(e)),this._gizmoMesh.scaling.scaleInPlace(1/3),this._gizmoMesh.parent=this._rootMesh;let l=0;const u={snapDistance:0};this.dragBehavior=new Qe({dragAxis:e}),this.dragBehavior.moveAttached=!1,this.dragBehavior.updateDragPlane=!1,this._rootMesh.addBehavior(this.dragBehavior),this.dragBehavior.onDragObservable.add(m=>{if(this.attachedNode){let b=!1;if(this.snapDistance==0)this.attachedNode.getWorldMatrix().getTranslationToRef(d.Vector3[2]),d.Vector3[2].addInPlace(m.delta),this.dragBehavior.validateDrag(d.Vector3[2])&&(this.attachedNode.position&&this.attachedNode.position.addInPlaceFromFloats(m.delta.x,m.delta.y,m.delta.z),this.attachedNode.getWorldMatrix().addTranslationFromFloats(m.delta.x,m.delta.y,m.delta.z),this.attachedNode.updateCache(),b=!0);else if(l+=m.dragDistance,Math.abs(l)>this.snapDistance){const P=Math.floor(Math.abs(l)/this.snapDistance);l=l%this.snapDistance,m.delta.normalizeToRef(d.Vector3[1]),d.Vector3[1].scaleInPlace(this.snapDistance*P),this.attachedNode.getWorldMatrix().getTranslationToRef(d.Vector3[2]),d.Vector3[2].addInPlace(d.Vector3[1]),this.dragBehavior.validateDrag(d.Vector3[2])&&(this.attachedNode.getWorldMatrix().addTranslationFromFloats(d.Vector3[1].x,d.Vector3[1].y,d.Vector3[1].z),this.attachedNode.updateCache(),u.snapDistance=this.snapDistance*P*Math.sign(l),this.onSnapObservable.notifyObservers(u),b=!0)}b&&this._matrixChanged()}}),this.dragBehavior.onDragStartObservable.add(()=>{this._dragging=!0}),this.dragBehavior.onDragEndObservable.add(()=>{this._dragging=!1});const g=s._getSharedGizmoLight();g.includedOnlyMeshes=g.includedOnlyMeshes.concat(this._rootMesh.getChildMeshes(!1));const _={gizmoMeshes:o.getChildMeshes(),colliderMeshes:h.getChildMeshes(),material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:this.dragBehavior};(f=this._parent)==null||f.addToAxisCache(h,_),this._pointerObserver=s.utilityLayerScene.onPointerObservable.add(m=>{var b;if(!this._customMeshSet&&(this._isHovered=_.colliderMeshes.indexOf((b=m==null?void 0:m.pickInfo)==null?void 0:b.pickedMesh)!=-1,!this._parent)){const P=this.dragBehavior.enabled?this._isHovered||this._dragging?this._hoverMaterial:this._coloredMaterial:this._disableMaterial;this._setGizmoMeshMaterial(_.gizmoMeshes,P)}}),this.dragBehavior.onEnabledObservable.add(m=>{this._setGizmoMeshMaterial(_.gizmoMeshes,m?_.material:_.disableMaterial)})}_attachedNodeChanged(e){this.dragBehavior&&(this.dragBehavior.enabled=!!e)}set isEnabled(e){this._isEnabled=e,e?this._parent&&(this.attachedMesh=this._parent.attachedMesh,this.attachedNode=this._parent.attachedNode):(this.attachedMesh=null,this.attachedNode=null)}get isEnabled(){return this._isEnabled}dispose(){this.onSnapObservable.clear(),this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.dragBehavior.detach(),this._gizmoMesh&&this._gizmoMesh.dispose(),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()}),super.dispose()}}class ke{get scaleLines(){return this._scaleLines}set scaleLines(e){this._scaleLines=e,this._xAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._yAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor),this._zAxis.scaling.setAll(this._scaleLines*this._scaleLinesFactor)}get xAxis(){return this._xAxis}get yAxis(){return this._yAxis}get zAxis(){return this._zAxis}constructor(e,t=1,s=2,i,a,r,n=1){if(this._scaleLinesFactor=4,this._instanced=!1,this.scene=null,this._scaleLines=1,e=e||et.LastCreatedScene,!!e){if(!i){const o=new $("xAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=k.Red().scale(.5),i=ue._CreateArrow(e,o,n)}if(!a){const o=new $("yAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=k.Green().scale(.5),a=ue._CreateArrow(e,o,n)}if(!r){const o=new $("zAxisMaterial",e);o.disableLighting=!0,o.emissiveColor=k.Blue().scale(.5),r=ue._CreateArrow(e,o,n)}this._xAxis=i,this._yAxis=a,this._zAxis=r,this.scaleLines=t,s!=null&&(ke._SetRenderingGroupId(this._xAxis,s),ke._SetRenderingGroupId(this._yAxis,s),ke._SetRenderingGroupId(this._zAxis,s)),this.scene=e,this.update(new c,c.Right(),c.Up(),c.Forward())}}update(e,t,s,i){this._xAxis.position.copyFrom(e),this._xAxis.setDirection(t),this._yAxis.position.copyFrom(e),this._yAxis.setDirection(s),this._zAxis.position.copyFrom(e),this._zAxis.setDirection(i)}createInstance(){const e=ue._CreateArrowInstance(this.scene,this._xAxis),t=ue._CreateArrowInstance(this.scene,this._yAxis),s=ue._CreateArrowInstance(this.scene,this._zAxis),i=new ke(this.scene,this.scaleLines,null,e,t,s);return i._instanced=!0,i}dispose(){this._xAxis&&this._xAxis.dispose(!1,!this._instanced),this._yAxis&&this._yAxis.dispose(!1,!this._instanced),this._zAxis&&this._zAxis.dispose(!1,!this._instanced),this.scene=null}static _SetRenderingGroupId(e,t){e.getChildMeshes().forEach(s=>{s.renderingGroupId=t})}}class Xi extends ke{constructor(e,t,s,i=1){super(e,i),this.pos=c.Zero(),this.xaxis=c.Zero(),this.yaxis=c.Zero(),this.zaxis=c.Zero(),this.mesh=s,this.bone=t}update(){if(!this.mesh||!this.bone)return;const e=this.bone;e.getAbsolutePositionToRef(this.mesh,this.pos),e.getDirectionToRef(Je.X,this.mesh,this.xaxis),e.getDirectionToRef(Je.Y,this.mesh,this.yaxis),e.getDirectionToRef(Je.Z,this.mesh,this.zaxis),super.update(this.pos,this.xaxis,this.yaxis,this.zaxis)}dispose(){this.mesh&&(this.mesh=null,this.bone=null,super.dispose())}}class Yi{constructor(e){if(this._impostors=[],this._meshes=[],this._bodies=[],this._inertiaBodies=[],this._constraints=[],this._bodyMeshes=[],this._inertiaMeshes=[],this._constraintMeshes=[],this._numMeshes=0,this._numBodies=0,this._numInertiaBodies=0,this._numConstraints=0,this._debugMeshMeshes=new Array,this._constraintAxesSize=.4,this._scene=e||et.LastCreatedScene,!this._scene)return;const t=this._scene.getPhysicsEngine();t&&(this._physicsEnginePlugin=t.getPhysicsPlugin()),this._utilityLayer=new fe(this._scene,!1),this._utilityLayer.pickUtilitySceneFirst=!1,this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil=!0}_updateDebugMeshes(){const e=this._physicsEnginePlugin;(e==null?void 0:e.getPluginVersion())===1?this._updateDebugMeshesV1():this._updateDebugMeshesV2()}_updateDebugMeshesV1(){const e=this._physicsEnginePlugin;for(let t=0;t<this._numMeshes;t++){const s=this._impostors[t];if(s)if(s.isDisposed)this.hideImpostor(this._impostors[t--]);else{if(s.type===ye.MeshImpostor)continue;const i=this._meshes[t];i&&e&&e.syncMeshWithImpostor(i,s)}}}_updateDebugMeshesV2(){const e=this._physicsEnginePlugin;for(let t=0;t<this._numBodies;){const s=this._bodies[t];if(s&&s.isDisposed&&this.hideBody(s))continue;const i=this._bodyMeshes[t];s&&i&&e.syncTransform(s,i),t++}}_updateInertiaMeshes(){for(let e=0;e<this._numInertiaBodies;){const t=this._inertiaBodies[e];if(t&&t.isDisposed&&this.hideInertia(t))continue;const s=this._inertiaMeshes[e];t&&s&&this._updateDebugInertia(t,s),e++}}_updateDebugInertia(e,t){var r;const s=C.Identity(),i=C.Identity(),a=C.Identity();if(e._pluginDataInstances.length){const n=t,o=n._thinInstanceDataStorage.matrixData,h=e.transformNode._thinInstanceDataStorage.matrixData;for(let l=0;l<e._pluginDataInstances.length;l++){const u=e.getMassProperties(l);this._getMeshDebugInertiaMatrixToRef(u,s),C.FromArrayToRef(h,l*16,i),s.multiplyToRef(i,a),a.copyToArray(o,l*16)}n.thinInstanceBufferUpdated("matrix")}else{const n=e.getMassProperties();if(this._getMeshDebugInertiaMatrixToRef(n,s),(r=e.transformNode.rotationQuaternion)==null||r.toRotationMatrix(i),i.setTranslation(e.transformNode.position),e.transformNode.parent){const o=e.transformNode.parent.computeWorldMatrix(!0);i.multiplyToRef(o,i)}s.multiplyToRef(i,s),s.decomposeToTransformNode(t)}}_updateDebugConstraints(){for(let e=0;e<this._numConstraints;e++){const t=this._constraints[e],s=this._constraintMeshes[e];t&&s&&this._updateDebugConstraint(t,s)}}_makeScalingUnitInPlace(e){Math.abs(e.x-1)>ne&&(e.x=1*Math.sign(e.x)),Math.abs(e.y-1)>ne&&(e.y=1*Math.sign(e.y)),Math.abs(e.z-1)>ne&&(e.z=1*Math.sign(e.z))}_updateDebugConstraint(e,t){if(!e._initOptions)return;const{pivotA:s,pivotB:i,axisA:a,axisB:r,perpAxisA:n,perpAxisB:o}=e._initOptions;!s||!i||!a||!r||!n||!o||t.getDescendants(!0).forEach(h=>{const l=h.getDescendants(!0)[0],u=h.getDescendants(!0)[1],{parentBody:g,parentBodyIndex:_}=l.metadata,{childBody:f,childBodyIndex:m}=u.metadata,b=this._getTransformFromBodyToRef(g,d.Matrix[0],_),P=this._getTransformFromBodyToRef(f,d.Matrix[1],m);b.decomposeToTransformNode(l),this._makeScalingUnitInPlace(l.scaling),P.decomposeToTransformNode(u),this._makeScalingUnitInPlace(u.scaling);const x=l.getDescendants(!0)[0];x.position.copyFrom(s);const v=u.getDescendants(!0)[0];v.position.copyFrom(i),y.FromRotationMatrixToRef(C.FromXYZAxesToRef(a,n,c.CrossToRef(a,n,d.Vector3[0]),d.Matrix[0]),x.rotationQuaternion),y.FromRotationMatrixToRef(C.FromXYZAxesToRef(r,o,c.CrossToRef(r,o,d.Vector3[1]),d.Matrix[1]),v.rotationQuaternion)})}showImpostor(e,t){if(!this._scene)return null;for(let i=0;i<this._numMeshes;i++)if(this._impostors[i]==e)return null;const s=this._getDebugMesh(e,t);return s&&(this._impostors[this._numMeshes]=e,this._meshes[this._numMeshes]=s,this._numMeshes===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numMeshes++),s}showBody(e){if(!this._scene)return null;for(let s=0;s<this._numBodies;s++)if(this._bodies[s]==e)return null;const t=this._getDebugBodyMesh(e);return t&&(this._bodies[this._numBodies]=e,this._bodyMeshes[this._numBodies]=t,this._numBodies===0&&(this._renderFunction=()=>this._updateDebugMeshes(),this._scene.registerBeforeRender(this._renderFunction)),this._numBodies++),t}showInertia(e){if(!this._scene)return null;for(let s=0;s<this._numInertiaBodies;s++)if(this._inertiaBodies[s]==e)return null;const t=this._getDebugInertiaMesh(e);return t&&(this._inertiaBodies[this._numInertiaBodies]=e,this._inertiaMeshes[this._numInertiaBodies]=t,this._numInertiaBodies===0&&(this._inertiaRenderFunction=()=>this._updateInertiaMeshes(),this._scene.registerBeforeRender(this._inertiaRenderFunction)),this._numInertiaBodies++),t}showConstraint(e){if(!this._scene)return null;for(let s=0;s<this._numConstraints;s++)if(this._constraints[s]==e)return null;const t=this._getDebugConstraintMesh(e);return t&&(this._constraints[this._numConstraints]=e,this._constraintMeshes[this._numConstraints]=t,this._numConstraints===0&&(this._constraintRenderFunction=()=>this._updateDebugConstraints(),this._scene.registerBeforeRender(this._constraintRenderFunction)),this._numConstraints++),t}hideImpostor(e){if(!e||!this._scene||!this._utilityLayer)return;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numMeshes;i++)if(this._impostors[i]==e){const a=this._meshes[i];if(!a)continue;s.removeMesh(a),a.dispose();const r=this._debugMeshMeshes.indexOf(a);r>-1&&this._debugMeshMeshes.splice(r,1),this._numMeshes--,this._numMeshes>0?(this._meshes[i]=this._meshes[this._numMeshes],this._impostors[i]=this._impostors[this._numMeshes],this._meshes[this._numMeshes]=null,this._impostors[this._numMeshes]=null):(this._meshes[0]=null,this._impostors[0]=null),t=!0;break}t&&this._numMeshes===0&&this._scene.unregisterBeforeRender(this._renderFunction)}hideBody(e){if(!e||!this._scene||!this._utilityLayer)return!1;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numBodies;i++)if(this._bodies[i]===e){const a=this._bodyMeshes[i];if(!a)continue;s.removeMesh(a),a.dispose(),this._numBodies--,this._numBodies>0?(this._bodyMeshes[i]=this._bodyMeshes[this._numBodies],this._bodies[i]=this._bodies[this._numBodies],this._bodyMeshes[this._numBodies]=null,this._bodies[this._numBodies]=null):(this._bodyMeshes[0]=null,this._bodies[0]=null),t=!0;break}return t&&this._numBodies===0&&this._scene.unregisterBeforeRender(this._renderFunction),t}hideInertia(e){if(!e||!this._scene||!this._utilityLayer)return!1;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numInertiaBodies;i++)if(this._inertiaBodies[i]===e){const a=this._inertiaMeshes[i];if(!a)continue;s.removeMesh(a),a.dispose(),this._inertiaBodies.splice(i,1),this._inertiaMeshes.splice(i,1),this._numInertiaBodies--,t=!0;break}return t&&this._numInertiaBodies===0&&this._scene.unregisterBeforeRender(this._inertiaRenderFunction),t}hideConstraint(e){if(!e||!this._scene||!this._utilityLayer)return;let t=!1;const s=this._utilityLayer.utilityLayerScene;for(let i=0;i<this._numConstraints;i++)if(this._constraints[i]===e){const a=this._constraintMeshes[i];if(!a)continue;s.removeMesh(a),a.dispose(),this._constraints.splice(i,1),this._constraintMeshes.splice(i,1),this._numConstraints--,this._numConstraints>0?(this._constraints[i]=this._constraints[this._numConstraints],this._constraintMeshes[i]=this._constraintMeshes[this._numConstraints],this._constraints[this._numConstraints]=null,this._constraintMeshes[this._numConstraints]=null):(this._constraints[0]=null,this._constraintMeshes[0]=null),t=!0;break}t&&this._numConstraints===0&&this._scene.unregisterBeforeRender(this._constraintRenderFunction)}_getDebugMaterial(e){return this._debugMaterial||(this._debugMaterial=new $("",e),this._debugMaterial.wireframe=!0,this._debugMaterial.emissiveColor=k.White(),this._debugMaterial.disableLighting=!0),this._debugMaterial}_getDebugInertiaMaterial(e){return this._debugInertiaMaterial||(this._debugInertiaMaterial=new $("",e),this._debugInertiaMaterial.disableLighting=!0,this._debugInertiaMaterial.alpha=0),this._debugInertiaMaterial}_getDebugBoxMesh(e){return this._debugBoxMesh||(this._debugBoxMesh=Fe("physicsBodyBoxViewMesh",{size:1},e),this._debugBoxMesh.rotationQuaternion=y.Identity(),this._debugBoxMesh.material=this._getDebugMaterial(e),this._debugBoxMesh.setEnabled(!1)),this._debugBoxMesh.createInstance("physicsBodyBoxViewInstance")}_getDebugSphereMesh(e){return this._debugSphereMesh||(this._debugSphereMesh=us("physicsBodySphereViewMesh",{diameter:1},e),this._debugSphereMesh.rotationQuaternion=y.Identity(),this._debugSphereMesh.material=this._getDebugMaterial(e),this._debugSphereMesh.setEnabled(!1)),this._debugSphereMesh.createInstance("physicsBodySphereViewInstance")}_getDebugCapsuleMesh(e){return this._debugCapsuleMesh||(this._debugCapsuleMesh=_s("physicsBodyCapsuleViewMesh",{height:1},e),this._debugCapsuleMesh.rotationQuaternion=y.Identity(),this._debugCapsuleMesh.material=this._getDebugMaterial(e),this._debugCapsuleMesh.setEnabled(!1)),this._debugCapsuleMesh.createInstance("physicsBodyCapsuleViewInstance")}_getDebugCylinderMesh(e){return this._debugCylinderMesh||(this._debugCylinderMesh=gt("physicsBodyCylinderViewMesh",{diameterTop:1,diameterBottom:1,height:1},e),this._debugCylinderMesh.rotationQuaternion=y.Identity(),this._debugCylinderMesh.material=this._getDebugMaterial(e),this._debugCylinderMesh.setEnabled(!1)),this._debugCylinderMesh.createInstance("physicsBodyCylinderViewInstance")}_getDebugMeshMesh(e,t){const s=new oe(e.name,t,null,e);return s.setParent(e),s.position=c.Zero(),s.material=this._getDebugMaterial(t),this._debugMeshMeshes.push(s),s}_getDebugMesh(e,t){if(!this._utilityLayer||t&&t.parent&&t.parent.physicsImpostor)return null;let s=null;const i=this._utilityLayer.utilityLayerScene;if(!e.physicsBody)return D.Warn("Unable to get physicsBody of impostor. It might be initialized later by its parent's impostor."),null;switch(e.type){case ye.BoxImpostor:s=this._getDebugBoxMesh(i),e.getBoxSizeToRef(s.scaling);break;case ye.SphereImpostor:{s=this._getDebugSphereMesh(i);const a=e.getRadius();s.scaling.x=a*2,s.scaling.y=a*2,s.scaling.z=a*2;break}case ye.CapsuleImpostor:{s=this._getDebugCapsuleMesh(i);const a=e.object.getBoundingInfo();s.scaling.x=(a.boundingBox.maximum.x-a.boundingBox.minimum.x)*2*e.object.scaling.x,s.scaling.y=(a.boundingBox.maximum.y-a.boundingBox.minimum.y)*e.object.scaling.y,s.scaling.z=(a.boundingBox.maximum.z-a.boundingBox.minimum.z)*2*e.object.scaling.z;break}case ye.MeshImpostor:t&&(s=this._getDebugMeshMesh(t,i));break;case ye.NoImpostor:t?t.getChildMeshes().filter(r=>r.physicsImpostor?1:0).forEach(r=>{if(r.physicsImpostor&&r.getClassName()==="Mesh"){const n=r.getBoundingInfo(),o=n.boundingBox.minimum,h=n.boundingBox.maximum;switch(r.physicsImpostor.type){case ye.BoxImpostor:s=this._getDebugBoxMesh(i),s.position.copyFrom(o),s.position.addInPlace(h),s.position.scaleInPlace(.5);break;case ye.SphereImpostor:s=this._getDebugSphereMesh(i);break;case ye.CylinderImpostor:s=this._getDebugCylinderMesh(i);break;default:s=null;break}s&&(s.scaling.x=h.x-o.x,s.scaling.y=h.y-o.y,s.scaling.z=h.z-o.z,s.parent=r)}}):D.Warn("No target mesh parameter provided for NoImpostor. Skipping."),s=null;break;case ye.CylinderImpostor:{s=this._getDebugCylinderMesh(i);const a=e.object.getBoundingInfo();s.scaling.x=(a.boundingBox.maximum.x-a.boundingBox.minimum.x)*e.object.scaling.x,s.scaling.y=(a.boundingBox.maximum.y-a.boundingBox.minimum.y)*e.object.scaling.y,s.scaling.z=(a.boundingBox.maximum.z-a.boundingBox.minimum.z)*e.object.scaling.z;break}}return s}_getDebugBodyMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene,s=new oe("custom",t),i=new $e,a=e.getGeometry();if(i.positions=a.positions,i.indices=a.indices,i.applyToMesh(s),e._pluginDataInstances){const r=new Float32Array(e._pluginDataInstances.length*16);s.thinInstanceSetBuffer("matrix",r,16,!1)}return s.material=this._getDebugMaterial(t),s}_getMeshDebugInertiaMatrixToRef(e,t){const s=e.inertiaOrientation??y.Identity(),i=e.inertia??c.Zero(),a=e.centerOfMass??c.Zero(),r=(i.x-i.y+i.z)*6,n=Math.sqrt(Math.max(r,0)),o=i.x*12-r,h=Math.sqrt(Math.max(o,0)),l=i.z*12-r,u=Math.sqrt(Math.max(l,0)),g=d.Vector3[0];g.set(u,n,h);const _=C.ScalingToRef(g.x,g.y,g.z,d.Matrix[0]),f=s.toRotationMatrix(d.Matrix[1]),m=C.TranslationToRef(a.x,a.y,a.z,d.Matrix[2]);return _.multiplyToRef(f,t),t.multiplyToRef(m,t),t}_getDebugInertiaMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene,s=ps.CreateBox("custom",{size:1},t),i=C.Identity();if(e._pluginDataInstances.length){const a=new Float32Array(e._pluginDataInstances.length*16);for(let r=0;r<e._pluginDataInstances.length;++r){const n=e.getMassProperties(r);this._getMeshDebugInertiaMatrixToRef(n,i),i.copyToArray(a,r*16)}s.thinInstanceSetBuffer("matrix",a,16,!1)}else{const a=e.getMassProperties();this._getMeshDebugInertiaMatrixToRef(a,i),i.decomposeToTransformNode(s)}return s.enableEdgesRendering(),s.edgesWidth=2,s.edgesColor=new Re(1,0,1,1),s.material=this._getDebugInertiaMaterial(t),s}_getTransformFromBodyToRef(e,t,s){const i=e.transformNode;return s&&s>=0?C.FromArrayToRef(i._thinInstanceDataStorage.matrixData,s,t):t.copyFrom(i.getWorldMatrix())}_getDebugConstraintMesh(e){if(!this._utilityLayer)return null;const t=this._utilityLayer.utilityLayerScene;if(!e._initOptions)return null;const{pivotA:s,pivotB:i,axisA:a,axisB:r,perpAxisA:n,perpAxisB:o}=e._initOptions;if(!s||!i||!a||!r||!n||!o)return null;const h=new oe("parentingDebugConstraint",t),l=e.getBodiesUsingConstraint();for(const u of l){const g=new X("parentOfPair",t);g.parent=h;const{parentBody:_,parentBodyIndex:f,childBody:m,childBodyIndex:b}=u,P=this._getTransformFromBodyToRef(_,d.Matrix[0],f),x=this._getTransformFromBodyToRef(m,d.Matrix[1],b),v=new X("parentCoordSystem",t);v.parent=g,v.metadata={parentBody:_,parentBodyIndex:f},P.decomposeToTransformNode(v);const R=new X("childCoordSystem",t);R.parent=g,R.metadata={childBody:m,childBodyIndex:b},x.decomposeToTransformNode(R);const A=y.FromRotationMatrix(C.FromXYZAxesToRef(a,n,a.cross(n),d.Matrix[0])),W=y.FromRotationMatrix(C.FromXYZAxesToRef(r,o,r.cross(o),d.Matrix[0])),w=s,Q=i,G=new X("constraint_parent",t);G.position.copyFrom(w),G.rotationQuaternion=A,G.parent=v;const F=new X("constraint_child",t);F.parent=R,F.position.copyFrom(Q),F.rotationQuaternion=W;const Y=new ke(t,this._constraintAxesSize);Y.xAxis.parent=G,Y.yAxis.parent=G,Y.zAxis.parent=G;const O=new ke(t,this._constraintAxesSize);O.xAxis.parent=F,O.yAxis.parent=F,O.zAxis.parent=F}return h}dispose(){for(let e=this._numMeshes-1;e>=0;e--)this.hideImpostor(this._impostors[0]);for(let e=this._numBodies-1;e>=0;e--)this.hideBody(this._bodies[0]);for(let e=this._numInertiaBodies-1;e>=0;e--)this.hideInertia(this._inertiaBodies[0]);this._debugBoxMesh&&this._debugBoxMesh.dispose(),this._debugSphereMesh&&this._debugSphereMesh.dispose(),this._debugCylinderMesh&&this._debugCylinderMesh.dispose(),this._debugMaterial&&this._debugMaterial.dispose(),this._impostors.length=0,this._scene=null,this._physicsEnginePlugin=null,this._utilityLayer&&(this._utilityLayer.dispose(),this._utilityLayer=null)}}class Yt{static CreateAndShow(e,t,s){const i=new Yt(e);return i.show(t,s),i}constructor(e){this.ray=e}show(e,t){if(!this._renderFunction&&this.ray){const s=this.ray;this._renderFunction=()=>this._render(),this._scene=e,this._renderPoints=[s.origin,s.origin.add(s.direction.scale(s.length))],this._renderLine=U("ray",{points:this._renderPoints,updatable:!0},e),this._renderLine.isPickable=!1,this._renderFunction&&this._scene.registerBeforeRender(this._renderFunction)}t&&this._renderLine&&this._renderLine.color.copyFrom(t)}hide(){this._renderFunction&&this._scene&&(this._scene.unregisterBeforeRender(this._renderFunction),this._scene=null,this._renderFunction=null,this._renderLine&&(this._renderLine.dispose(),this._renderLine=null),this._renderPoints=[])}_render(){var i;const e=this.ray;if(!e)return;const t=this._renderPoints[1],s=Math.min(e.length,1e6);t.copyFrom(e.direction),t.scaleInPlace(s),t.addInPlace(e.origin),this._renderPoints[0].copyFrom(e.origin),U("ray",{points:this._renderPoints,updatable:!0,instance:this._renderLine},this._scene),(i=this._renderLine)==null||i.refreshBoundingInfo()}attachToMesh(e,t,s,i){this._attachedToMesh=e;const a=this.ray;a&&(a.direction||(a.direction=c.Zero()),a.origin||(a.origin=c.Zero()),i&&(a.length=i),s||(s=c.Zero()),t||(t=new c(0,0,-1)),this._scene||(this._scene=e.getScene()),this._meshSpaceDirection?(this._meshSpaceDirection.copyFrom(t),this._meshSpaceOrigin.copyFrom(s)):(this._meshSpaceDirection=t.clone(),this._meshSpaceOrigin=s.clone()),this._onAfterRenderObserver||(this._onAfterRenderObserver=this._scene.onBeforeRenderObservable.add(()=>this._updateToMesh()),this._onAfterStepObserver=this._scene.onAfterStepObservable.add(()=>this._updateToMesh())),this._attachedToMesh.computeWorldMatrix(!0),this._updateToMesh())}detachFromMesh(){this._attachedToMesh&&this._scene&&(this._onAfterRenderObserver&&(this._scene.onBeforeRenderObservable.remove(this._onAfterRenderObserver),this._scene.onAfterStepObservable.remove(this._onAfterStepObserver)),this._attachedToMesh=null,this._onAfterRenderObserver=null,this._onAfterStepObserver=null,this._scene=null)}_updateToMesh(){const e=this.ray;if(!(!this._attachedToMesh||!e)){if(this._attachedToMesh.isDisposed()){this.detachFromMesh();return}this._attachedToMesh.getDirectionToRef(this._meshSpaceDirection,e.direction),c.TransformCoordinatesToRef(this._meshSpaceOrigin,this._attachedToMesh.getWorldMatrix(),e.origin)}}dispose(){this.hide(),this.detachFromMesh(),this.ray=null}}class Ki{get transparency(){return this._transparency}set transparency(e){this._transparency=e;for(let t=6;t<12;++t)this._lightHelperFrustumMeshes[t].material.alpha=e}get showLines(){return this._showLines}set showLines(e){if(this._showLines!==e){this._showLines=e;for(let t=0;t<6;++t)this._lightHelperFrustumMeshes[t].setEnabled(e)}}get showPlanes(){return this._showPlanes}set showPlanes(e){if(this._showPlanes!==e){this._showPlanes=e;for(let t=6;t<12;++t)this._lightHelperFrustumMeshes[t].setEnabled(e)}}constructor(e,t){this._oldPosition=new c(Number.NaN,Number.NaN,Number.NaN),this._oldDirection=new c(Number.NaN,Number.NaN,Number.NaN),this._transparency=.3,this._showLines=!0,this._showPlanes=!0,this._scene=e.getScene(),this._light=e,this._camera=t,this._inverseViewMatrix=C.Identity(),this._lightHelperFrustumMeshes=[],this._createGeometry(),this.show(),this.update()}show(){this._lightHelperFrustumMeshes.forEach((e,t)=>{e.setEnabled(t<6&&this._showLines||t>=6&&this._showPlanes)}),this._oldPosition.set(Number.NaN,Number.NaN,Number.NaN),this._visible=!0}hide(){this._lightHelperFrustumMeshes.forEach(e=>{e.setEnabled(!1)}),this._visible=!1}update(){var t,s,i,a,r,n;if(!this._visible||this._oldPosition.equals(this._light.position)&&this._oldDirection.equals(this._light.direction)&&this._oldAutoCalc===this._light.autoCalcShadowZBounds&&this._oldMinZ===this._light.shadowMinZ&&this._oldMaxZ===this._light.shadowMaxZ)return;this._oldPosition.copyFrom(this._light.position),this._oldDirection.copyFrom(this._light.direction),this._oldAutoCalc=this._light.autoCalcShadowZBounds,this._oldMinZ=this._light.shadowMinZ,this._oldMaxZ=this._light.shadowMaxZ,d.Vector3[0].set(this._light.orthoLeft,this._light.orthoBottom,this._light.shadowMinZ!==void 0?this._light.shadowMinZ:this._camera.minZ),d.Vector3[1].set(this._light.orthoRight,this._light.orthoTop,this._light.shadowMaxZ!==void 0?this._light.shadowMaxZ:this._camera.maxZ);const e=this._getInvertViewMatrix();d.Vector3[2].copyFromFloats(d.Vector3[1].x,d.Vector3[1].y,d.Vector3[0].z),d.Vector3[3].copyFromFloats(d.Vector3[1].x,d.Vector3[0].y,d.Vector3[0].z),d.Vector3[4].copyFromFloats(d.Vector3[0].x,d.Vector3[0].y,d.Vector3[0].z),d.Vector3[5].copyFromFloats(d.Vector3[0].x,d.Vector3[1].y,d.Vector3[0].z),c.TransformCoordinatesToRef(d.Vector3[2],e,d.Vector3[2]),c.TransformCoordinatesToRef(d.Vector3[3],e,d.Vector3[3]),c.TransformCoordinatesToRef(d.Vector3[4],e,d.Vector3[4]),c.TransformCoordinatesToRef(d.Vector3[5],e,d.Vector3[5]),d.Vector3[6].copyFromFloats(d.Vector3[1].x,d.Vector3[1].y,d.Vector3[1].z),d.Vector3[7].copyFromFloats(d.Vector3[1].x,d.Vector3[0].y,d.Vector3[1].z),d.Vector3[8].copyFromFloats(d.Vector3[0].x,d.Vector3[0].y,d.Vector3[1].z),d.Vector3[9].copyFromFloats(d.Vector3[0].x,d.Vector3[1].y,d.Vector3[1].z),c.TransformCoordinatesToRef(d.Vector3[6],e,d.Vector3[6]),c.TransformCoordinatesToRef(d.Vector3[7],e,d.Vector3[7]),c.TransformCoordinatesToRef(d.Vector3[8],e,d.Vector3[8]),c.TransformCoordinatesToRef(d.Vector3[9],e,d.Vector3[9]),U("nearlines",{updatable:!0,points:this._nearLinesPoints,instance:this._lightHelperFrustumMeshes[0]},this._scene),U("farlines",{updatable:!0,points:this._farLinesPoints,instance:this._lightHelperFrustumMeshes[1]},this._scene),U("trlines",{updatable:!0,points:this._trLinesPoints,instance:this._lightHelperFrustumMeshes[2]},this._scene),U("brlines",{updatable:!0,points:this._brLinesPoints,instance:this._lightHelperFrustumMeshes[3]},this._scene),U("tllines",{updatable:!0,points:this._tlLinesPoints,instance:this._lightHelperFrustumMeshes[4]},this._scene),U("bllines",{updatable:!0,points:this._blLinesPoints,instance:this._lightHelperFrustumMeshes[5]},this._scene),d.Vector3[2].toArray(this._nearPlaneVertices,0),d.Vector3[3].toArray(this._nearPlaneVertices,3),d.Vector3[4].toArray(this._nearPlaneVertices,6),d.Vector3[5].toArray(this._nearPlaneVertices,9),(t=this._lightHelperFrustumMeshes[6].geometry)==null||t.updateVerticesDataDirectly("position",this._nearPlaneVertices,0),d.Vector3[6].toArray(this._farPlaneVertices,0),d.Vector3[7].toArray(this._farPlaneVertices,3),d.Vector3[8].toArray(this._farPlaneVertices,6),d.Vector3[9].toArray(this._farPlaneVertices,9),(s=this._lightHelperFrustumMeshes[7].geometry)==null||s.updateVerticesDataDirectly("position",this._farPlaneVertices,0),d.Vector3[2].toArray(this._rightPlaneVertices,0),d.Vector3[6].toArray(this._rightPlaneVertices,3),d.Vector3[7].toArray(this._rightPlaneVertices,6),d.Vector3[3].toArray(this._rightPlaneVertices,9),(i=this._lightHelperFrustumMeshes[8].geometry)==null||i.updateVerticesDataDirectly("position",this._rightPlaneVertices,0),d.Vector3[5].toArray(this._leftPlaneVertices,0),d.Vector3[9].toArray(this._leftPlaneVertices,3),d.Vector3[8].toArray(this._leftPlaneVertices,6),d.Vector3[4].toArray(this._leftPlaneVertices,9),(a=this._lightHelperFrustumMeshes[9].geometry)==null||a.updateVerticesDataDirectly("position",this._leftPlaneVertices,0),d.Vector3[2].toArray(this._topPlaneVertices,0),d.Vector3[6].toArray(this._topPlaneVertices,3),d.Vector3[9].toArray(this._topPlaneVertices,6),d.Vector3[5].toArray(this._topPlaneVertices,9),(r=this._lightHelperFrustumMeshes[10].geometry)==null||r.updateVerticesDataDirectly("position",this._topPlaneVertices,0),d.Vector3[3].toArray(this._bottomPlaneVertices,0),d.Vector3[7].toArray(this._bottomPlaneVertices,3),d.Vector3[8].toArray(this._bottomPlaneVertices,6),d.Vector3[4].toArray(this._bottomPlaneVertices,9),(n=this._lightHelperFrustumMeshes[11].geometry)==null||n.updateVerticesDataDirectly("position",this._bottomPlaneVertices,0)}dispose(){this._lightHelperFrustumMeshes.forEach(e=>{var t;(t=e.material)==null||t.dispose(),e.dispose()}),this._rootNode.dispose()}_createGeometry(){this._rootNode=new X("directionalLightHelperRoot_"+this._light.name,this._scene),this._rootNode.parent=this._light.parent,this._nearLinesPoints=[d.Vector3[0],d.Vector3[1],d.Vector3[2],d.Vector3[3],d.Vector3[4]];const e=U("nearlines",{updatable:!0,points:this._nearLinesPoints},this._scene);e.parent=this._rootNode,e.alwaysSelectAsActiveMesh=!0,this._farLinesPoints=[d.Vector3[5],d.Vector3[6],d.Vector3[7],d.Vector3[8],d.Vector3[9]];const t=U("farlines",{updatable:!0,points:this._farLinesPoints},this._scene);t.parent=this._rootNode,t.alwaysSelectAsActiveMesh=!0,this._trLinesPoints=[d.Vector3[10],d.Vector3[11]];const s=U("trlines",{updatable:!0,points:this._trLinesPoints},this._scene);s.parent=this._rootNode,s.alwaysSelectAsActiveMesh=!0,this._brLinesPoints=[d.Vector3[12],d.Vector3[0]];const i=U("brlines",{updatable:!0,points:this._brLinesPoints},this._scene);i.parent=this._rootNode,i.alwaysSelectAsActiveMesh=!0,this._tlLinesPoints=[d.Vector3[1],d.Vector3[2]];const a=U("tllines",{updatable:!0,points:this._tlLinesPoints},this._scene);a.parent=this._rootNode,a.alwaysSelectAsActiveMesh=!0,this._blLinesPoints=[d.Vector3[3],d.Vector3[4]];const r=U("bllines",{updatable:!0,points:this._blLinesPoints},this._scene);r.parent=this._rootNode,r.alwaysSelectAsActiveMesh=!0,this._lightHelperFrustumMeshes.push(e,t,s,i,a,r);const n=(o,h,l)=>{const u=new oe(o+"plane",this._scene),g=new $(o+"PlaneMat",this._scene);u.material=g,u.parent=this._rootNode,u.alwaysSelectAsActiveMesh=!0,g.emissiveColor=h,g.alpha=this.transparency,g.backFaceCulling=!1,g.disableLighting=!0;const _=[0,1,2,0,2,3],f=new $e;f.positions=l,f.indices=_,f.applyToMesh(u,!0),this._lightHelperFrustumMeshes.push(u)};this._nearPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._farPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._rightPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._leftPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._topPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],this._bottomPlaneVertices=[0,0,0,0,0,0,0,0,0,0,0,0],n("near",new k(1,0,0),this._nearPlaneVertices),n("far",new k(.3,0,0),this._farPlaneVertices),n("right",new k(0,1,0),this._rightPlaneVertices),n("left",new k(0,.3,0),this._leftPlaneVertices),n("top",new k(0,0,1),this._topPlaneVertices),n("bottom",new k(0,0,.3),this._bottomPlaneVertices),this._nearLinesPoints[0]=d.Vector3[2],this._nearLinesPoints[1]=d.Vector3[3],this._nearLinesPoints[2]=d.Vector3[4],this._nearLinesPoints[3]=d.Vector3[5],this._nearLinesPoints[4]=d.Vector3[2],this._farLinesPoints[0]=d.Vector3[6],this._farLinesPoints[1]=d.Vector3[7],this._farLinesPoints[2]=d.Vector3[8],this._farLinesPoints[3]=d.Vector3[9],this._farLinesPoints[4]=d.Vector3[6],this._trLinesPoints[0]=d.Vector3[2],this._trLinesPoints[1]=d.Vector3[6],this._brLinesPoints[0]=d.Vector3[3],this._brLinesPoints[1]=d.Vector3[7],this._tlLinesPoints[0]=d.Vector3[4],this._tlLinesPoints[1]=d.Vector3[8],this._blLinesPoints[0]=d.Vector3[5],this._blLinesPoints[1]=d.Vector3[9]}_getInvertViewMatrix(){return C.LookAtLHToRef(this._light.position,this._light.position.add(this._light.direction),c.UpReadOnly,this._inverseViewMatrix),this._inverseViewMatrix.invertToRef(this._inverseViewMatrix),this._inverseViewMatrix}}class ci{constructor(){this.renderWidth=512,this.renderHeight=256,this.textureSize=512,this.deterministicLockstep=!1,this.lockstepMaxSteps=4}}class di extends st{isDeterministicLockStep(){return this._options.deterministicLockstep}getLockstepMaxSteps(){return this._options.lockstepMaxSteps}getHardwareScalingLevel(){return 1}constructor(e=new ci){super(null),e.deterministicLockstep===void 0&&(e.deterministicLockstep=!1),e.timeStep!==void 0&&(this._timeStep=e.timeStep),e.lockstepMaxSteps===void 0&&(e.lockstepMaxSteps=4),this._options=e,gs.SetMatrixPrecision(!!e.useHighPrecisionMatrix),this._caps={maxTexturesImageUnits:16,maxVertexTextureImageUnits:16,maxCombinedTexturesImageUnits:32,maxTextureSize:512,maxCubemapTextureSize:512,maxDrawBuffers:0,maxRenderTextureSize:512,maxVertexAttribs:16,maxVaryingVectors:16,maxFragmentUniformVectors:16,maxVertexUniformVectors:16,standardDerivatives:!1,astc:null,pvrtc:null,etc1:null,etc2:null,bptc:null,maxAnisotropy:0,uintIndices:!1,fragmentDepthSupported:!1,highPrecisionShaderSupported:!0,colorBufferFloat:!1,supportFloatTexturesResolve:!1,rg11b10ufColorRenderable:!1,textureFloat:!1,textureFloatLinearFiltering:!1,textureFloatRender:!1,textureHalfFloat:!1,textureHalfFloatLinearFiltering:!1,textureHalfFloatRender:!1,textureLOD:!1,texelFetch:!1,drawBuffersExtension:!1,depthTextureExtension:!1,vertexArrayObject:!1,instancedArrays:!1,supportOcclusionQuery:!1,canUseTimestampForTimerQuery:!1,maxMSAASamples:1,blendMinMax:!1,canUseGLInstanceID:!1,canUseGLVertexID:!1,supportComputeShaders:!1,supportSRGBBuffers:!1,supportTransformFeedbacks:!1,textureMaxLevel:!1,texture2DArrayMaxLayerCount:128,disableMorphTargetTexture:!1},this._features={forceBitmapOverHTMLImageElement:!1,supportRenderAndCopyToLodForFloatTextures:!1,supportDepthStencilTexture:!1,supportShadowSamplers:!1,uniformBufferHardCheckMatrix:!1,allowTexturePrefiltering:!1,trackUbosInFrame:!1,checkUbosContentBeforeUpload:!1,supportCSM:!1,basisNeedsPOT:!1,support3DTextures:!1,needTypeSuffixInShaderConstants:!1,supportMSAA:!1,supportSSAO2:!1,supportIBLShadows:!1,supportExtendedTextureFormats:!1,supportSwitchCaseInShader:!1,supportSyncTextureRead:!1,needsInvertingBitmap:!1,useUBOBindingCache:!1,needShaderCodeInlining:!1,needToAlwaysBindUniformBuffers:!1,supportRenderPasses:!0,supportSpriteInstancing:!1,forceVertexBufferStrideAndOffsetMultiple4Bytes:!1,_checkNonFloatVertexBuffersDontRecreatePipelineContext:!1,_collectUbosUpdatedInFrame:!1},e.renderingCanvas&&(this._renderingCanvas=e.renderingCanvas),D.Log(`Babylon.js v${st.Version} - Null engine`);const t=typeof self<"u"?self:typeof global<"u"?global:window;typeof URL>"u"&&(t.URL={createObjectURL:function(){},revokeObjectURL:function(){}}),typeof Blob>"u"&&(t.Blob=function(){})}createVertexBuffer(e){const t=new ut;return t.references=1,t}createIndexBuffer(e){const t=new ut;return t.references=1,t}clear(e,t,s,i=!1){}getRenderWidth(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.width:this._options.renderWidth}getRenderHeight(e=!1){return!e&&this._currentRenderTarget?this._currentRenderTarget.height:this._options.renderHeight}setViewport(e,t,s){this._cachedViewport=e}createShaderProgram(e,t,s,i,a){return{__SPECTOR_rebuildProgram:null}}getUniforms(e,t){return[]}getAttributes(e,t){return[]}bindSamplers(e){this._currentEffect=null}enableEffect(e){e=e!==null&&ms(e)?e.effect:e,this._currentEffect=e,e&&(e.onBind&&e.onBind(e),e._onBindObservable&&e._onBindObservable.notifyObservers(e))}setState(e,t=0,s,i=!1,a,r,n=0){}setIntArray(e,t){return!0}setIntArray2(e,t){return!0}setIntArray3(e,t){return!0}setIntArray4(e,t){return!0}setFloatArray(e,t){return!0}setFloatArray2(e,t){return!0}setFloatArray3(e,t){return!0}setFloatArray4(e,t){return!0}setArray(e,t){return!0}setArray2(e,t){return!0}setArray3(e,t){return!0}setArray4(e,t){return!0}setMatrices(e,t){return!0}setMatrix3x3(e,t){return!0}setMatrix2x2(e,t){return!0}setFloat(e,t){return!0}setFloat2(e,t,s){return!0}setFloat3(e,t,s,i){return!0}setBool(e,t){return!0}setFloat4(e,t,s,i,a){return!0}setAlphaMode(e,t=!1){this._alphaMode!==e&&(this.alphaState.alphaBlend=e!==0,t||this.setDepthWrite(e===0),this._alphaMode=e)}bindBuffers(e,t,s){}wipeCaches(e){this.preventCacheWipeBetweenFrames||(this.resetTextureCache(),this._currentEffect=null,e&&(this._currentProgram=null,this._stencilStateComposer.reset(),this.depthCullingState.reset(),this.alphaState.reset()),this._cachedVertexBuffers=null,this._cachedIndexBuffer=null,this._cachedEffectForVertexBuffers=null)}draw(e,t,s,i){}drawElementsType(e,t,s,i){}drawArraysType(e,t,s,i){}_createTexture(){return{}}_releaseTexture(e){}createTexture(e,t,s,i,a=3,r=null,n=null,o=null,h=null,l=null,u=null,g){const _=new rt(this,1),f=String(e);return _.url=f,_.generateMipMaps=!t,_.samplingMode=a,_.invertY=s,_.baseWidth=this._options.textureSize,_.baseHeight=this._options.textureSize,_.width=this._options.textureSize,_.height=this._options.textureSize,l&&(_.format=l),_.isReady=!0,r&&setTimeout(()=>{r(_)}),this._internalTexturesCache.push(_),_}_createHardwareRenderTargetWrapper(e,t,s){const i=new fs(e,t,s,this);return this._renderTargetWrapperCache.push(i),i}createRenderTargetTexture(e,t){const s=this._createHardwareRenderTargetWrapper(!1,!1,e),i={};t!==void 0&&typeof t=="object"?(i.generateMipMaps=t.generateMipMaps,i.generateDepthBuffer=t.generateDepthBuffer===void 0?!0:t.generateDepthBuffer,i.generateStencilBuffer=i.generateDepthBuffer&&t.generateStencilBuffer,i.type=t.type===void 0?0:t.type,i.samplingMode=t.samplingMode===void 0?3:t.samplingMode):(i.generateMipMaps=t,i.generateDepthBuffer=!0,i.generateStencilBuffer=!1,i.type=0,i.samplingMode=3);const a=new rt(this,5),r=e.width||e,n=e.height||e;return s._generateDepthBuffer=i.generateDepthBuffer,s._generateStencilBuffer=!!i.generateStencilBuffer,a.baseWidth=r,a.baseHeight=n,a.width=r,a.height=n,a.isReady=!0,a.samples=1,a.generateMipMaps=!!i.generateMipMaps,a.samplingMode=i.samplingMode,a.type=i.type,this._internalTexturesCache.push(a),s}createRenderTargetCubeTexture(e,t){const s=this._createHardwareRenderTargetWrapper(!1,!0,e),i={generateMipMaps:!0,generateDepthBuffer:!0,generateStencilBuffer:!1,type:0,samplingMode:3,format:5,...t};i.generateStencilBuffer=i.generateDepthBuffer&&i.generateStencilBuffer,(i.type===1&&!this._caps.textureFloatLinearFiltering||i.type===2&&!this._caps.textureHalfFloatLinearFiltering)&&(i.samplingMode=1),s._generateDepthBuffer=i.generateDepthBuffer,s._generateStencilBuffer=!!i.generateStencilBuffer;const a=new rt(this,5);return a.baseWidth=e,a.baseHeight=e,a.width=e,a.height=e,a.isReady=!0,a.isCube=!0,a.samples=1,a.generateMipMaps=!!i.generateMipMaps,a.samplingMode=i.samplingMode,a.type=i.type,this._internalTexturesCache.push(a),s}updateTextureSamplingMode(e,t){t.samplingMode=e}createRawTexture(e,t,s,i,a,r,n,o=null,h=0,l=0,u=!1){const g=new rt(this,3);return g.baseWidth=t,g.baseHeight=s,g.width=t,g.height=s,g.format=i,g.generateMipMaps=a,g.samplingMode=n,g.invertY=r,g._compression=o,g.type=h,g._useSRGBBuffer=u,this._doNotHandleContextLost||(g._bufferView=e),g}updateRawTexture(e,t,s,i,a=null,r=0,n=!1){e&&(e._bufferView=t,e.format=s,e.invertY=i,e._compression=a,e.type=r,e._useSRGBBuffer=n)}bindFramebuffer(e,t,s,i,a){this._currentRenderTarget&&this.unBindFramebuffer(this._currentRenderTarget),this._currentRenderTarget=e,this._currentFramebuffer=null,this._cachedViewport&&!a&&this.setViewport(this._cachedViewport,s,i)}unBindFramebuffer(e,t=!1,s){this._currentRenderTarget=null,s&&s(),this._currentFramebuffer=null}createDynamicVertexBuffer(e){const t=new ut;return t.references=1,t.capacity=1,t}updateDynamicTexture(e,t,s,i=!1,a){}areAllEffectsReady(){return!0}getError(){return 0}_getUnpackAlignement(){return 1}_unpackFlipY(e){}updateDynamicIndexBuffer(e,t,s=0){}updateDynamicVertexBuffer(e,t,s,i){}_bindTextureDirectly(e,t){return this._boundTexturesCache[this._activeChannel]!==t?(this._boundTexturesCache[this._activeChannel]=t,!0):!1}_bindTexture(e,t){e<0||this._bindTextureDirectly(0,t)}_deleteBuffer(e){}releaseEffects(){}displayLoadingUI(){}hideLoadingUI(){}set loadingUIText(e){}flushFramebuffer(){}_uploadCompressedDataToTextureDirectly(e,t,s,i,a,r=0,n=0){}_uploadDataToTextureDirectly(e,t,s=0,i=0){}_uploadArrayBufferViewToTexture(e,t,s=0,i=0){}_uploadImageToTexture(e,t,s=0,i=0){}}class Ji{static async CreateAsync(e,t){return await Bt.IsSupportedAsync?Bt.CreateAsync(e,t):st.IsSupported?new st(e,void 0,t):new di(t)}}class ui extends Me{set axisFactor(e){this._axisFactor=e;const t=this._scaleBoxesParent.getChildMeshes();let s=0;for(let i=0;i<3;i++)for(let a=0;a<3;a++)for(let r=0;r<3;r++){const n=(i===1?1:0)+(a===1?1:0)+(r===1?1:0);if(!(n===1||n===3)){if(t[s]){const o=new c(i-1,a-1,r-1);o.multiplyInPlace(this._axisFactor),t[s].setEnabled(o.lengthSquared()>ne)}s++}}}get axisFactor(){return this._axisFactor}set scaleDragSpeed(e){this._scaleDragSpeed=e}get scaleDragSpeed(){return this._scaleDragSpeed}get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverColoredMaterial}get pointerDragBehavior(){return this._pointerDragBehavior}get isDragging(){return this._dragging||this._pointerDragBehavior.dragging}setColor(e){this._coloredMaterial.emissiveColor=e,this._hoverColoredMaterial.emissiveColor=e.clone().add(new k(.3,.3,.3)),this._lineBoundingBox.getChildren().forEach(t=>{t.color&&(t.color=e)})}constructor(e=k.Gray(),t=fe.DefaultKeepDepthUtilityLayer){super(t),this._boundingDimensions=new c(1,1,1),this._renderObserver=null,this._pointerObserver=null,this._scaleDragSpeed=.2,this._rotateAnchorsDragBehaviors=[],this._scaleBoxesDragBehaviors=[],this._dragging=!1,this._tmpQuaternion=new y,this._tmpVector=new c(0,0,0),this._tmpRotationMatrix=new C,this._incrementalStartupValue=c.Zero(),this._incrementalAnchorStartupValue=c.Zero(),this.ignoreChildren=!1,this.includeChildPredicate=null,this.rotationSphereSize=.1,this.scaleBoxSize=.1,this.fixedDragMeshScreenSize=!1,this.fixedDragMeshBoundsSize=!1,this.fixedDragMeshScreenSizeDistanceFactor=10,this.scalingSnapDistance=0,this.rotationSnapDistance=0,this.onDragStartObservable=new N,this.onScaleBoxDragObservable=new N,this.onScaleBoxDragEndObservable=new N,this.onRotationSphereDragObservable=new N,this.onRotationSphereDragEndObservable=new N,this.scalePivot=null,this._axisFactor=new c(1,1,1),this.incrementalSnap=!1,this._existingMeshScale=new c,this._dragMesh=null,this._pointerDragBehavior=new Qe,this._cornerMesh=null,this.updateScale=!1,this._anchorMesh=new X("anchor",t.utilityLayerScene),this._coloredMaterial=new $("",t.utilityLayerScene),this._coloredMaterial.disableLighting=!0,this._hoverColoredMaterial=new $("",t.utilityLayerScene),this._hoverColoredMaterial.disableLighting=!0,this._lineBoundingBox=new X("",t.utilityLayerScene),this._lineBoundingBox.rotationQuaternion=new y;const s=[];s.push(U("lines",{points:[new c(0,0,0),new c(this._boundingDimensions.x,0,0)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,0,0),new c(0,this._boundingDimensions.y,0)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,0,0),new c(0,0,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(this._boundingDimensions.x,0,0),new c(this._boundingDimensions.x,this._boundingDimensions.y,0)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(this._boundingDimensions.x,0,0),new c(this._boundingDimensions.x,0,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,this._boundingDimensions.y,0),new c(this._boundingDimensions.x,this._boundingDimensions.y,0)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,this._boundingDimensions.y,0),new c(0,this._boundingDimensions.y,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,0,this._boundingDimensions.z),new c(this._boundingDimensions.x,0,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(0,0,this._boundingDimensions.z),new c(0,this._boundingDimensions.y,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(this._boundingDimensions.x,this._boundingDimensions.y,this._boundingDimensions.z),new c(0,this._boundingDimensions.y,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(this._boundingDimensions.x,this._boundingDimensions.y,this._boundingDimensions.z),new c(this._boundingDimensions.x,0,this._boundingDimensions.z)]},t.utilityLayerScene)),s.push(U("lines",{points:[new c(this._boundingDimensions.x,this._boundingDimensions.y,this._boundingDimensions.z),new c(this._boundingDimensions.x,this._boundingDimensions.y,0)]},t.utilityLayerScene)),s.forEach(a=>{a.color=e,a.position.addInPlace(new c(-this._boundingDimensions.x/2,-this._boundingDimensions.y/2,-this._boundingDimensions.z/2)),a.isPickable=!1,this._lineBoundingBox.addChild(a)}),this._rootMesh.addChild(this._lineBoundingBox),this.setColor(e),this._rotateAnchorsParent=new X("",t.utilityLayerScene),this._rotateAnchorsParent.rotationQuaternion=new y;for(let a=0;a<12;a++){const r=Fe("",{width:a<4||a>=8?1.6:.4,height:a>=4&&a<8?1.6:.4,depth:.4},t.utilityLayerScene);r.rotation.x=a<4||a>=8?Math.PI*.25:0,r.rotation.y=a>=4&&a<8?Math.PI*.25:0,r.bakeTransformIntoVertices(r.computeWorldMatrix(!0)),r.rotationQuaternion=new y,r.material=this._coloredMaterial,r.isNearGrabbable=!0;const n=new Qe({});n.moveAttached=!1,n.updateDragPlane=!1,r.addBehavior(n);const o=new c(1,0,0);let h=0,l=0;n.onDragStartObservable.add(()=>{o.copyFrom(r.forward),h=0,l=0}),n.onDragObservable.add(u=>{if(this.onRotationSphereDragObservable.notifyObservers({}),this.attachedMesh){const g=this.attachedMesh.parent;if(g&&g.scaling&&g.scaling.isNonUniformWithinEpsilon(.001)){D.Warn("BoundingBoxGizmo controls are not supported on child meshes with non-uniform parent scaling");return}Ee._RemoveAndStorePivotPoint(this.attachedMesh);const _=o,f=u.dragPlaneNormal.scale(c.Dot(u.dragPlaneNormal,_)),m=_.subtract(f).normalizeToNew();let b=c.Dot(m,u.delta)<0?Math.abs(u.delta.length()):-Math.abs(u.delta.length());if(b=b/this._boundingDimensions.length()*this._anchorMesh.scaling.length(),this.attachedMesh.rotationQuaternion||(this.attachedMesh.rotationQuaternion=y.RotationYawPitchRoll(this.attachedMesh.rotation.y,this.attachedMesh.rotation.x,this.attachedMesh.rotation.z)),this._anchorMesh.rotationQuaternion||(this._anchorMesh.rotationQuaternion=y.RotationYawPitchRoll(this._anchorMesh.rotation.y,this._anchorMesh.rotation.x,this._anchorMesh.rotation.z)),h+=b,Math.abs(h)<=2*Math.PI){if(this.rotationSnapDistance>0){const P=Math.floor(Math.abs(h)/this.rotationSnapDistance)*(h<0?-1:1),x=this.rotationSnapDistance*P;b=x-l,l=x}a>=8?y.RotationYawPitchRollToRef(0,0,b,this._tmpQuaternion):a>=4?y.RotationYawPitchRollToRef(b,0,0,this._tmpQuaternion):y.RotationYawPitchRollToRef(0,b,0,this._tmpQuaternion),this.attachedMesh.isUsingPivotMatrix()&&this._anchorMesh.position.copyFrom(this.attachedMesh.position),this._anchorMesh.addChild(this.attachedMesh),this._anchorMesh.getScene().useRightHandedSystem&&this._tmpQuaternion.conjugateInPlace(),this._tmpQuaternion.normalize(),this._anchorMesh.rotationQuaternion.multiplyToRef(this._tmpQuaternion,this._anchorMesh.rotationQuaternion),this._anchorMesh.rotationQuaternion.normalize(),this._anchorMesh.removeChild(this.attachedMesh),this.attachedMesh.setParent(g)}this.updateBoundingBox(),Ee._RestorePivotPoint(this.attachedMesh)}this._updateDummy()}),n.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({}),this._dragging=!0,this._selectNode(r)}),n.onDragEndObservable.add(u=>{this.onRotationSphereDragEndObservable.notifyObservers({}),this._dragging=!1,this._selectNode(null),this._updateDummy(),this._unhoverMeshOnTouchUp(u.pointerInfo,r)}),this._rotateAnchorsDragBehaviors.push(n),this._rotateAnchorsParent.addChild(r)}this._rootMesh.addChild(this._rotateAnchorsParent),this._scaleBoxesParent=new X("",t.utilityLayerScene),this._scaleBoxesParent.rotationQuaternion=new y;for(let a=0;a<3;a++)for(let r=0;r<3;r++)for(let n=0;n<3;n++){const o=(a===1?1:0)+(r===1?1:0)+(n===1?1:0);if(o===1||o===3)continue;const h=o===2?Fe("",{size:1},t.utilityLayerScene):this._getCornerMesh(t);o===0&&(h.rotationQuaternion=y.FromEulerAngles(r*.25*Math.PI,(n+3*a-a*n)*.25*Math.PI,0)),h.material=this._coloredMaterial,h._internalMetadata=o===2,h.isNearGrabbable=!0,d.Vector3[0].set(a-1,r-1,n-1),d.Vector3[0].normalize(),h.computeWorldMatrix(!0).invertToRef(d.Matrix[0]);const l=c.TransformCoordinates(d.Vector3[0],d.Matrix[0]);l.normalize();const u=new Qe({dragAxis:l});u.updateDragPlane=!1,u.moveAttached=!1;let g=0,_=0;h.addBehavior(u),u.onDragObservable.add(f=>{if(this.onScaleBoxDragObservable.notifyObservers({}),this.attachedMesh){const m=this.attachedMesh.parent;if(m&&m.scaling&&m.scaling.isNonUniformWithinEpsilon(.001)){D.Warn("BoundingBoxGizmo controls are not supported on child meshes with non-uniform parent scaling");return}Ee._RemoveAndStorePivotPoint(this.attachedMesh);let b=f.dragDistance/this._boundingDimensions.length()*this._anchorMesh.scaling.length();if(g+=b,this.scalingSnapDistance>0){const v=Math.floor(Math.abs(g)/this.scalingSnapDistance)*(g<0?-1:1),R=this.scalingSnapDistance*v;b=R-_,_=R}const P=new c(b,b,b),x=new c(_,_,_);o===2&&(P.x*=Math.abs(l.x),P.y*=Math.abs(l.y),P.z*=Math.abs(l.z)),P.scaleInPlace(this._scaleDragSpeed),P.multiplyInPlace(this._axisFactor),x.scaleInPlace(this._scaleDragSpeed),x.multiplyInPlace(this._axisFactor),x.addInPlace(this._incrementalStartupValue),this.updateBoundingBox(),this.scalePivot?(this.attachedMesh.getWorldMatrix().getRotationMatrixToRef(this._tmpRotationMatrix),this._boundingDimensions.scaleToRef(.5,this._tmpVector),c.TransformCoordinatesToRef(this._tmpVector,this._tmpRotationMatrix,this._tmpVector),this._anchorMesh.position.subtractInPlace(this._tmpVector),this._boundingDimensions.multiplyToRef(this.scalePivot,this._tmpVector),c.TransformCoordinatesToRef(this._tmpVector,this._tmpRotationMatrix,this._tmpVector),this._anchorMesh.position.addInPlace(this._tmpVector)):(h.absolutePosition.subtractToRef(this._anchorMesh.position,this._tmpVector),this._anchorMesh.position.subtractInPlace(this._tmpVector),this.attachedMesh.isUsingPivotMatrix()&&this._anchorMesh.position.subtractInPlace(this.attachedMesh.getPivotPoint())),this._anchorMesh.addChild(this.attachedMesh),this.incrementalSnap?(x.x/=Math.abs(this._incrementalStartupValue.x)<ne?1:this._incrementalStartupValue.x,x.y/=Math.abs(this._incrementalStartupValue.y)<ne?1:this._incrementalStartupValue.y,x.z/=Math.abs(this._incrementalStartupValue.z)<ne?1:this._incrementalStartupValue.z,x.x=Math.max(this._incrementalAnchorStartupValue.x*x.x,this.scalingSnapDistance),x.y=Math.max(this._incrementalAnchorStartupValue.y*x.y,this.scalingSnapDistance),x.z=Math.max(this._incrementalAnchorStartupValue.z*x.z,this.scalingSnapDistance),this._anchorMesh.scaling.x+=(x.x-this._anchorMesh.scaling.x)*Math.abs(l.x),this._anchorMesh.scaling.y+=(x.y-this._anchorMesh.scaling.y)*Math.abs(l.y),this._anchorMesh.scaling.z+=(x.z-this._anchorMesh.scaling.z)*Math.abs(l.z)):(this._anchorMesh.scaling.addInPlace(P),(this._anchorMesh.scaling.x<0||this._anchorMesh.scaling.y<0||this._anchorMesh.scaling.z<0)&&this._anchorMesh.scaling.subtractInPlace(P)),this._anchorMesh.removeChild(this.attachedMesh),this.attachedMesh.setParent(m),Ee._RestorePivotPoint(this.attachedMesh)}this._updateDummy()}),u.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({}),this._dragging=!0,this._selectNode(h),g=0,_=0,this._incrementalStartupValue.copyFrom(this.attachedMesh.scaling),this._incrementalAnchorStartupValue.copyFrom(this._anchorMesh.scaling)}),u.onDragEndObservable.add(f=>{this.onScaleBoxDragEndObservable.notifyObservers({}),this._dragging=!1,this._selectNode(null),this._updateDummy(),this._unhoverMeshOnTouchUp(f.pointerInfo,h)}),this._scaleBoxesParent.addChild(h),this._scaleBoxesDragBehaviors.push(u)}this._rootMesh.addChild(this._scaleBoxesParent);const i=[];this._pointerObserver=t.utilityLayerScene.onPointerObservable.add(a=>{i[a.event.pointerId]?a.pickInfo&&a.pickInfo.pickedMesh!=i[a.event.pointerId]&&(i[a.event.pointerId].material=this._coloredMaterial,delete i[a.event.pointerId],this._isHovered=!1):this._rotateAnchorsParent.getChildMeshes().concat(this._scaleBoxesParent.getChildMeshes()).forEach(r=>{a.pickInfo&&a.pickInfo.pickedMesh==r&&(i[a.event.pointerId]=r,r.material=this._hoverColoredMaterial,this._isHovered=!0)})}),this._renderObserver=this.gizmoLayer.originalScene.onBeforeRenderObservable.add(()=>{this.attachedMesh&&!this._existingMeshScale.equals(this.attachedMesh.scaling)?this.updateBoundingBox():(this.fixedDragMeshScreenSize||this.fixedDragMeshBoundsSize)&&(this._updateRotationAnchors(),this._updateScaleBoxes()),this._dragMesh&&this.attachedMesh&&this._pointerDragBehavior.dragging&&(this._lineBoundingBox.position.rotateByQuaternionToRef(this._rootMesh.rotationQuaternion,this._tmpVector),this.attachedMesh.setAbsolutePosition(this._dragMesh.position.add(this._tmpVector.scale(-1))))}),this.updateBoundingBox()}_getCornerMesh(e){if(!this._cornerMesh){const t=Fe("",{width:.4,height:.4,depth:1.6},e.utilityLayerScene);t.position.z=.6;const s=Fe("",{width:.4,height:1.6,depth:.4},e.utilityLayerScene);s.position.y=.6;const i=Fe("",{width:1.6,height:.4,depth:.4},e.utilityLayerScene);return i.position.x=.6,this._cornerMesh=oe.MergeMeshes([i,s,t],!0),this._cornerMesh}return this._cornerMesh.clone()}_attachedNodeChanged(e){if(e){this._anchorMesh.scaling.setAll(1),Ee._RemoveAndStorePivotPoint(e);const t=e.parent;this._anchorMesh.addChild(e),this._anchorMesh.removeChild(e),e.setParent(t),Ee._RestorePivotPoint(e),this.updateBoundingBox(),e.getChildMeshes(!1).forEach(s=>{s.markAsDirty("scaling")}),this.gizmoLayer.utilityLayerScene.onAfterRenderObservable.addOnce(()=>{this._updateDummy()})}}_selectNode(e){this._rotateAnchorsParent.getChildMeshes().concat(this._scaleBoxesParent.getChildMeshes()).forEach(t=>{t.isVisible=!e||t==e})}_unhoverMeshOnTouchUp(e,t){(e==null?void 0:e.event)instanceof PointerEvent&&(e==null?void 0:e.event.pointerType)==="touch"&&(t.material=this._coloredMaterial)}getScaleBoxes(){return this._scaleBoxesParent.getChildMeshes()}updateBoundingBox(){if(this.attachedMesh){Ee._RemoveAndStorePivotPoint(this.attachedMesh);const e=this.attachedMesh.parent;this.attachedMesh.setParent(null),this._update(),this.attachedMesh.rotationQuaternion||(this.attachedMesh.rotationQuaternion=y.RotationYawPitchRoll(this.attachedMesh.rotation.y,this.attachedMesh.rotation.x,this.attachedMesh.rotation.z)),this._anchorMesh.rotationQuaternion||(this._anchorMesh.rotationQuaternion=y.RotationYawPitchRoll(this._anchorMesh.rotation.y,this._anchorMesh.rotation.x,this._anchorMesh.rotation.z)),this._anchorMesh.rotationQuaternion.copyFrom(this.attachedMesh.rotationQuaternion),this._tmpQuaternion.copyFrom(this.attachedMesh.rotationQuaternion),this._tmpVector.copyFrom(this.attachedMesh.position),this.attachedMesh.rotationQuaternion.set(0,0,0,1),this.attachedMesh.position.set(0,0,0);const t=this.attachedMesh.getHierarchyBoundingVectors(!this.ignoreChildren,this.includeChildPredicate);t.max.subtractToRef(t.min,this._boundingDimensions),this._lineBoundingBox.scaling.copyFrom(this._boundingDimensions),this._lineBoundingBox.position.set((t.max.x+t.min.x)/2,(t.max.y+t.min.y)/2,(t.max.z+t.min.z)/2),this._rotateAnchorsParent.position.copyFrom(this._lineBoundingBox.position),this._scaleBoxesParent.position.copyFrom(this._lineBoundingBox.position),this._lineBoundingBox.computeWorldMatrix(),this._anchorMesh.position.copyFrom(this._lineBoundingBox.absolutePosition),this.attachedMesh.rotationQuaternion.copyFrom(this._tmpQuaternion),this.attachedMesh.position.copyFrom(this._tmpVector),this.attachedMesh.setParent(e)}this._updateRotationAnchors(),this._updateScaleBoxes(),this.attachedMesh&&(this._existingMeshScale.copyFrom(this.attachedMesh.scaling),Ee._RestorePivotPoint(this.attachedMesh))}_updateRotationAnchors(){const e=this._rotateAnchorsParent.getChildMeshes();for(let t=0;t<3;t++)for(let s=0;s<2;s++)for(let i=0;i<2;i++){const a=t*4+s*2+i;e[a].position.normalizeToRef(d.Vector3[0]),t==0&&(e[a].position.set(0,this._boundingDimensions.y*(s-.5),this._boundingDimensions.z*(i-.5)),d.Vector3[1].set(1,0,0)),t==1&&(e[a].position.set(this._boundingDimensions.x*(s-.5),0,this._boundingDimensions.z*(i-.5)),d.Vector3[1].set(0,1,0)),t==2&&(e[a].position.set(this._boundingDimensions.x*(s-.5),this._boundingDimensions.y*(i-.5),0),d.Vector3[1].set(0,0,1));const r=d.Vector3[2];if(c.CrossToRef(d.Vector3[0],d.Vector3[1],r),r.normalize(),r.addInPlace(e[a].position),e[a].lookAt(r),this.fixedDragMeshScreenSize&&this.gizmoLayer.utilityLayerScene.activeCamera){e[a].absolutePosition.subtractToRef(this.gizmoLayer.utilityLayerScene.activeCamera.position,this._tmpVector);const n=this.rotationSphereSize*this._tmpVector.length()/this.fixedDragMeshScreenSizeDistanceFactor;e[a].scaling.set(n,n,n)}else this.fixedDragMeshBoundsSize?e[a].scaling.set(this.rotationSphereSize*this._boundingDimensions.x,this.rotationSphereSize*this._boundingDimensions.y,this.rotationSphereSize*this._boundingDimensions.z):e[a].scaling.set(this.rotationSphereSize,this.rotationSphereSize,this.rotationSphereSize)}}_updateScaleBoxes(){const e=this._scaleBoxesParent.getChildMeshes();let t=0;for(let s=0;s<3;s++)for(let i=0;i<3;i++)for(let a=0;a<3;a++){const r=(s===1?1:0)+(i===1?1:0)+(a===1?1:0);if(!(r===1||r===3)){if(e[t])if(e[t].position.set(this._boundingDimensions.x*(s/2),this._boundingDimensions.y*(i/2),this._boundingDimensions.z*(a/2)),e[t].position.addInPlace(new c(-this._boundingDimensions.x/2,-this._boundingDimensions.y/2,-this._boundingDimensions.z/2)),this.fixedDragMeshScreenSize&&this.gizmoLayer.utilityLayerScene.activeCamera){e[t].absolutePosition.subtractToRef(this.gizmoLayer.utilityLayerScene.activeCamera.globalPosition,this._tmpVector);const n=this.scaleBoxSize*this._tmpVector.length()/this.fixedDragMeshScreenSizeDistanceFactor;e[t].scaling.set(n,n,n)}else this.fixedDragMeshBoundsSize?e[t].scaling.set(this.scaleBoxSize*this._boundingDimensions.x,this.scaleBoxSize*this._boundingDimensions.y,this.scaleBoxSize*this._boundingDimensions.z):e[t].scaling.set(this.scaleBoxSize,this.scaleBoxSize,this.scaleBoxSize);t++}}}setEnabledRotationAxis(e){this._rotateAnchorsParent.getChildMeshes().forEach((t,s)=>{s<4?t.setEnabled(e.indexOf("x")!=-1):s<8?t.setEnabled(e.indexOf("y")!=-1):t.setEnabled(e.indexOf("z")!=-1)})}setEnabledScaling(e,t=!1){this._scaleBoxesParent.getChildMeshes().forEach(s=>{let i=e;t&&s._internalMetadata===!0&&(i=!1),s.setEnabled(i)})}_updateDummy(){this._dragMesh&&(this._dragMesh.position.copyFrom(this._lineBoundingBox.getAbsolutePosition()),this._dragMesh.scaling.copyFrom(this._lineBoundingBox.scaling),this._dragMesh.rotationQuaternion.copyFrom(this._rootMesh.rotationQuaternion))}enableDragBehavior(){this._dragMesh=Fe("dummy",{size:1},this.gizmoLayer.utilityLayerScene),this._dragMesh.visibility=0,this._dragMesh.rotationQuaternion=new y,this._pointerDragBehavior.useObjectOrientationForDragging=!1,this._dragMesh.addBehavior(this._pointerDragBehavior)}releaseDrag(){this._scaleBoxesDragBehaviors.forEach(e=>{e.releaseDrag()}),this._rotateAnchorsDragBehaviors.forEach(e=>{e.releaseDrag()}),this._pointerDragBehavior.releaseDrag()}dispose(){this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.gizmoLayer.originalScene.onBeforeRenderObservable.remove(this._renderObserver),this._lineBoundingBox.dispose(),this._rotateAnchorsParent.dispose(),this._scaleBoxesParent.dispose(),this._dragMesh&&this._dragMesh.dispose(),this._scaleBoxesDragBehaviors.length=0,this._rotateAnchorsDragBehaviors.length=0,super.dispose()}static MakeNotPickableAndWrapInBoundingBox(e){const t=n=>{n.isPickable=!1,n.getChildMeshes().forEach(o=>{t(o)})};t(e),e.rotationQuaternion||(e.rotationQuaternion=y.RotationYawPitchRoll(e.rotation.y,e.rotation.x,e.rotation.z));const s=e.position.clone(),i=e.rotationQuaternion.clone();e.rotationQuaternion.set(0,0,0,1),e.position.set(0,0,0);const a=Fe("box",{size:1},e.getScene()),r=e.getHierarchyBoundingVectors();return r.max.subtractToRef(r.min,a.scaling),a.scaling.y===0&&(a.scaling.y=ne),a.scaling.x===0&&(a.scaling.x=ne),a.scaling.z===0&&(a.scaling.z=ne),a.position.set((r.max.x+r.min.x)/2,(r.max.y+r.min.y)/2,(r.max.z+r.min.z)/2),e.addChild(a),e.rotationQuaternion.copyFrom(i),e.position.copyFrom(s),e.removeChild(a),a.addChild(e),a.visibility=0,a}setCustomMesh(){D.Error("Custom meshes are not supported on this gizmo")}}class _i extends Me{get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,this._checkBillboardTransform(),[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,this._checkBillboardTransform(),[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}_checkBillboardTransform(){this._nodeAttached&&this._nodeAttached.billboardMode&&D.Log("Rotation Gizmo will not work with transforms in billboard mode.")}set sensitivity(e){this._sensitivity=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t&&(t.sensitivity=e)})}get sensitivity(){return this._sensitivity}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=fe.DefaultUtilityLayer,t=32,s=!1,i=1,a,r){super(e),this.onDragStartObservable=new N,this.onDragObservable=new N,this.onDragEndObservable=new N,this._observables=[],this._sensitivity=1,this._gizmoAxisCache=new Map;const n=r&&r.xOptions&&r.xOptions.color?r.xOptions.color:k.Red().scale(.5),o=r&&r.yOptions&&r.yOptions.color?r.yOptions.color:k.Green().scale(.5),h=r&&r.zOptions&&r.zOptions.color?r.zOptions.color:k.Blue().scale(.5);this.xGizmo=new _t(new c(1,0,0),n,e,t,this,s,i),this.yGizmo=new _t(new c(0,1,0),o,e,t,this,s,i),this.zGizmo=new _t(new c(0,0,1),h,e,t,this,s,i),this.additionalTransformNode=r==null?void 0:r.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(l=>{r&&r.updateScale!=null&&(l.updateScale=r.updateScale),l.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),l.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),l.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,this.attachedNode=null,a?a.addToAxisCache(this._gizmoAxisCache):Me.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}set updateGizmoRotationToMatchAttachedMesh(e){this.xGizmo&&(this.xGizmo.updateGizmoRotationToMatchAttachedMesh=e,this.yGizmo.updateGizmoRotationToMatchAttachedMesh=e,this.zGizmo.updateGizmoRotationToMatchAttachedMesh=e)}get updateGizmoRotationToMatchAttachedMesh(){return this.xGizmo.updateGizmoRotationToMatchAttachedMesh}set updateGizmoPositionToMatchAttachedMesh(e){this.xGizmo&&(this.xGizmo.updateGizmoPositionToMatchAttachedMesh=e,this.yGizmo.updateGizmoPositionToMatchAttachedMesh=e,this.zGizmo.updateGizmoPositionToMatchAttachedMesh=e)}get updateGizmoPositionToMatchAttachedMesh(){return this.xGizmo.updateGizmoPositionToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.anchorPoint=e})}get anchorPoint(){return this._anchorPoint}set coordinatesMode(e){[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t.coordinatesMode=e})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}set snapDistance(e){this.xGizmo&&(this.xGizmo.snapDistance=e,this.yGizmo.snapDistance=e,this.zGizmo.snapDistance=e)}get snapDistance(){return this.xGizmo.snapDistance}set scaleRatio(e){this.xGizmo&&(this.xGizmo.scaleRatio=e,this.yGizmo.scaleRatio=e,this.zGizmo.scaleRatio=e)}get scaleRatio(){return this.xGizmo.scaleRatio}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag()}dispose(){this.xGizmo.dispose(),this.yGizmo.dispose(),this.zGizmo.dispose(),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear(),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)})}setCustomMesh(){D.Error("Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo)")}}class tt extends Me{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}static _CreatePlane(e,t){const s=new X("plane",e),i=bs("dragPlane",{width:.1375,height:.1375,sideOrientation:2},e);return i.material=t,i.parent=s,s}constructor(e,t=k.Gray(),s=fe.DefaultUtilityLayer,i=null,a=k.Yellow(),r=k.Gray()){var g;super(s),this._pointerObserver=null,this.snapDistance=0,this.onSnapObservable=new N,this._isEnabled=!1,this._parent=null,this._dragging=!1,this._parent=i,this._coloredMaterial=new $("",s.utilityLayerScene),this._coloredMaterial.diffuseColor=t,this._coloredMaterial.specularColor=t.subtract(new k(.1,.1,.1)),this._hoverMaterial=new $("",s.utilityLayerScene),this._hoverMaterial.diffuseColor=a,this._disableMaterial=new $("",s.utilityLayerScene),this._disableMaterial.diffuseColor=r,this._disableMaterial.alpha=.4,this._gizmoMesh=tt._CreatePlane(s.utilityLayerScene,this._coloredMaterial),this._gizmoMesh.lookAt(this._rootMesh.position.add(e)),this._gizmoMesh.scaling.scaleInPlace(1/3),this._gizmoMesh.parent=this._rootMesh;let n=0;const o=new c,h={snapDistance:0};this.dragBehavior=new Qe({dragPlaneNormal:e}),this.dragBehavior.moveAttached=!1,this._rootMesh.addBehavior(this.dragBehavior),this.dragBehavior.onDragObservable.add(_=>{if(this.attachedNode){if(this.snapDistance==0)this.attachedNode.getWorldMatrix().getTranslationToRef(d.Vector3[0]),d.Vector3[0].addToRef(_.delta,d.Vector3[0]),this.dragBehavior.validateDrag(d.Vector3[0])&&this.attachedNode.getWorldMatrix().addTranslationFromFloats(_.delta.x,_.delta.y,_.delta.z);else if(n+=_.dragDistance,Math.abs(n)>this.snapDistance){const f=Math.floor(Math.abs(n)/this.snapDistance);n=n%this.snapDistance,_.delta.normalizeToRef(o),o.scaleInPlace(this.snapDistance*f),this.attachedNode.getWorldMatrix().getTranslationToRef(d.Vector3[0]),d.Vector3[0].addToRef(o,d.Vector3[0]),this.dragBehavior.validateDrag(d.Vector3[0])&&(this.attachedNode.getWorldMatrix().addTranslationFromFloats(o.x,o.y,o.z),h.snapDistance=this.snapDistance*f,this.onSnapObservable.notifyObservers(h))}this._matrixChanged()}}),this.dragBehavior.onDragStartObservable.add(()=>{this._dragging=!0}),this.dragBehavior.onDragEndObservable.add(()=>{this._dragging=!1});const l=s._getSharedGizmoLight();l.includedOnlyMeshes=l.includedOnlyMeshes.concat(this._rootMesh.getChildMeshes(!1));const u={gizmoMeshes:this._gizmoMesh.getChildMeshes(),colliderMeshes:this._gizmoMesh.getChildMeshes(),material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:this.dragBehavior};(g=this._parent)==null||g.addToAxisCache(this._gizmoMesh,u),this._pointerObserver=s.utilityLayerScene.onPointerObservable.add(_=>{var f;if(!this._customMeshSet&&(this._isHovered=u.colliderMeshes.indexOf((f=_==null?void 0:_.pickInfo)==null?void 0:f.pickedMesh)!=-1,!this._parent)){const m=u.dragBehavior.enabled?this._isHovered||this._dragging?this._hoverMaterial:this._coloredMaterial:this._disableMaterial;this._setGizmoMeshMaterial(u.gizmoMeshes,m)}}),this.dragBehavior.onEnabledObservable.add(_=>{this._setGizmoMeshMaterial(u.gizmoMeshes,_?this._coloredMaterial:this._disableMaterial)})}_attachedNodeChanged(e){this.dragBehavior&&(this.dragBehavior.enabled=!!e)}set isEnabled(e){this._isEnabled=e,e?this._parent&&(this.attachedNode=this._parent.attachedNode):this.attachedNode=null}get isEnabled(){return this._isEnabled}dispose(){this.onSnapObservable.clear(),this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(this._pointerObserver),this.dragBehavior.detach(),super.dispose(),this._gizmoMesh&&this._gizmoMesh.dispose(),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()})}}class pi extends Me{get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered||this.xPlaneGizmo.isHovered||this.yPlaneGizmo.isHovered||this.zPlaneGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging||this.xPlaneGizmo.dragBehavior.dragging||this.yPlaneGizmo.dragBehavior.dragging||this.zPlaneGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=fe.DefaultUtilityLayer,t=1,s,i){super(e),this._meshAttached=null,this._nodeAttached=null,this._observables=[],this._gizmoAxisCache=new Map,this.onDragStartObservable=new N,this.onDragObservable=new N,this.onDragEndObservable=new N,this._planarGizmoEnabled=!1,this.xGizmo=new ue(new c(1,0,0),k.Red().scale(.5),e,this,t),this.yGizmo=new ue(new c(0,1,0),k.Green().scale(.5),e,this,t),this.zGizmo=new ue(new c(0,0,1),k.Blue().scale(.5),e,this,t),this.xPlaneGizmo=new tt(new c(1,0,0),k.Red().scale(.5),this.gizmoLayer,this),this.yPlaneGizmo=new tt(new c(0,1,0),k.Green().scale(.5),this.gizmoLayer,this),this.zPlaneGizmo=new tt(new c(0,0,1),k.Blue().scale(.5),this.gizmoLayer,this),this.additionalTransformNode=i==null?void 0:i.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(a=>{a.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),a.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),a.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,s?s.addToAxisCache(this._gizmoAxisCache):Me.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}set planarGizmoEnabled(e){this._planarGizmoEnabled=e,[this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.isEnabled=e,e&&(t.attachedMesh?t.attachedMesh=this.attachedMesh:t.attachedNode=this.attachedNode))},this)}get planarGizmoEnabled(){return this._planarGizmoEnabled}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}set updateGizmoRotationToMatchAttachedMesh(e){this._updateGizmoRotationToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.updateGizmoRotationToMatchAttachedMesh=e)})}get updateGizmoRotationToMatchAttachedMesh(){return this._updateGizmoRotationToMatchAttachedMesh}set updateGizmoPositionToMatchAttachedMesh(e){this._updateGizmoPositionToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.updateGizmoPositionToMatchAttachedMesh=e)})}get updateGizmoPositionToMatchAttachedMesh(){return this._updateGizmoPositionToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.anchorPoint=e})}get anchorPoint(){return this._anchorPoint}set coordinatesMode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t.coordinatesMode=e})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}set snapDistance(e){this._snapDistance=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.snapDistance=e)})}get snapDistance(){return this._snapDistance}set scaleRatio(e){this._scaleRatio=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag(),this.xPlaneGizmo.dragBehavior.releaseDrag(),this.yPlaneGizmo.dragBehavior.releaseDrag(),this.zPlaneGizmo.dragBehavior.releaseDrag()}dispose(){[this.xGizmo,this.yGizmo,this.zGizmo,this.xPlaneGizmo,this.yPlaneGizmo,this.zPlaneGizmo].forEach(e=>{e&&e.dispose()}),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)}),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear()}setCustomMesh(){D.Error("Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo,gizmo.xPlaneGizmo, gizmo.yPlaneGizmo, gizmo.zPlaneGizmo)")}}class gi extends Me{get coloredMaterial(){return this._coloredMaterial}get hoverMaterial(){return this._hoverMaterial}get disableMaterial(){return this._disableMaterial}get attachedMesh(){return this._meshAttached}set attachedMesh(e){this._meshAttached=e,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.isEnabled?t.attachedMesh=e:t.attachedMesh=null})}get attachedNode(){return this._nodeAttached}set attachedNode(e){this._meshAttached=null,this._nodeAttached=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.isEnabled?t.attachedNode=e:t.attachedNode=null})}set updateScale(e){this.xGizmo&&(this.xGizmo.updateScale=e,this.yGizmo.updateScale=e,this.zGizmo.updateScale=e)}get updateScale(){return this.xGizmo.updateScale}get isHovered(){return this.xGizmo.isHovered||this.yGizmo.isHovered||this.zGizmo.isHovered||this.uniformScaleGizmo.isHovered}get isDragging(){return this.xGizmo.dragBehavior.dragging||this.yGizmo.dragBehavior.dragging||this.zGizmo.dragBehavior.dragging||this.uniformScaleGizmo.dragBehavior.dragging}get additionalTransformNode(){return this._additionalTransformNode}set additionalTransformNode(e){[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.additionalTransformNode=e})}constructor(e=fe.DefaultUtilityLayer,t=1,s,i){super(e),this._meshAttached=null,this._nodeAttached=null,this._incrementalSnap=!1,this._sensitivity=1,this._observables=[],this._gizmoAxisCache=new Map,this.onDragStartObservable=new N,this.onDragObservable=new N,this.onDragEndObservable=new N,this.uniformScaleGizmo=this._createUniformScaleMesh(),this.xGizmo=new nt(new c(1,0,0),k.Red().scale(.5),e,this,t),this.yGizmo=new nt(new c(0,1,0),k.Green().scale(.5),e,this,t),this.zGizmo=new nt(new c(0,0,1),k.Blue().scale(.5),e,this,t),this.additionalTransformNode=i==null?void 0:i.additionalTransformNode,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(a=>{a.dragBehavior.onDragStartObservable.add(()=>{this.onDragStartObservable.notifyObservers({})}),a.dragBehavior.onDragObservable.add(()=>{this.onDragObservable.notifyObservers({})}),a.dragBehavior.onDragEndObservable.add(()=>{this.onDragEndObservable.notifyObservers({})})}),this.attachedMesh=null,this.attachedNode=null,s?s.addToAxisCache(this._gizmoAxisCache):Me.GizmoAxisPointerObserver(e,this._gizmoAxisCache)}_createUniformScaleMesh(){this._coloredMaterial=new $("",this.gizmoLayer.utilityLayerScene),this._coloredMaterial.diffuseColor=k.Gray(),this._hoverMaterial=new $("",this.gizmoLayer.utilityLayerScene),this._hoverMaterial.diffuseColor=k.Yellow(),this._disableMaterial=new $("",this.gizmoLayer.utilityLayerScene),this._disableMaterial.diffuseColor=k.Gray(),this._disableMaterial.alpha=.4;const e=new nt(new c(0,1,0),k.Gray().scale(.5),this.gizmoLayer,this);e.updateGizmoRotationToMatchAttachedMesh=!1,e.uniformScaling=!0,this._uniformScalingMesh=At("uniform",{type:1},e.gizmoLayer.utilityLayerScene),this._uniformScalingMesh.scaling.scaleInPlace(.01),this._uniformScalingMesh.visibility=0,this._octahedron=At("",{type:1},e.gizmoLayer.utilityLayerScene),this._octahedron.scaling.scaleInPlace(.007),this._uniformScalingMesh.addChild(this._octahedron),e.setCustomMesh(this._uniformScalingMesh,!0);const t=this.gizmoLayer._getSharedGizmoLight();t.includedOnlyMeshes=t.includedOnlyMeshes.concat(this._octahedron);const s={gizmoMeshes:[this._octahedron,this._uniformScalingMesh],colliderMeshes:[this._octahedron,this._uniformScalingMesh],material:this._coloredMaterial,hoverMaterial:this._hoverMaterial,disableMaterial:this._disableMaterial,active:!1,dragBehavior:e.dragBehavior};return this.addToAxisCache(e._rootMesh,s),e}set updateGizmoRotationToMatchAttachedMesh(e){e?(this._updateGizmoRotationToMatchAttachedMesh=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.updateGizmoRotationToMatchAttachedMesh=e)})):D.Warn("Setting updateGizmoRotationToMatchAttachedMesh = false on scaling gizmo is not supported.")}get updateGizmoRotationToMatchAttachedMesh(){return this._updateGizmoRotationToMatchAttachedMesh}set anchorPoint(e){this._anchorPoint=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.anchorPoint=e)})}get anchorPoint(){return this._anchorPoint}get customRotationQuaternion(){return this._customRotationQuaternion}set customRotationQuaternion(e){this._customRotationQuaternion=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.customRotationQuaternion=e)})}set coordinatesMode(e){e==0&&D.Warn("Setting coordinates Mode to world on scaling gizmo is not supported."),[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t.coordinatesMode=1})}set snapDistance(e){this._snapDistance=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.snapDistance=e)})}get snapDistance(){return this._snapDistance}set incrementalSnap(e){this._incrementalSnap=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.incrementalSnap=e)})}get incrementalSnap(){return this._incrementalSnap}set scaleRatio(e){this._scaleRatio=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}set sensitivity(e){this._sensitivity=e,[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(t=>{t&&(t.sensitivity=e)})}get sensitivity(){return this._sensitivity}addToAxisCache(e,t){this._gizmoAxisCache.set(e,t)}getAxisCache(e){return this._gizmoAxisCache.get(e)}releaseDrag(){this.xGizmo.dragBehavior.releaseDrag(),this.yGizmo.dragBehavior.releaseDrag(),this.zGizmo.dragBehavior.releaseDrag(),this.uniformScaleGizmo.dragBehavior.releaseDrag()}dispose(){[this.xGizmo,this.yGizmo,this.zGizmo,this.uniformScaleGizmo].forEach(e=>{e&&e.dispose()}),this._observables.forEach(e=>{this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(e)}),this.onDragStartObservable.clear(),this.onDragObservable.clear(),this.onDragEndObservable.clear(),[this._uniformScalingMesh,this._octahedron].forEach(e=>{e&&e.dispose()}),[this._coloredMaterial,this._hoverMaterial,this._disableMaterial].forEach(e=>{e&&e.dispose()})}}class $i{get keepDepthUtilityLayer(){return this._defaultKeepDepthUtilityLayer}get utilityLayer(){return this._defaultUtilityLayer}get isHovered(){let e=!1;for(const t in this.gizmos){const s=this.gizmos[t];if(s&&s.isHovered){e=!0;break}}return e}get isDragging(){let e=!1;return[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo,this.gizmos.boundingBoxGizmo].forEach(t=>{t&&t.isDragging&&(e=!0)}),e}set scaleRatio(e){this._scaleRatio=e,[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo].forEach(t=>{t&&(t.scaleRatio=e)})}get scaleRatio(){return this._scaleRatio}set coordinatesMode(e){this._coordinatesMode=e,[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo].forEach(t=>{t&&(t.coordinatesMode=e)})}get coordinatesMode(){return this._coordinatesMode}get attachedMesh(){return this._attachedMesh}get attachedNode(){return this._attachedNode}get additionalTransformNode(){return this._additionalTransformNode}constructor(e,t=1,s=fe.DefaultUtilityLayer,i=fe.DefaultKeepDepthUtilityLayer){this._scene=e,this.clearGizmoOnEmptyPointerEvent=!1,this.enableAutoPicking=!0,this.onAttachedToMeshObservable=new N,this.onAttachedToNodeObservable=new N,this._gizmosEnabled={positionGizmo:!1,rotationGizmo:!1,scaleGizmo:!1,boundingBoxGizmo:!1},this._pointerObservers=[],this._attachedMesh=null,this._attachedNode=null,this._boundingBoxColor=k.FromHexString("#0984e3"),this._thickness=1,this._scaleRatio=1,this._coordinatesMode=1,this._gizmoAxisCache=new Map,this.boundingBoxDragBehavior=new oi,this.attachableMeshes=null,this.attachableNodes=null,this.usePointerToAttachGizmos=!0,this._defaultUtilityLayer=s,this._defaultKeepDepthUtilityLayer=i,this._defaultKeepDepthUtilityLayer.utilityLayerScene.autoClearDepthAndStencil=!1,this._thickness=t,this.gizmos={positionGizmo:null,rotationGizmo:null,scaleGizmo:null,boundingBoxGizmo:null};const a=this._attachToMeshPointerObserver(e),r=Me.GizmoAxisPointerObserver(this._defaultUtilityLayer,this._gizmoAxisCache);this._pointerObservers=[a,r]}_attachToMeshPointerObserver(e){return e.onPointerObservable.add(s=>{if(this.usePointerToAttachGizmos&&s.type==Ke.POINTERDOWN)if(s.pickInfo&&s.pickInfo.pickedMesh){if(this.enableAutoPicking){let i=s.pickInfo.pickedMesh;if(this.attachableMeshes==null)for(;i&&i.parent!=null;)i=i.parent;else{let a=!1;this.attachableMeshes.forEach(r=>{i&&(i==r||i.isDescendantOf(r))&&(i=r,a=!0)}),a||(i=null)}i instanceof Ht?this._attachedMesh!=i&&this.attachToMesh(i):this.clearGizmoOnEmptyPointerEvent&&this.attachToMesh(null)}}else this.clearGizmoOnEmptyPointerEvent&&this.attachToMesh(null)})}attachToMesh(e){this._attachedMesh&&this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh=e,this._attachedNode=null;for(const t in this.gizmos){const s=this.gizmos[t];s&&this._gizmosEnabled[t]&&(s.attachedMesh=e)}this.boundingBoxGizmoEnabled&&this._attachedMesh&&this._attachedMesh.addBehavior(this.boundingBoxDragBehavior),this.onAttachedToMeshObservable.notifyObservers(e)}attachToNode(e){this._attachedMesh&&this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh=null,this._attachedNode=e;for(const t in this.gizmos){const s=this.gizmos[t];s&&this._gizmosEnabled[t]&&(s.attachedNode=e)}this.boundingBoxGizmoEnabled&&this._attachedNode&&this._attachedNode.addBehavior(this.boundingBoxDragBehavior),this.onAttachedToNodeObservable.notifyObservers(e)}set positionGizmoEnabled(e){e?(this.gizmos.positionGizmo||(this.gizmos.positionGizmo=new pi(this._defaultUtilityLayer,this._thickness,this)),this._attachedNode?this.gizmos.positionGizmo.attachedNode=this._attachedNode:this.gizmos.positionGizmo.attachedMesh=this._attachedMesh):this.gizmos.positionGizmo&&(this.gizmos.positionGizmo.attachedNode=null),this._gizmosEnabled.positionGizmo=e,this._setAdditionalTransformNode()}get positionGizmoEnabled(){return this._gizmosEnabled.positionGizmo}set rotationGizmoEnabled(e){e?(this.gizmos.rotationGizmo||(this.gizmos.rotationGizmo=new _i(this._defaultUtilityLayer,32,!1,this._thickness,this)),this._attachedNode?this.gizmos.rotationGizmo.attachedNode=this._attachedNode:this.gizmos.rotationGizmo.attachedMesh=this._attachedMesh):this.gizmos.rotationGizmo&&(this.gizmos.rotationGizmo.attachedNode=null),this._gizmosEnabled.rotationGizmo=e,this._setAdditionalTransformNode()}get rotationGizmoEnabled(){return this._gizmosEnabled.rotationGizmo}set scaleGizmoEnabled(e){e?(this.gizmos.scaleGizmo=this.gizmos.scaleGizmo||new gi(this._defaultUtilityLayer,this._thickness,this),this._attachedNode?this.gizmos.scaleGizmo.attachedNode=this._attachedNode:this.gizmos.scaleGizmo.attachedMesh=this._attachedMesh):this.gizmos.scaleGizmo&&(this.gizmos.scaleGizmo.attachedNode=null),this._gizmosEnabled.scaleGizmo=e,this._setAdditionalTransformNode()}get scaleGizmoEnabled(){return this._gizmosEnabled.scaleGizmo}set boundingBoxGizmoEnabled(e){e?(this.gizmos.boundingBoxGizmo=this.gizmos.boundingBoxGizmo||new ui(this._boundingBoxColor,this._defaultKeepDepthUtilityLayer),this._attachedMesh?this.gizmos.boundingBoxGizmo.attachedMesh=this._attachedMesh:this.gizmos.boundingBoxGizmo.attachedNode=this._attachedNode,this._attachedMesh?(this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior),this._attachedMesh.addBehavior(this.boundingBoxDragBehavior)):this._attachedNode&&(this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this._attachedNode.addBehavior(this.boundingBoxDragBehavior))):this.gizmos.boundingBoxGizmo&&(this._attachedMesh?this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior):this._attachedNode&&this._attachedNode.removeBehavior(this.boundingBoxDragBehavior),this.gizmos.boundingBoxGizmo.attachedNode=null),this._gizmosEnabled.boundingBoxGizmo=e,this._setAdditionalTransformNode()}get boundingBoxGizmoEnabled(){return this._gizmosEnabled.boundingBoxGizmo}set additionalTransformNode(e){this._additionalTransformNode=e,this._setAdditionalTransformNode()}_setAdditionalTransformNode(){for(const e in this.gizmos){const t=this.gizmos[e];t&&this._gizmosEnabled[e]&&(t.additionalTransformNode=this._additionalTransformNode)}}addToAxisCache(e){e.size>0&&e.forEach((t,s)=>{this._gizmoAxisCache.set(s,t)})}releaseDrag(){[this.gizmos.positionGizmo,this.gizmos.rotationGizmo,this.gizmos.scaleGizmo,this.gizmos.boundingBoxGizmo].forEach(e=>{e==null||e.releaseDrag()})}dispose(){var e,t;this._pointerObservers.forEach(s=>{this._scene.onPointerObservable.remove(s)});for(const s in this.gizmos){const i=this.gizmos[s];i&&i.dispose()}this._defaultKeepDepthUtilityLayer!==fe._DefaultKeepDepthUtilityLayer&&((e=this._defaultKeepDepthUtilityLayer)==null||e.dispose()),this._defaultUtilityLayer!==fe._DefaultUtilityLayer&&((t=this._defaultUtilityLayer)==null||t.dispose()),this.boundingBoxDragBehavior.detach(),this.onAttachedToMeshObservable.clear()}}class mi{get gpuFrameTimeCounter(){return this.engine.getGPUFrameTimeCounter()}get captureGPUFrameTime(){return this._captureGPUFrameTime}set captureGPUFrameTime(e){e!==this._captureGPUFrameTime&&(this._captureGPUFrameTime=e,this.engine.captureGPUFrameTime(e))}get shaderCompilationTimeCounter(){return this._shaderCompilationTime}get captureShaderCompilationTime(){return this._captureShaderCompilationTime}set captureShaderCompilationTime(e){e!==this._captureShaderCompilationTime&&(this._captureShaderCompilationTime=e,e?(this._onBeforeShaderCompilationObserver=this.engine.onBeforeShaderCompilationObservable.add(()=>{this._shaderCompilationTime.fetchNewFrame(),this._shaderCompilationTime.beginMonitoring()}),this._onAfterShaderCompilationObserver=this.engine.onAfterShaderCompilationObservable.add(()=>{this._shaderCompilationTime.endMonitoring()})):(this.engine.onBeforeShaderCompilationObservable.remove(this._onBeforeShaderCompilationObserver),this._onBeforeShaderCompilationObserver=null,this.engine.onAfterShaderCompilationObservable.remove(this._onAfterShaderCompilationObserver),this._onAfterShaderCompilationObserver=null))}constructor(e){this.engine=e,this._captureGPUFrameTime=!1,this._captureShaderCompilationTime=!1,this._shaderCompilationTime=new pe,this._onBeginFrameObserver=null,this._onEndFrameObserver=null,this._onBeforeShaderCompilationObserver=null,this._onAfterShaderCompilationObserver=null}dispose(){this.engine.onBeginFrameObservable.remove(this._onBeginFrameObserver),this._onBeginFrameObserver=null,this.engine.onEndFrameObservable.remove(this._onEndFrameObserver),this._onEndFrameObserver=null,this.engine.onBeforeShaderCompilationObservable.remove(this._onBeforeShaderCompilationObserver),this._onBeforeShaderCompilationObserver=null,this.engine.onAfterShaderCompilationObservable.remove(this._onAfterShaderCompilationObserver),this._onAfterShaderCompilationObserver=null,this.engine=null}}class fi{get activeMeshesEvaluationTimeCounter(){return this._activeMeshesEvaluationTime}get captureActiveMeshesEvaluationTime(){return this._captureActiveMeshesEvaluationTime}set captureActiveMeshesEvaluationTime(e){e!==this._captureActiveMeshesEvaluationTime&&(this._captureActiveMeshesEvaluationTime=e,e?(this._onBeforeActiveMeshesEvaluationObserver=this.scene.onBeforeActiveMeshesEvaluationObservable.add(()=>{te.StartPerformanceCounter("Active meshes evaluation"),this._activeMeshesEvaluationTime.beginMonitoring()}),this._onAfterActiveMeshesEvaluationObserver=this.scene.onAfterActiveMeshesEvaluationObservable.add(()=>{te.EndPerformanceCounter("Active meshes evaluation"),this._activeMeshesEvaluationTime.endMonitoring(!1)})):(this.scene.onBeforeActiveMeshesEvaluationObservable.remove(this._onBeforeActiveMeshesEvaluationObserver),this._onBeforeActiveMeshesEvaluationObserver=null,this.scene.onAfterActiveMeshesEvaluationObservable.remove(this._onAfterActiveMeshesEvaluationObserver),this._onAfterActiveMeshesEvaluationObserver=null))}get renderTargetsRenderTimeCounter(){return this._renderTargetsRenderTime}get captureRenderTargetsRenderTime(){return this._captureRenderTargetsRenderTime}set captureRenderTargetsRenderTime(e){e!==this._captureRenderTargetsRenderTime&&(this._captureRenderTargetsRenderTime=e,e?(this._onBeforeRenderTargetsRenderObserver=this.scene.onBeforeRenderTargetsRenderObservable.add(()=>{te.StartPerformanceCounter("Render targets rendering"),this._renderTargetsRenderTime.beginMonitoring()}),this._onAfterRenderTargetsRenderObserver=this.scene.onAfterRenderTargetsRenderObservable.add(()=>{te.EndPerformanceCounter("Render targets rendering"),this._renderTargetsRenderTime.endMonitoring(!1)})):(this.scene.onBeforeRenderTargetsRenderObservable.remove(this._onBeforeRenderTargetsRenderObserver),this._onBeforeRenderTargetsRenderObserver=null,this.scene.onAfterRenderTargetsRenderObservable.remove(this._onAfterRenderTargetsRenderObserver),this._onAfterRenderTargetsRenderObserver=null))}get particlesRenderTimeCounter(){return this._particlesRenderTime}get captureParticlesRenderTime(){return this._captureParticlesRenderTime}set captureParticlesRenderTime(e){e!==this._captureParticlesRenderTime&&(this._captureParticlesRenderTime=e,e?(this._onBeforeParticlesRenderingObserver=this.scene.onBeforeParticlesRenderingObservable.add(()=>{te.StartPerformanceCounter("Particles"),this._particlesRenderTime.beginMonitoring()}),this._onAfterParticlesRenderingObserver=this.scene.onAfterParticlesRenderingObservable.add(()=>{te.EndPerformanceCounter("Particles"),this._particlesRenderTime.endMonitoring(!1)})):(this.scene.onBeforeParticlesRenderingObservable.remove(this._onBeforeParticlesRenderingObserver),this._onBeforeParticlesRenderingObserver=null,this.scene.onAfterParticlesRenderingObservable.remove(this._onAfterParticlesRenderingObserver),this._onAfterParticlesRenderingObserver=null))}get spritesRenderTimeCounter(){return this._spritesRenderTime}get captureSpritesRenderTime(){return this._captureSpritesRenderTime}set captureSpritesRenderTime(e){e!==this._captureSpritesRenderTime&&(this._captureSpritesRenderTime=e,this.scene.spriteManagers&&(e?(this._onBeforeSpritesRenderingObserver=this.scene.onBeforeSpritesRenderingObservable.add(()=>{te.StartPerformanceCounter("Sprites"),this._spritesRenderTime.beginMonitoring()}),this._onAfterSpritesRenderingObserver=this.scene.onAfterSpritesRenderingObservable.add(()=>{te.EndPerformanceCounter("Sprites"),this._spritesRenderTime.endMonitoring(!1)})):(this.scene.onBeforeSpritesRenderingObservable.remove(this._onBeforeSpritesRenderingObserver),this._onBeforeSpritesRenderingObserver=null,this.scene.onAfterSpritesRenderingObservable.remove(this._onAfterSpritesRenderingObserver),this._onAfterSpritesRenderingObserver=null)))}get physicsTimeCounter(){return this._physicsTime}get capturePhysicsTime(){return this._capturePhysicsTime}set capturePhysicsTime(e){e!==this._capturePhysicsTime&&this.scene.onBeforePhysicsObservable&&(this._capturePhysicsTime=e,e?(this._onBeforePhysicsObserver=this.scene.onBeforePhysicsObservable.add(()=>{te.StartPerformanceCounter("Physics"),this._physicsTime.beginMonitoring()}),this._onAfterPhysicsObserver=this.scene.onAfterPhysicsObservable.add(()=>{te.EndPerformanceCounter("Physics"),this._physicsTime.endMonitoring()})):(this.scene.onBeforePhysicsObservable.remove(this._onBeforePhysicsObserver),this._onBeforePhysicsObserver=null,this.scene.onAfterPhysicsObservable.remove(this._onAfterPhysicsObserver),this._onAfterPhysicsObserver=null))}get animationsTimeCounter(){return this._animationsTime}get captureAnimationsTime(){return this._captureAnimationsTime}set captureAnimationsTime(e){e!==this._captureAnimationsTime&&(this._captureAnimationsTime=e,e?this._onAfterAnimationsObserver=this.scene.onAfterAnimationsObservable.add(()=>{this._animationsTime.endMonitoring()}):(this.scene.onAfterAnimationsObservable.remove(this._onAfterAnimationsObserver),this._onAfterAnimationsObserver=null))}get frameTimeCounter(){return this._frameTime}get captureFrameTime(){return this._captureFrameTime}set captureFrameTime(e){this._captureFrameTime=e}get interFrameTimeCounter(){return this._interFrameTime}get captureInterFrameTime(){return this._captureInterFrameTime}set captureInterFrameTime(e){this._captureInterFrameTime=e}get renderTimeCounter(){return this._renderTime}get captureRenderTime(){return this._captureRenderTime}set captureRenderTime(e){e!==this._captureRenderTime&&(this._captureRenderTime=e,e?(this._onBeforeDrawPhaseObserver=this.scene.onBeforeDrawPhaseObservable.add(()=>{this._renderTime.beginMonitoring(),te.StartPerformanceCounter("Main render")}),this._onAfterDrawPhaseObserver=this.scene.onAfterDrawPhaseObservable.add(()=>{this._renderTime.endMonitoring(!1),te.EndPerformanceCounter("Main render")})):(this.scene.onBeforeDrawPhaseObservable.remove(this._onBeforeDrawPhaseObserver),this._onBeforeDrawPhaseObserver=null,this.scene.onAfterDrawPhaseObservable.remove(this._onAfterDrawPhaseObserver),this._onAfterDrawPhaseObserver=null))}get cameraRenderTimeCounter(){return this._cameraRenderTime}get captureCameraRenderTime(){return this._captureCameraRenderTime}set captureCameraRenderTime(e){e!==this._captureCameraRenderTime&&(this._captureCameraRenderTime=e,e?(this._onBeforeCameraRenderObserver=this.scene.onBeforeCameraRenderObservable.add(t=>{this._cameraRenderTime.beginMonitoring(),te.StartPerformanceCounter(`Rendering camera ${t.name}`)}),this._onAfterCameraRenderObserver=this.scene.onAfterCameraRenderObservable.add(t=>{this._cameraRenderTime.endMonitoring(!1),te.EndPerformanceCounter(`Rendering camera ${t.name}`)})):(this.scene.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=null,this.scene.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=null))}get drawCallsCounter(){return this.scene.getEngine()._drawCalls}constructor(e){this.scene=e,this._captureActiveMeshesEvaluationTime=!1,this._activeMeshesEvaluationTime=new pe,this._captureRenderTargetsRenderTime=!1,this._renderTargetsRenderTime=new pe,this._captureFrameTime=!1,this._frameTime=new pe,this._captureRenderTime=!1,this._renderTime=new pe,this._captureInterFrameTime=!1,this._interFrameTime=new pe,this._captureParticlesRenderTime=!1,this._particlesRenderTime=new pe,this._captureSpritesRenderTime=!1,this._spritesRenderTime=new pe,this._capturePhysicsTime=!1,this._physicsTime=new pe,this._captureAnimationsTime=!1,this._animationsTime=new pe,this._captureCameraRenderTime=!1,this._cameraRenderTime=new pe,this._onBeforeActiveMeshesEvaluationObserver=null,this._onAfterActiveMeshesEvaluationObserver=null,this._onBeforeRenderTargetsRenderObserver=null,this._onAfterRenderTargetsRenderObserver=null,this._onAfterRenderObserver=null,this._onBeforeDrawPhaseObserver=null,this._onAfterDrawPhaseObserver=null,this._onBeforeAnimationsObserver=null,this._onBeforeParticlesRenderingObserver=null,this._onAfterParticlesRenderingObserver=null,this._onBeforeSpritesRenderingObserver=null,this._onAfterSpritesRenderingObserver=null,this._onBeforePhysicsObserver=null,this._onAfterPhysicsObserver=null,this._onAfterAnimationsObserver=null,this._onBeforeCameraRenderObserver=null,this._onAfterCameraRenderObserver=null,this._onBeforeAnimationsObserver=e.onBeforeAnimationsObservable.add(()=>{this._captureActiveMeshesEvaluationTime&&this._activeMeshesEvaluationTime.fetchNewFrame(),this._captureRenderTargetsRenderTime&&this._renderTargetsRenderTime.fetchNewFrame(),this._captureFrameTime&&(te.StartPerformanceCounter("Scene rendering"),this._frameTime.beginMonitoring()),this._captureInterFrameTime&&this._interFrameTime.endMonitoring(),this._captureParticlesRenderTime&&this._particlesRenderTime.fetchNewFrame(),this._captureSpritesRenderTime&&this._spritesRenderTime.fetchNewFrame(),this._captureAnimationsTime&&this._animationsTime.beginMonitoring(),this._captureRenderTime&&this._renderTime.fetchNewFrame(),this._captureCameraRenderTime&&this._cameraRenderTime.fetchNewFrame(),this.scene.getEngine()._drawCalls.fetchNewFrame()}),this._onAfterRenderObserver=e.onAfterRenderObservable.add(()=>{this._captureFrameTime&&(te.EndPerformanceCounter("Scene rendering"),this._frameTime.endMonitoring()),this._captureRenderTime&&this._renderTime.endMonitoring(!1),this._captureInterFrameTime&&this._interFrameTime.beginMonitoring(),this._captureActiveMeshesEvaluationTime&&this._activeMeshesEvaluationTime.endFrame(),this._captureRenderTargetsRenderTime&&this._renderTargetsRenderTime.endFrame(),this._captureParticlesRenderTime&&this._particlesRenderTime.endFrame(),this._captureSpritesRenderTime&&this._spritesRenderTime.endFrame(),this._captureRenderTime&&this._renderTime.endFrame(),this._captureCameraRenderTime&&this._cameraRenderTime.endFrame()})}dispose(){this.scene.onAfterRenderObservable.remove(this._onAfterRenderObserver),this._onAfterRenderObserver=null,this.scene.onBeforeActiveMeshesEvaluationObservable.remove(this._onBeforeActiveMeshesEvaluationObserver),this._onBeforeActiveMeshesEvaluationObserver=null,this.scene.onAfterActiveMeshesEvaluationObservable.remove(this._onAfterActiveMeshesEvaluationObserver),this._onAfterActiveMeshesEvaluationObserver=null,this.scene.onBeforeRenderTargetsRenderObservable.remove(this._onBeforeRenderTargetsRenderObserver),this._onBeforeRenderTargetsRenderObserver=null,this.scene.onAfterRenderTargetsRenderObservable.remove(this._onAfterRenderTargetsRenderObserver),this._onAfterRenderTargetsRenderObserver=null,this.scene.onBeforeAnimationsObservable.remove(this._onBeforeAnimationsObserver),this._onBeforeAnimationsObserver=null,this.scene.onBeforeParticlesRenderingObservable.remove(this._onBeforeParticlesRenderingObserver),this._onBeforeParticlesRenderingObserver=null,this.scene.onAfterParticlesRenderingObservable.remove(this._onAfterParticlesRenderingObserver),this._onAfterParticlesRenderingObserver=null,this._onBeforeSpritesRenderingObserver&&(this.scene.onBeforeSpritesRenderingObservable.remove(this._onBeforeSpritesRenderingObserver),this._onBeforeSpritesRenderingObserver=null),this._onAfterSpritesRenderingObserver&&(this.scene.onAfterSpritesRenderingObservable.remove(this._onAfterSpritesRenderingObserver),this._onAfterSpritesRenderingObserver=null),this.scene.onBeforeDrawPhaseObservable.remove(this._onBeforeDrawPhaseObserver),this._onBeforeDrawPhaseObserver=null,this.scene.onAfterDrawPhaseObservable.remove(this._onAfterDrawPhaseObserver),this._onAfterDrawPhaseObserver=null,this._onBeforePhysicsObserver&&(this.scene.onBeforePhysicsObservable.remove(this._onBeforePhysicsObserver),this._onBeforePhysicsObserver=null),this._onAfterPhysicsObserver&&(this.scene.onAfterPhysicsObservable.remove(this._onAfterPhysicsObserver),this._onAfterPhysicsObserver=null),this.scene.onAfterAnimationsObservable.remove(this._onAfterAnimationsObserver),this._onAfterAnimationsObserver=null,this.scene.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver),this._onBeforeCameraRenderObserver=null,this.scene.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver),this._onAfterCameraRenderObserver=null,this.scene=null}}class ea extends it{constructor(e,t){super(e,t,"color",{attributes:["position"],uniforms:["world","viewProjection","color"]}),this.disableColorWrite=!0,this.forceDepthWrite=!0,this.setColor4("color",new Re(0,0,0,1))}}class bi extends He{constructor(e,t,s,i,a,r,n){super(e,s,null,i,a,r),this._animate=!0,this._time=0,this._texturePath=t,a&&!(a instanceof j)&&(n=!!a.skipJson),n?this.setFragment(this._texturePath):this._loadJson(t),this.refreshRate=1}_loadJson(e){const t=()=>{try{this.setFragment(this._texturePath)}catch{D.Log("No json or ShaderStore or DOM element found for CustomProceduralTexture")}},s=e+"/config.json",i=new xs;i.open("GET",s),i.addEventListener("load",()=>{if(i.status===200||i.responseText&&i.responseText.length>0)try{this._config=JSON.parse(i.response),this.updateShaderUniforms(),this.updateTextures(),this.setFragment(this._texturePath+"/custom"),this._animate=this._config.animate,this.refreshRate=this._config.refreshrate}catch{t()}else t()},!1),i.addEventListener("error",()=>{t()},!1);try{i.send()}catch{D.Error("CustomProceduralTexture: Error on XHR send request.")}}isReady(){if(!super.isReady())return!1;for(const e in this._textures)if(!this._textures[e].isReady())return!1;return!0}render(e){const t=this.getScene();this._animate&&t&&(this._time+=t.getAnimationRatio()*.03,this.updateShaderUniforms()),super.render(e)}updateTextures(){for(let e=0;e<this._config.sampler2Ds.length;e++)this.setTexture(this._config.sampler2Ds[e].sample2Dname,new j(this._texturePath+"/"+this._config.sampler2Ds[e].textureRelativeUrl,this.getScene()))}updateShaderUniforms(){if(this._config)for(let e=0;e<this._config.uniforms.length;e++){const t=this._config.uniforms[e];switch(t.type){case"float":this.setFloat(t.name,t.value);break;case"color3":this.setColor3(t.name,new k(t.r,t.g,t.b));break;case"color4":this.setColor4(t.name,new Re(t.r,t.g,t.b,t.a));break;case"vector2":this.setVector2(t.name,new at(t.x,t.y));break;case"vector3":this.setVector3(t.name,new c(t.x,t.y,t.z));break}}this.setFloat("time",this._time)}get animate(){return this._animate}set animate(e){this._animate=e}}class Kt extends Ps{constructor(e,t,s,i=5,a=0,r=!1,n=!1,o=3,h=null){super("",e),this._texture=e.getEngine().createRawCubeTexture(t,s,i,a,r,n,o,h)}update(e,t,s,i,a=null){this._texture.getEngine().updateRawCubeTexture(this._texture,e,t,s,i,a)}updateRGBDAsync(e,t=null,s=.8,i=0){return ys(this._texture,e,t,s,i).then(()=>{})}clone(){return Ye.Clone(()=>{const e=this.getScene(),t=this._texture,s=new Kt(e,t._bufferViewArray,t.width,t.format,t.type,t.generateMipMaps,t.invertY,t.samplingMode,t._compression);return t.source===13&&s.updateRGBDAsync(t._bufferViewArrayArray,t._sphericalPolynomial,t._lodGenerationScale,t._lodGenerationOffset),s},this)}}class xi extends j{get width(){return this._texture?this._texture.width:0}get height(){return this._texture?this._texture.height:0}get depth(){return this._texture?this._texture.depth:0}constructor(e,t,s,i,a,r,n=!0,o=!1,h=j.TRILINEAR_SAMPLINGMODE,l=0,u){super(null,r,!n,o),this.format=a,this._texture=r.getEngine().createRawTexture3D(e,t,s,i,a,n,o,h,null,l,u),this.is3D=!0}update(e){this._texture&&this._getEngine().updateRawTexture3D(this._texture,e,this._texture.format,this._texture.invertY,null,this._texture.type)}}class Jt extends he{constructor(e,t,s,i){super(e,t,s,i,!0),this.refractionPlane=new Ms(0,1,0,1),this.depth=2,this.onBeforeRenderObservable.add(()=>{this.getScene().clipPlane=this.refractionPlane}),this.onAfterRenderObservable.add(()=>{this.getScene().clipPlane=null})}clone(){const e=this.getScene();if(!e)return this;const t=this.getSize(),s=new Jt(this.name,t.width,e,this._generateMipMaps);return s.hasAlpha=this.hasAlpha,s.level=this.level,s.refractionPlane=this.refractionPlane.clone(),this.renderList&&(s.renderList=this.renderList.slice(0)),s.depth=this.depth,s}serialize(){if(!this.name)return null;const e=super.serialize();return e.mirrorPlane=this.refractionPlane.asArray(),e.depth=this.depth,e}}class ta extends Ss{get renderTarget(){return this._renderTarget}constructor(e,t,s){super(null),this._renderTarget=null,this._engine=e,this._renderTargetOptions=s,this.resize(t)}resize(e){var t;(t=this._renderTarget)==null||t.dispose(),this._renderTarget=null,this._texture=null,this._size=e,this._engine&&(this._renderTarget=this._engine.createRenderTargetTexture(this._size,this._renderTargetOptions)),this._texture=this.renderTarget.texture}getInternalTexture(){return this._texture}getClassName(){return"ThinRenderTargetTexture"}dispose(e=!1){var t;(t=this._renderTarget)==null||t.dispose(!0),this._renderTarget=null,e||super.dispose()}}function sa(p){p.clear(),p.editorData=null;const e=new ot("SplatIndex");e.setAsAttribute("splatIndex");const t=new Ts("SplatReader");e.connectTo(t);const s=new vs("GaussianSplatting");t.connectTo(s);const i=new ot("World");i.setAsSystemValue(pt.World);const a=new Rs("WorldPos");t.connectTo(a),i.connectTo(a),a.connectTo(s,{output:"xyz",input:"splatPosition"});const r=new ot("view");r.setAsSystemValue(pt.View);const n=new ot("Projection");n.setAsSystemValue(pt.Projection),i.connectTo(s,{input:"world"}),r.connectTo(s,{input:"view"}),n.connectTo(s,{input:"projection"});const o=new Bs("Gaussian");t.connectTo(o,{input:"splatColor",output:"splatColor"});const h=new As("FragmentOutput");o.connectTo(h);const l=new Ds("VertexOutput");s.connectTo(l),p.addOutputNode(l),p.addOutputNode(h),p._mode=Cs.GaussianSplatting}class ia{optimize(e,t){}}class Pi{constructor(){this.mm=new Map}get(e,t){const s=this.mm.get(e);if(s!==void 0)return s.get(t)}set(e,t,s){let i=this.mm.get(e);i===void 0&&this.mm.set(e,i=new Map),i.set(t,s)}}class aa{get standalone(){var e;return((e=this._options)==null?void 0:e.standalone)??!1}get baseMaterial(){return this._baseMaterial}get doNotInjectCode(){var e;return((e=this._options)==null?void 0:e.doNotInjectCode)??!1}constructor(e,t,s){this._baseMaterial=e,this._scene=t??et.LastCreatedScene,this._options=s,this._subMeshToEffect=new Map,this._subMeshToDepthWrapper=new Pi,this._meshes=new Map,this._onEffectCreatedObserver=this._baseMaterial.onEffectCreatedObservable.add(i=>{var r,n;const a=(r=i.subMesh)==null?void 0:r.getMesh();a&&!this._meshes.has(a)&&this._meshes.set(a,a.onDisposeObservable.add(o=>{const h=this._subMeshToEffect.keys();for(let l=h.next();l.done!==!0;l=h.next()){const u=l.value;(u==null?void 0:u.getMesh())===o&&(this._subMeshToEffect.delete(u),this._deleteDepthWrapperEffect(u))}})),((n=this._subMeshToEffect.get(i.subMesh))==null?void 0:n[0])!==i.effect&&(this._subMeshToEffect.set(i.subMesh,[i.effect,this._scene.getEngine().currentRenderPassId]),this._deleteDepthWrapperEffect(i.subMesh))})}_deleteDepthWrapperEffect(e){const t=this._subMeshToDepthWrapper.mm.get(e);t&&(t.forEach(s=>{var i;(i=s.mainDrawWrapper.effect)==null||i.dispose()}),this._subMeshToDepthWrapper.mm.delete(e))}getEffect(e,t,s){var r;const i=(r=this._subMeshToDepthWrapper.mm.get(e))==null?void 0:r.get(t);if(!i)return null;let a=i.drawWrapper[s];return a||(a=i.drawWrapper[s]=new Dt(this._scene.getEngine()),a.setEffect(i.mainDrawWrapper.effect,i.mainDrawWrapper.defines)),a}isReadyForSubMesh(e,t,s,i,a){var r;return this.standalone&&!this._baseMaterial.isReadyForSubMesh(e.getMesh(),e,i)?!1:((r=this._makeEffect(e,t,s,a))==null?void 0:r.isReady())??!1}dispose(){this._baseMaterial.onEffectCreatedObservable.remove(this._onEffectCreatedObserver),this._onEffectCreatedObserver=null;const e=this._meshes.entries();for(let t=e.next();t.done!==!0;t=e.next()){const[s,i]=t.value;s.onDisposeObservable.remove(i)}}_makeEffect(e,t,s,i){var f,m;const a=this._scene.getEngine(),r=this._subMeshToEffect.get(e);if(!r)return null;const[n,o]=r;let h=this._subMeshToDepthWrapper.get(e,s);if(!h){const b=new Dt(a);b.defines=((f=e._getDrawWrapper(o))==null?void 0:f.defines)??null,h={drawWrapper:[],mainDrawWrapper:b,depthDefines:"",token:ws()},h.drawWrapper[i]=b,this._subMeshToDepthWrapper.set(e,s,h)}const l=t.join(`
`);if(h.mainDrawWrapper.effect&&l===h.depthDefines)return h.mainDrawWrapper.effect;h.depthDefines=l;const u=n.getUniformNames().slice();let g=n.vertexSourceCodeBeforeMigration,_=n.fragmentSourceCodeBeforeMigration;if(!this.doNotInjectCode){const b=this._options&&this._options.remappedVariables?`#include<shadowMapVertexNormalBias>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapVertexNormalBias>",P=this._options&&this._options.remappedVariables?`#include<shadowMapVertexMetric>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapVertexMetric>",x=this._options&&this._options.remappedVariables?`#include<shadowMapFragmentSoftTransparentShadow>(${this._options.remappedVariables.join(",")})`:"#include<shadowMapFragmentSoftTransparentShadow>",v="#include<shadowMapFragment>",R="#include<shadowMapVertexExtraDeclaration>";n.shaderLanguage===0?g=g.replace(/void\s+?main/g,`
${R}
void main`):g=g.replace(/@vertex/g,`
${R}
@vertex`),g=g.replace(/#define SHADOWDEPTH_NORMALBIAS|#define CUSTOM_VERTEX_UPDATE_WORLDPOS/g,b),g.indexOf("#define SHADOWDEPTH_METRIC")!==-1?g=g.replace(/#define SHADOWDEPTH_METRIC/g,P):g=g.replace(/}\s*$/g,P+`
}`),g=g.replace(/#define SHADER_NAME.*?\n|out vec4 glFragColor;\n/g,"");const A=_.indexOf("#define SHADOWDEPTH_SOFTTRANSPARENTSHADOW")>=0||_.indexOf("#define CUSTOM_FRAGMENT_BEFORE_FOG")>=0,W=_.indexOf("#define SHADOWDEPTH_FRAGMENT")!==-1;let w="";A?_=_.replace(/#define SHADOWDEPTH_SOFTTRANSPARENTSHADOW|#define CUSTOM_FRAGMENT_BEFORE_FOG/g,x):w=x+`
`,_=_.replace(/void\s+?main/g,Is.IncludesShadersStore.shadowMapFragmentExtraDeclaration+`
void main`),W?_=_.replace(/#define SHADOWDEPTH_FRAGMENT/g,v):w+=v+`
`,w&&(_=_.replace(/}\s*$/g,w+"}")),u.push("biasAndScaleSM","depthValuesSM","lightDataSM","softTransparentShadowSM")}h.mainDrawWrapper.effect=a.createEffect({vertexSource:g,fragmentSource:_,vertexToken:h.token,fragmentToken:h.token},{attributes:n.getAttributesNames(),uniformsNames:u,uniformBuffersNames:n.getUniformBuffersNames(),samplers:n.getSamplers(),defines:l+`
`+n.defines.replace("#define SHADOWS","").replace(/#define SHADOW\d/g,""),indexParameters:n.getIndexParameters(),shaderLanguage:n.shaderLanguage},a);for(let b=0;b<h.drawWrapper.length;++b)b!==i&&((m=h.drawWrapper[b])==null||m.setEffect(h.mainDrawWrapper.effect,h.mainDrawWrapper.defines));return h.mainDrawWrapper.effect}}function ra(p){return p instanceof je?new Es(p):null}function na(p){return p instanceof je?new Fs(p):null}function oa(p){return p instanceof je?new Os(p):null}function ha(p){return p instanceof je?new ks(p):null}function la(p){return p instanceof je?new Vs(p):null}function ca(p){return p instanceof je?new zs(p):null}function da(p){return p instanceof je||p instanceof $?new Gs(p):null}class ge{constructor(e,t){this.radius=e,this.theta=t,this.radius=e,this.theta=t}getClassName(){return"Polar"}toString(){return JSON.stringify(this)}asArray(){return[this.radius,this.theta]}addToRef(e,t){return t.radius=this.radius+e.radius,t.theta=this.theta+e.theta,t}add(e){const t=new ge(0,0);return this.addToRef(e,t),t}addInPlace(e){return this.addToRef(e,this),this}addInPlaceFromFloats(e,t){return this.radius+=e,this.theta+=t,this}subtractToRef(e,t){return t.radius=this.radius-e.radius,t.theta=this.theta-e.theta,t}subtract(e){const t=new ge(0,0);return this.subtractToRef(e,t),t}subtractInPlace(e){return this.subtractToRef(e,this),this}subtractFromFloatsToRef(e,t,s){return s.radius=this.radius-e,s.theta=this.theta-t,s}subtractFromFloats(e,t){const s=new ge(0,0);return this.subtractFromFloatsToRef(e,t,s),s}multiplyToRef(e,t){return t.radius=this.radius*e.radius,t.theta=this.theta*e.theta,t}multiply(e){const t=new ge(0,0);return this.multiplyToRef(e,t),t}multiplyInPlace(e){return this.multiplyToRef(e,this),this}divideToRef(e,t){return t.radius=this.radius/e.radius,t.theta=this.theta/e.theta,t}divide(e){const t=new ge(0,0);return this.divideToRef(e,t),t}divideInPlace(e){return this.divideToRef(e,this),this}clone(){return new ge(this.radius,this.theta)}copyFrom(e){return this.radius=e.radius,this.theta=e.theta,this}copyFromFloats(e,t){return this.radius=e,this.theta=t,this}scaleToRef(e,t){return t.radius=this.radius*e,t.theta=this.theta*e,t}scale(e){const t=new ge(0,0);return this.scaleToRef(e,t),t}scaleInPlace(e){return this.scaleToRef(e,this),this}set(e,t){return this.radius=e,this.theta=t,this}setAll(e){return this.set(e,e),this}toVector2ToRef(e){const t=this.radius*Math.cos(this.theta),s=this.radius*Math.sin(this.theta);return e.set(t,s),e}toVector2(){const e=new at(0,0);return this.toVector2ToRef(e)}static FromVector2ToRef(e,t){const s=Math.sign(e.y)*Math.acos(e.x/e.length());return t.radius=e.length(),t.theta=s,t}static FromVector2(e){const t=new ge(0,0);return ge.FromVector2ToRef(e,t),t}static FromArray(e){return new ge(e[0],e[1])}}class me{constructor(e,t,s){this.radius=e,this.theta=t,this.phi=s,this.radius=e,this.theta=t,this.phi=s}getClassName(){return"Spherical"}toString(){return JSON.stringify(this)}asArray(){return[this.radius,this.theta,this.phi]}addToRef(e,t){return t.radius=this.radius+e.radius,t.theta=this.theta+e.theta,t.phi=this.phi+e.phi,t}add(e){const t=new me(0,0,0);return this.addToRef(e,t),t}addInPlace(e){return this.addToRef(e,this),this}addInPlaceFromFloats(e,t,s){return this.radius+=e,this.theta+=t,this.phi+=s,this}subtractToRef(e,t){return t.radius=this.radius-e.radius,t.theta=this.theta-e.theta,t.phi=this.phi-e.phi,t}subtract(e){const t=new me(0,0,0);return this.subtractToRef(e,t),t}subtractInPlace(e){return this.subtractToRef(e,this),this}subtractFromFloatsToRef(e,t,s,i){return i.radius=this.radius-e,i.theta=this.theta-t,i.phi=this.phi-s,i}subtractFromFloats(e,t,s){const i=new me(0,0,0);return this.subtractFromFloatsToRef(e,t,s,i),i}multiplyToRef(e,t){return t.radius=this.radius*e.radius,t.theta=this.theta*e.theta,t.phi=this.phi*e.phi,t}multiply(e){const t=new me(0,0,0);return this.multiplyToRef(e,t),t}multiplyInPlace(e){return this.multiplyToRef(e,this),this}divideToRef(e,t){return t.radius=this.radius/e.radius,t.theta=this.theta/e.theta,t.phi=this.phi/e.phi,t}divide(e){const t=new me(0,0,0);return this.divideToRef(e,t),t}divideInPlace(e){return this.divideToRef(e,this),this}clone(){return new me(this.radius,this.theta,this.phi)}copyFrom(e){return this.radius=e.radius,this.theta=e.theta,this.phi=e.phi,this}copyFromFloats(e,t,s){return this.radius=e,this.theta=t,this.phi=s,this}scaleToRef(e,t){return t.radius=this.radius*e,t.theta=this.theta*e,t.phi=this.phi*e,t}scale(e){const t=new me(0,0,0);return this.scaleToRef(e,t),t}scaleInPlace(e){return this.scaleToRef(e,this),this}set(e,t,s){return this.radius=e,this.theta=t,this.phi=s,this}setAll(e){return this.set(e,e,e),this}toVector3ToRef(e){const t=this.radius*Math.sin(this.theta)*Math.cos(this.phi),s=this.radius*Math.cos(this.theta),i=this.radius*Math.sin(this.theta)*Math.sin(this.phi);return e.set(t,s,i),e}toVector3(){const e=new c(0,0,0);return this.toVector3ToRef(e)}static FromVector3ToRef(e,t){return t.radius=e.length(),t.theta=Math.acos(e.y/t.radius),t.phi=Math.atan2(e.z,e.x),t}static FromVector3(e){const t=new me(0,0,0);return me.FromVector3ToRef(e,t),t}static FromArray(e){return new me(e[0],e[1],e[2])}}function yi(p,e,t){const s=p.getVerticesData(E.PositionKind);if(!s)return!1;const i=e*3,a=[s[i+0],s[i+1],s[i+2]];if(p.morphTargetManager)for(let r=0;r<3;r++){let n=a[r];for(let o=0;o<p.morphTargetManager.numTargets;o++){const h=p.morphTargetManager.getTarget(o),l=h.influence;if(l!==0){const u=h.getPositions();u&&(n+=(u[i+r]-s[i+r])*l)}}a[r]=n}if(t.fromArray(a),p.skeleton){const r=p.getVerticesData(E.MatricesIndicesKind),n=p.getVerticesData(E.MatricesWeightsKind);if(n&&r){const o=p.numBoneInfluencers>4,h=o?p.getVerticesData(E.MatricesIndicesExtraKind):null,l=o?p.getVerticesData(E.MatricesWeightsExtraKind):null,u=p.skeleton.getTransformMatrices(p),g=d.Matrix[0],_=d.Matrix[1];g.reset();const f=e*4;let m,b;for(m=0;m<4;m++)b=n[f+m],b>0&&(C.FromFloat32ArrayToRefScaled(u,Math.floor(r[f+m]*16),b,_),g.addToSelf(_));if(h&&l)for(m=0;m<4;m++)b=l[f+m],b>0&&(C.FromFloat32ArrayToRefScaled(u,Math.floor(h[f+m]*16),b,_),g.addToSelf(_));c.TransformCoordinatesFromFloatsToRef(a[0],a[1],a[2],g,t)}}return!0}function ua(p,e,t){t.set(0,0,0);for(let s=0;s<3;s++){const i=e.pointIndex[s];yi(p,i,d.Vector3[0]),d.Vector3[0].scaleInPlace(e.barycentric[s]),t.addInPlace(d.Vector3[0])}}class Te{static _GetShader(e,t){if(!e._meshUVSpaceRendererShader){const s=new it("meshUVSpaceRendererShader",e,{vertex:"meshUVSpaceRenderer",fragment:"meshUVSpaceRenderer"},{attributes:["position","normal","uv"],uniforms:["world","projMatrix"],samplers:["textureSampler"],needAlphaBlending:!0,shaderLanguage:t});s.backFaceCulling=!1,s.alphaMode=2,e.onDisposeObservable.add(()=>{var i;(i=e._meshUVSpaceRendererShader)==null||i.dispose(),e._meshUVSpaceRendererShader=null}),e._meshUVSpaceRendererShader=s}return e._meshUVSpaceRendererShader}static _GetMaskShader(e,t){if(!e._meshUVSpaceRendererMaskShader){const s=new it("meshUVSpaceRendererMaskShader",e,{vertex:"meshUVSpaceRendererMasker",fragment:"meshUVSpaceRendererMasker"},{attributes:["position","uv"],uniforms:["worldViewProjection"],shaderLanguage:t});s.backFaceCulling=!1,s.alphaMode=2,e.onDisposeObservable.add(()=>{var i;(i=e._meshUVSpaceRendererMaskShader)==null||i.dispose(),e._meshUVSpaceRendererMaskShader=null}),e._meshUVSpaceRendererMaskShader=s}return e._meshUVSpaceRendererMaskShader}static _IsRenderTargetTexture(e){return e.renderList!==void 0}get shaderLanguage(){return this._shaderLanguage}constructor(e,t,s){this._textureCreatedInternally=!1,this._configureUserCreatedTexture=!0,this._maskTexture=null,this._finalPostProcess=null,this._shadersLoaded=!1,this._isDisposed=!1,this.clearColor=new Re(0,0,0,0),this.texture=null,this._shaderLanguage=0,this._mesh=e,this._scene=t,this._options={width:1024,height:1024,textureType:0,generateMipMaps:!0,optimizeUVAllocation:!0,uvEdgeBlending:!1,...s},this._initShaderSourceAsync()}async _initShaderSourceAsync(){this._scene.getEngine().isWebGPU?(this._shaderLanguage=1,await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zh),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zi),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zj),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zk),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zm),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zl),__vite__mapDeps([0,1,2]))])):await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zb),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zc),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zd),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.ze),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zg),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(t=>t.zf),__vite__mapDeps([0,1,2]))]),!this._isDisposed&&(this._shadersLoaded=!0)}isReady(){var i,a;if(!this._shadersLoaded)return!1;this.texture?this._configureUserCreatedTexture&&this._configureUserCreatedRTT():this._createDiffuseRTT();const e=Te._IsRenderTargetTexture(this.texture)?this.texture.isReadyForRendering():this.texture.isReady(),t=((i=this._maskTexture)==null?void 0:i.isReadyForRendering())??!0,s=((a=this._finalPostProcess)==null?void 0:a.isReady())??!0;return e&&t&&s}renderTexture(e,t,s,i,a=0,r=!0){if(r&&!this.isReady()){setTimeout(()=>{this.renderTexture(e,t,s,i,a,r)},16);return}if(this.texture?this._configureUserCreatedTexture&&this._configureUserCreatedRTT():this._createDiffuseRTT(),Te._IsRenderTargetTexture(this.texture)){const n=this._createProjectionMatrix(t,s,i,a),o=Te._GetShader(this._scene,this._shaderLanguage);o.setTexture("textureSampler",e),o.setMatrix("projMatrix",n),this.texture.render(),o.removeTexture("textureSampler")}}clear(){var e,t,s;if(this.texture&&Te._IsRenderTargetTexture(this.texture)&&this.texture.renderTarget){const i=this._scene.getEngine();i.bindFramebuffer(this.texture.renderTarget),i.clear(this.clearColor,!0,!0,!0),i.unBindFramebuffer(this.texture.renderTarget)}if((e=this._finalPostProcess)!=null&&e.inputTexture){const i=this._scene.getEngine();i.bindFramebuffer((t=this._finalPostProcess)==null?void 0:t.inputTexture),i.clear(this.clearColor,!0,!0,!0),i.unBindFramebuffer((s=this._finalPostProcess)==null?void 0:s.inputTexture)}}dispose(){var e,t,s;this._textureCreatedInternally&&((e=this.texture)==null||e.dispose(),this._textureCreatedInternally=!1),this._configureUserCreatedTexture=!0,(t=this._maskTexture)==null||t.dispose(),this._maskTexture=null,(s=this._finalPostProcess)==null||s.dispose(),this._finalPostProcess=null,this._isDisposed=!0}_configureUserCreatedRTT(){this._configureUserCreatedTexture=!1,this.texture&&Te._IsRenderTargetTexture(this.texture)&&(this.texture.setMaterialForRendering(this._mesh,Te._GetShader(this._scene,this._shaderLanguage)),this.texture.onClearObservable.add(()=>{}),this.texture.renderList=[this._mesh],this._options.uvEdgeBlending&&(this._createMaskTexture(),this._createPostProcess(),this.texture.addPostProcess(this._finalPostProcess)))}_createDiffuseRTT(){this._textureCreatedInternally=!0;const e=this._createRenderTargetTexture(this._options.width,this._options.height);e.setMaterialForRendering(this._mesh,Te._GetShader(this._scene,this._shaderLanguage)),this.texture=e,this._configureUserCreatedTexture=!1,this._options.uvEdgeBlending&&(this._createMaskTexture(),this._createPostProcess(),e.addPostProcess(this._finalPostProcess))}_createMaskTexture(){this._maskTexture||(this._maskTexture=new he(this._mesh.name+"_maskTexture",{width:this._options.width,height:this._options.height},this._scene,!1,!0,0,!1,2,void 0,void 0,void 0,6),this._maskTexture.clearColor=new Re(0,0,0,0),this._maskTexture.renderList.push(this._mesh),this._maskTexture.setMaterialForRendering(this._mesh,Te._GetMaskShader(this._scene,this._shaderLanguage)),this._maskTexture.refreshRate=he.REFRESHRATE_RENDER_ONCE,this._scene.customRenderTargets.push(this._maskTexture))}_createPostProcess(){this._finalPostProcess||(this._finalPostProcess=new se(this._mesh.name+"_fixSeamsPostProcess","meshUVSpaceRendererFinaliser",["textureSize"],["textureSampler","maskTextureSampler"],1,null,1,this._scene.getEngine(),!1,null,this._options.textureType,void 0,void 0,void 0,void 0,this._shaderLanguage),this._finalPostProcess.onApplyObservable.add(e=>{e.setTexture("maskTextureSampler",this._maskTexture),e.setFloat2("textureSize",this._options.width,this._options.height)}))}_createRenderTargetTexture(e,t){const s=new he(this._mesh.name+"_uvspaceTexture",{width:e,height:t},this._scene,this._options.generateMipMaps,!0,this._options.textureType,!1,this._options.generateMipMaps?3:2,!1,!1,!1,5);return s.renderParticles=!1,s.optimizeUVAllocation=!!this._options.optimizeUVAllocation,s.onClearObservable.addOnce(()=>{this._scene.getEngine().clear(this.clearColor,!0,!0,!0),s.onClearObservable.add(()=>{})}),s.renderList=[this._mesh],s}_createProjectionMatrix(e,t,s,i=0){const a=-Math.atan2(t.z,t.x)-Math.PI/2,r=Math.sqrt(t.x*t.x+t.z*t.z),n=Math.atan2(t.y,r),o=e.add(t.scale(s.z*.5)),h=C.RotationYawPitchRoll(a,n,i).multiply(C.Translation(o.x,o.y,o.z)),l=C.Invert(h),u=C.FromArray([2/s.x,0,0,0,0,2/s.y,0,0,0,0,1/s.z,0,0,0,0,1]),g=C.FromArray([.5,0,0,0,0,.5,0,0,0,0,1,0,.5,.5,0,1]);return l.multiply(u).multiply(g)}}function Ot(p){const e=p.minimum.x,t=p.minimum.y,s=p.minimum.z,i=p.maximum.x,a=p.maximum.y,r=p.maximum.z;return[new c(e,t,s),new c(i,a,r),new c(i,t,s),new c(e,a,s),new c(e,t,r),new c(i,a,s),new c(e,a,r),new c(i,t,r)]}function _a(p,e=null,t=1/6){const s=d.Vector3[0],i=new Map,a=new Map,r=p.reduce((_,f)=>Math.max(_,f.getTotalVertices()),0),n=Array.from({length:r},()=>new c),o=Array.from({length:r},()=>new c);for(const _ of p){const f=_.getVerticesData(E.PositionKind);if(!f)continue;const m=_.getTotalVertices();n.length=Math.max(n.length,m),o.length=Math.max(n.length,m);for(let R=0,A=0;R<m;R++,A+=3)s.set(f[A],f[A+1],f[A+2]),n[R].copyFrom(s),o[R].copyFrom(s);const b=_.morphTargetManager;if(b)for(let R=0;R<b.numTargets;++R){const W=b.getTarget(R).getPositions();if(W)for(let w=0,Q=0;w<m;w++,Q+=3)s.set(W[Q],W[Q+1],W[Q+2]),n[w].minimizeInPlace(s),o[w].maximizeInPlace(s)}const P=_.skeleton,x=P?_.getVerticesData(E.MatricesWeightsKind):null,v=P?_.getVerticesData(E.MatricesIndicesKind):null;if(x&&v){const R=_.numBoneInfluencers>4,A=R?_.getVerticesData(E.MatricesWeightsExtraKind):null,W=R?_.getVerticesData(E.MatricesIndicesExtraKind):null,w=a.get(_.uniqueId)||new Map;a.set(_.uniqueId,w);const Q=(G,F,Y,O)=>{for(let ie=F;ie<F+4;ie++)if(Y[ie]>0){const ae=O[ie],re=w.get(ae);re?(re.minimum.minimizeInPlace(n[G]),re.maximum.maximizeInPlace(o[G])):w.set(ae,{minimum:n[G].clone(),maximum:o[G].clone()})}};for(let G=0,F=0;G<m;G++,F+=4)Q(G,F,x,v),A&&W&&Q(G,F,A,W)}else{const R=i.get(_.uniqueId)||{minimum:new c().setAll(Number.POSITIVE_INFINITY),maximum:new c().setAll(Number.NEGATIVE_INFINITY)};i.set(_.uniqueId,R);for(let A=0;A<m;A++)R.minimum.minimizeInPlace(n[A]),R.maximum.maximizeInPlace(o[A])}}const h=new Map,l=new Map;for(const _ of p){const f=i.get(_.uniqueId);if(f)h.set(_.uniqueId,Ot(f));else{const m=a.get(_.uniqueId);if(m){const b=_.skeleton.bones,P=new Map;l.set(_.uniqueId,P),m.forEach((x,v)=>{const R=Ot(x),A=b[v].getAbsoluteInverseBindMatrix();for(const W of R)c.TransformCoordinatesToRef(W,A,W);P.set(v,R)})}}}const u=Array.from({length:p.length},()=>({minimum:new c().setAll(Number.POSITIVE_INFINITY),maximum:new c().setAll(Number.NEGATIVE_INFINITY)})),g=()=>{for(let _=0;_<p.length;_++){const f=p[_];if(!f.getVerticesData(E.PositionKind))continue;const b=f.computeWorldMatrix(!0),P=f.skeleton;if(P){P.prepare(!0);const x=P.bones;l.get(f.uniqueId).forEach((R,A)=>{for(const W of R){const w=x[A].getFinalMatrix().multiplyToRef(b,d.Matrix[0]);c.TransformCoordinatesToRef(W,w,s),u[_].minimum.minimizeInPlace(s),u[_].maximum.maximizeInPlace(s)}})}else for(const x of h.get(f.uniqueId))c.TransformCoordinatesToRef(x,b,s),u[_].minimum.minimizeInPlace(s),u[_].maximum.maximizeInPlace(s)}};if(e&&e.isStarted){const _=t/e.getLength(0,1);for(let f=e.from;f<=e.to;f+=_)e.goToFrame(f),g()}else g();return u}class pa extends Ls{constructor(e,t){super(t,"Lattice",200),this._lattice=e,this.refreshData(),this._enable(!0)}getClassName(){return"LatticePluginMaterial"}isCompatible(e){switch(e){case 0:case 1:return!0;default:return!1}}refreshData(){const e=this._lattice.resolutionX*this._lattice.resolutionY*this._lattice.resolutionZ*4;(!this._latticeData||this._latticeData.length!==e)&&(this._latticeData=new Float32Array(e));for(let t=0;t<this._lattice.resolutionX;t++)for(let s=0;s<this._lattice.resolutionY;s++)for(let i=0;i<this._lattice.resolutionZ;i++){const a=this._lattice.data[t][s][i],r=t+this._lattice.resolutionX*(s+this._lattice.resolutionY*i);a.toArray(this._latticeData,r*4)}!this._latticeDataTexture||this._latticeDataTexture.width!==this._lattice.resolutionX||this._latticeDataTexture.height!==this._lattice.resolutionY||this._latticeDataTexture.depth!==this._lattice.resolutionZ?(this._latticeDataTexture&&this._latticeDataTexture.dispose(),this._latticeDataTexture=new xi(this._latticeData,this._lattice.resolutionX,this._lattice.resolutionY,this._lattice.resolutionZ,5,this._material.getScene(),!1,!1,1,1)):this._latticeDataTexture.update(this._latticeData)}getUniforms(e){return e===1?{ubo:[{name:"lattice_cellSize",size:3,type:"vec3"},{name:"lattice_min",size:3,type:"vec3"},{name:"lattice_max",size:3,type:"vec3"},{name:"lattice_resolution",size:3,type:"vec3"},{name:"lattice_position",size:3,type:"vec3"}]}:{ubo:[{name:"lattice_cellSize",size:3,type:"vec3"},{name:"lattice_min",size:3,type:"vec3"},{name:"lattice_max",size:3,type:"vec3"},{name:"lattice_resolution",size:3,type:"vec3"},{name:"lattice_position",size:3,type:"vec3"}],vertex:`
                    uniform vec3 lattice_cellSize;
                    uniform vec3 lattice_min;
                    uniform vec3 lattice_max;
                    uniform vec3 lattice_resolution;
                    uniform vec3 lattice_position;
                    `}}bindForSubMesh(e){this._lattice.updateInternals(),e.updateVector3("lattice_cellSize",this._lattice.cellSize),e.updateVector3("lattice_min",this._lattice.min),e.updateVector3("lattice_max",this._lattice.max),e.updateFloat3("lattice_resolution",this._lattice.resolutionX,this._lattice.resolutionY,this._lattice.resolutionZ),e.updateVector3("lattice_position",this._lattice.position),e.setTexture("latticeData",this._latticeDataTexture)}getSamplers(e){e.push("latticeData")}_prepareCode(e=0){if(this._code)return this._code;let t=`
            if (positionUpdated.x >= lattice_min.x && positionUpdated.x <= lattice_max.x && 
                positionUpdated.y >= lattice_min.y && positionUpdated.y <= lattice_max.y && 
                positionUpdated.z >= lattice_min.z && positionUpdated.z <= lattice_max.z) {

                // Map vertex position to lattice local coordinates
                vec3d localPos = vec3c((positionUpdated.x - lattice_min.x) / lattice_cellSize.x, (positionUpdated.y - lattice_min.y) / lattice_cellSize.y, (positionUpdated.z - lattice_min.z) / lattice_cellSize.z);

                // Get integer lattice indices
                intd i0 = intc(floor(localPos.x));
                intd j0 = intc(floor(localPos.y));
                intd k0 = intc(floor(localPos.z));

                intd resX = intc(lattice_resolution.x) - 1;
                intd resY = intc(lattice_resolution.y) - 1;
                intd resZ = intc(lattice_resolution.z) - 1;

                intd i1 = min(i0 + 1, resX);
                intd j1 = min(j0 + 1, resY);
                intd k1 = min(k0 + 1, resZ);

                // Compute interpolation weights
                floatd tx = localPos.x - floatc(i0);
                floatd ty = localPos.y - floatc(j0);
                floatd tz = localPos.z - floatc(k0);

                // Ensure indices are within bounds
                intd ii0 = clamp(i0, 0, resX);
                intd jj0 = clamp(j0, 0, resY);
                intd kk0 = clamp(k0, 0, resZ);
                intd ii1 = clamp(i1, 0, resX);
                intd jj1 = clamp(j1, 0, resY);
                intd kk1 = clamp(k1, 0, resZ);

                // Get lattice control points
                vec3d p000 = texelFetch(latticeData, ivec3c(ii0, jj0, kk0), 0).rgb;
                vec3d p100 = texelFetch(latticeData, ivec3c(ii1, jj0, kk0), 0).rgb;
                vec3d p010 = texelFetch(latticeData, ivec3c(ii0, jj1, kk0), 0).rgb;
                vec3d p110 = texelFetch(latticeData, ivec3c(ii1, jj1, kk0), 0).rgb;
                vec3d p001 = texelFetch(latticeData, ivec3c(ii0, jj0, kk1), 0).rgb;
                vec3d p101 = texelFetch(latticeData, ivec3c(ii1, jj0, kk1), 0).rgb;
                vec3d p011 = texelFetch(latticeData, ivec3c(ii0, jj1, kk1), 0).rgb;
                vec3d p111 = texelFetch(latticeData, ivec3c(ii1, jj1, kk1), 0).rgb;

                // Trilinear interpolation
                vec3d p00 = mix(p000, p100, tx);
                vec3d p01 = mix(p001, p101, tx);
                vec3d p10 = mix(p010, p110, tx);
                vec3d p11 = mix(p011, p111, tx);

                vec3d p0 = mix(p00, p10, ty);
                vec3d p1 = mix(p01, p11, ty);

                vec3d deformedPos = mix(p0, p1, tz);
                positionUpdated = deformedPos + lattice_position;
            };
        `;return e===1?(t=`
                let lattice_min = uniforms.lattice_min;
                let lattice_max = uniforms.lattice_max;
                let lattice_resolution = uniforms.lattice_resolution;
                let lattice_position = uniforms.lattice_position;
                let lattice_cellSize = uniforms.lattice_cellSize;
            `+t,t=t.replace(/ivec3c/g,"vec3i"),t=t.replace(/vec3d/g,"var"),t=t.replace(/vec3c/g,"vec3f"),t=t.replace(/intd/g,"var"),t=t.replace(/intc/g,"i32"),t=t.replace(/floatd/g,"var"),t=t.replace(/floatc/g,"f32"),t=t.replace(/texelFetch/g,"textureLoad")):(t=t.replace(/ivec3c/g,"ivec3"),t=t.replace(/vec3d/g,"vec3"),t=t.replace(/vec3c/g,"vec3"),t=t.replace(/intd/g,"int"),t=t.replace(/intc/g,"int"),t=t.replace(/floatd/g,"float"),t=t.replace(/floatc/g,"float")),this._code=t,this._code}getCustomCode(e,t=0){return e==="vertex"?t===1?{CUSTOM_VERTEX_DEFINITIONS:`
                        var latticeData: texture_3d<f32>;
                    `,CUSTOM_VERTEX_UPDATE_POSITION:this._prepareCode(t)}:{CUSTOM_VERTEX_DEFINITIONS:`
                    precision highp sampler3D;
                    uniform sampler3D latticeData;
                `,CUSTOM_VERTEX_UPDATE_POSITION:this._prepareCode(t)}:null}dispose(){this._latticeDataTexture&&(this._latticeDataTexture.dispose(),this._latticeDataTexture=null)}}class ga{constructor(e=Recast){if(this.bjsRECAST={},this.name="RecastJSPlugin",this._maximumSubStepCount=10,this._timeStep=1/60,this._timeFactor=1,this._worker=null,typeof e=="function"?D.Error("RecastJS is not ready. Please make sure you await Recast() before using the plugin."):this.bjsRECAST=e,!this.isSupported()){D.Error("RecastJS is not available. Please make sure you included the js file.");return}this.setTimeStep(),this._tempVec1=new this.bjsRECAST.Vec3,this._tempVec2=new this.bjsRECAST.Vec3}setWorkerURL(e){return window&&window.Worker?(this._worker=new Worker(e),!0):!1}setTimeStep(e=1/60){this._timeStep=e}getTimeStep(){return this._timeStep}setMaximumSubStepCount(e=10){this._maximumSubStepCount=e}getMaximumSubStepCount(){return this._maximumSubStepCount}set timeFactor(e){this._timeFactor=Math.max(e,0)}get timeFactor(){return this._timeFactor}createNavMesh(e,t,s){this._worker&&!s?D.Warn("A worker is avaible but no completion callback. Defaulting to blocking navmesh creation"):!this._worker&&s&&D.Warn("A completion callback is avaible but no worker. Defaulting to blocking navmesh creation"),this.navMesh=new this.bjsRECAST.NavMesh;let i,a,r;const n=[],o=[];let h=0;for(i=0;i<e.length;i++)if(e[i]){const l=e[i],u=l.getIndices();if(!u)continue;const g=l.getVerticesData(E.PositionKind,!1,!1);if(!g)continue;const _=[],f=l.computeWorldMatrix(!0);if(l.hasThinInstances){const m=l.thinInstanceGetWorldMatrices();for(let b=0;b<m.length;b++){const P=new C;m[b].multiplyToRef(f,P),_.push(P)}}else _.push(f);for(let m=0;m<_.length;m++){const b=_[m];for(a=0;a<u.length;a++)n.push(u[a]+h);const P=c.Zero(),x=c.Zero();for(r=0;r<g.length;r+=3)c.FromArrayToRef(g,r,x),c.TransformCoordinatesToRef(x,b,P),o.push(P.x,P.y,P.z);h+=g.length/3}}if(this._worker&&s)this._worker.postMessage([o,h,n,n.length,t]),this._worker.onmessage=function(l){s(l.data)};else{const l=new this.bjsRECAST.rcConfig;l.cs=t.cs,l.ch=t.ch,l.borderSize=t.borderSize?t.borderSize:0,l.tileSize=t.tileSize?t.tileSize:0,l.walkableSlopeAngle=t.walkableSlopeAngle,l.walkableHeight=t.walkableHeight,l.walkableClimb=t.walkableClimb,l.walkableRadius=t.walkableRadius,l.maxEdgeLen=t.maxEdgeLen,l.maxSimplificationError=t.maxSimplificationError,l.minRegionArea=t.minRegionArea,l.mergeRegionArea=t.mergeRegionArea,l.maxVertsPerPoly=t.maxVertsPerPoly,l.detailSampleDist=t.detailSampleDist,l.detailSampleMaxError=t.detailSampleMaxError,this.navMesh.build(o,h,n,n.length,l)}}createDebugNavMesh(e){let t,s;const i=this.navMesh.getDebugNavMesh(),a=i.getTriangleCount(),r=[],n=[];for(t=0;t<a*3;t++)r.push(t);for(t=0;t<a;t++)for(s=0;s<3;s++){const l=i.getTriangle(t).getPoint(s);n.push(l.x,l.y,l.z)}const o=new oe("NavMeshDebug",e),h=new $e;return h.indices=r,h.positions=n,h.applyToMesh(o,!1),o}getClosestPoint(e){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const t=this.navMesh.getClosestPoint(this._tempVec1);return new c(t.x,t.y,t.z)}getClosestPointToRef(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const s=this.navMesh.getClosestPoint(this._tempVec1);t.set(s.x,s.y,s.z)}getRandomPointAround(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const s=this.navMesh.getRandomPointAround(this._tempVec1,t);return new c(s.x,s.y,s.z)}getRandomPointAroundToRef(e,t,s){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z;const i=this.navMesh.getRandomPointAround(this._tempVec1,t);s.set(i.x,i.y,i.z)}moveAlong(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.moveAlong(this._tempVec1,this._tempVec2);return new c(s.x,s.y,s.z)}moveAlongToRef(e,t,s){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const i=this.navMesh.moveAlong(this._tempVec1,this._tempVec2);s.set(i.x,i.y,i.z)}_convertNavPathPoints(e){let t;const s=e.getPointCount(),i=[];for(t=0;t<s;t++){const a=e.getPoint(t);i.push(new c(a.x,a.y,a.z))}return i}computePath(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.computePath(this._tempVec1,this._tempVec2);return this._convertNavPathPoints(s)}computePathSmooth(e,t){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z;const s=this.navMesh.computePathSmooth(this._tempVec1,this._tempVec2);return this._convertNavPathPoints(s)}createCrowd(e,t,s){return new Mi(this,e,t,s)}setDefaultQueryExtent(e){this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this.navMesh.setDefaultQueryExtent(this._tempVec1)}getDefaultQueryExtent(){const e=this.navMesh.getDefaultQueryExtent();return new c(e.x,e.y,e.z)}buildFromNavmeshData(e){const t=e.length*e.BYTES_PER_ELEMENT,s=this.bjsRECAST._malloc(t),i=new Uint8Array(this.bjsRECAST.HEAPU8.buffer,s,t);i.set(e);const a=new this.bjsRECAST.NavmeshData;a.dataPointer=i.byteOffset,a.size=e.length,this.navMesh=new this.bjsRECAST.NavMesh,this.navMesh.buildFromNavmeshData(a),this.bjsRECAST._free(i.byteOffset)}getNavmeshData(){const e=this.navMesh.getNavmeshData(),t=new Uint8Array(this.bjsRECAST.HEAPU8.buffer,e.dataPointer,e.size),s=new Uint8Array(e.size);return s.set(t),this.navMesh.freeNavmeshData(e),s}getDefaultQueryExtentToRef(e){const t=this.navMesh.getDefaultQueryExtent();e.set(t.x,t.y,t.z)}dispose(){}addCylinderObstacle(e,t,s){return this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this.navMesh.addCylinderObstacle(this._tempVec1,t,s)}addBoxObstacle(e,t,s){return this._tempVec1.x=e.x,this._tempVec1.y=e.y,this._tempVec1.z=e.z,this._tempVec2.x=t.x,this._tempVec2.y=t.y,this._tempVec2.z=t.z,this.navMesh.addBoxObstacle(this._tempVec1,this._tempVec2,s)}removeObstacle(e){this.navMesh.removeObstacle(e)}isSupported(){return this.bjsRECAST!==void 0}getRandomSeed(){return this.bjsRECAST._getRandomSeed()}setRandomSeed(e){this.bjsRECAST._setRandomSeed(e)}}class Mi{constructor(e,t,s,i){this.recastCrowd={},this.transforms=new Array,this.agents=new Array,this.reachRadii=new Array,this._agentDestinationArmed=new Array,this._agentDestination=new Array,this._onBeforeAnimationsObserver=null,this.onReachTargetObservable=new N,this.bjsRECASTPlugin=e,this.recastCrowd=new this.bjsRECASTPlugin.bjsRECAST.Crowd(t,s,this.bjsRECASTPlugin.navMesh.getNavMesh()),this._scene=i,this._onBeforeAnimationsObserver=i.onBeforeAnimationsObservable.add(()=>{this.update(i.getEngine().getDeltaTime()*.001*e.timeFactor)})}addAgent(e,t,s){const i=new this.bjsRECASTPlugin.bjsRECAST.dtCrowdAgentParams;i.radius=t.radius,i.height=t.height,i.maxAcceleration=t.maxAcceleration,i.maxSpeed=t.maxSpeed,i.collisionQueryRange=t.collisionQueryRange,i.pathOptimizationRange=t.pathOptimizationRange,i.separationWeight=t.separationWeight,i.updateFlags=7,i.obstacleAvoidanceType=0,i.queryFilterType=0,i.userData=0;const a=this.recastCrowd.addAgent(new this.bjsRECASTPlugin.bjsRECAST.Vec3(e.x,e.y,e.z),i);return this.transforms.push(s),this.agents.push(a),this.reachRadii.push(t.reachRadius?t.reachRadius:t.radius),this._agentDestinationArmed.push(!1),this._agentDestination.push(new c(0,0,0)),a}getAgentPosition(e){const t=this.recastCrowd.getAgentPosition(e);return new c(t.x,t.y,t.z)}getAgentPositionToRef(e,t){const s=this.recastCrowd.getAgentPosition(e);t.set(s.x,s.y,s.z)}getAgentVelocity(e){const t=this.recastCrowd.getAgentVelocity(e);return new c(t.x,t.y,t.z)}getAgentVelocityToRef(e,t){const s=this.recastCrowd.getAgentVelocity(e);t.set(s.x,s.y,s.z)}getAgentNextTargetPath(e){const t=this.recastCrowd.getAgentNextTargetPath(e);return new c(t.x,t.y,t.z)}getAgentNextTargetPathToRef(e,t){const s=this.recastCrowd.getAgentNextTargetPath(e);t.set(s.x,s.y,s.z)}getAgentState(e){return this.recastCrowd.getAgentState(e)}overOffmeshConnection(e){return this.recastCrowd.overOffmeshConnection(e)}agentGoto(e,t){this.recastCrowd.agentGoto(e,new this.bjsRECASTPlugin.bjsRECAST.Vec3(t.x,t.y,t.z));const s=this.agents.indexOf(e);s>-1&&(this._agentDestinationArmed[s]=!0,this._agentDestination[s].set(t.x,t.y,t.z))}agentTeleport(e,t){this.recastCrowd.agentTeleport(e,new this.bjsRECASTPlugin.bjsRECAST.Vec3(t.x,t.y,t.z))}updateAgentParameters(e,t){const s=this.recastCrowd.getAgentParameters(e);t.radius!==void 0&&(s.radius=t.radius),t.height!==void 0&&(s.height=t.height),t.maxAcceleration!==void 0&&(s.maxAcceleration=t.maxAcceleration),t.maxSpeed!==void 0&&(s.maxSpeed=t.maxSpeed),t.collisionQueryRange!==void 0&&(s.collisionQueryRange=t.collisionQueryRange),t.pathOptimizationRange!==void 0&&(s.pathOptimizationRange=t.pathOptimizationRange),t.separationWeight!==void 0&&(s.separationWeight=t.separationWeight),this.recastCrowd.setAgentParameters(e,s)}removeAgent(e){this.recastCrowd.removeAgent(e);const t=this.agents.indexOf(e);t>-1&&(this.agents.splice(t,1),this.transforms.splice(t,1),this.reachRadii.splice(t,1),this._agentDestinationArmed.splice(t,1),this._agentDestination.splice(t,1))}getAgents(){return this.agents}update(e){if(this.bjsRECASTPlugin.navMesh.update(),e<=ne)return;const t=this.bjsRECASTPlugin.getTimeStep(),s=this.bjsRECASTPlugin.getMaximumSubStepCount();if(t<=ne)this.recastCrowd.update(e);else{let i=Math.floor(e/t);s&&i>s&&(i=s),i<1&&(i=1);const a=e/i;for(let r=0;r<i;r++)this.recastCrowd.update(a)}for(let i=0;i<this.agents.length;i++){const a=this.agents[i],r=this.getAgentPosition(a);if(this.transforms[i].position=r,this._agentDestinationArmed[i]){const n=r.x-this._agentDestination[i].x,o=r.z-this._agentDestination[i].z,h=this.reachRadii[i],l=this._agentDestination[i].y-this.reachRadii[i],u=this._agentDestination[i].y+this.reachRadii[i],g=n*n+o*o;r.y>l&&r.y<u&&g<h*h&&(this._agentDestinationArmed[i]=!1,this.onReachTargetObservable.notifyObservers({agentIndex:a,destination:this._agentDestination[i]}))}}}setDefaultQueryExtent(e){const t=new this.bjsRECASTPlugin.bjsRECAST.Vec3(e.x,e.y,e.z);this.recastCrowd.setDefaultQueryExtent(t)}getDefaultQueryExtent(){const e=this.recastCrowd.getDefaultQueryExtent();return new c(e.x,e.y,e.z)}getDefaultQueryExtentToRef(e){const t=this.recastCrowd.getDefaultQueryExtent();e.set(t.x,t.y,t.z)}getCorners(e){let t;const s=this.recastCrowd.getCorners(e),i=s.getPointCount(),a=[];for(t=0;t<i;t++){const r=s.getPoint(t);a.push(new c(r.x,r.y,r.z))}return a}dispose(){this.recastCrowd.destroy(),this._scene.onBeforeAnimationsObservable.remove(this._onBeforeAnimationsObserver),this._onBeforeAnimationsObserver=null,this.onReachTargetObservable.clear()}}class kt{getBoundingInfo(){return this._boundingInfo}get hasBoundingInfo(){return this._boundingInfo!==null}constructor(e,t,s,i,a,r,n,o,h=null,l=null){this.idx=0,this.id=0,this.color=new Re(1,1,1,1),this.position=c.Zero(),this.rotation=c.Zero(),this.scaling=c.One(),this.uvs=new le(0,0,1,1),this.velocity=c.Zero(),this.pivot=c.Zero(),this.translateFromPivot=!1,this.alive=!0,this.isVisible=!0,this._pos=0,this._ind=0,this.shapeId=0,this.idxInShape=0,this._stillInvisible=!1,this._rotationMatrix=[1,0,0,0,1,0,0,0,1],this.parentId=null,this.materialIndex=null,this.props=null,this.cullingStrategy=Ht.CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY,this._globalPosition=c.Zero(),this.idx=e,this.id=t,this._pos=s,this._ind=i,this._model=a,this.shapeId=r,this.idxInShape=n,this._sps=o,h&&(this._modelBoundingInfo=h,this._boundingInfo=new Ut(h.minimum,h.maximum)),l!==null&&(this.materialIndex=l)}copyToRef(e){return e.position.copyFrom(this.position),e.rotation.copyFrom(this.rotation),this.rotationQuaternion&&(e.rotationQuaternion?e.rotationQuaternion.copyFrom(this.rotationQuaternion):e.rotationQuaternion=this.rotationQuaternion.clone()),e.scaling.copyFrom(this.scaling),this.color&&(e.color?e.color.copyFrom(this.color):e.color=this.color.clone()),e.uvs.copyFrom(this.uvs),e.velocity.copyFrom(this.velocity),e.pivot.copyFrom(this.pivot),e.translateFromPivot=this.translateFromPivot,e.alive=this.alive,e.isVisible=this.isVisible,e.parentId=this.parentId,e.cullingStrategy=this.cullingStrategy,this.materialIndex!==null&&(e.materialIndex=this.materialIndex),this}get scale(){return this.scaling}set scale(e){this.scaling=e}get quaternion(){return this.rotationQuaternion}set quaternion(e){this.rotationQuaternion=e}intersectsMesh(e){return!this._boundingInfo||!e.hasBoundingInfo?!1:this._sps._bSphereOnly?Ns.Intersects(this._boundingInfo.boundingSphere,e.getBoundingInfo().boundingSphere):this._boundingInfo.intersects(e.getBoundingInfo(),!1)}isInFrustum(e){return this._boundingInfo!==null&&this._boundingInfo.isInFrustum(e,this.cullingStrategy)}getRotationMatrix(e){let t;if(this.rotationQuaternion)t=this.rotationQuaternion;else{t=d.Quaternion[0];const s=this.rotation;y.RotationYawPitchRollToRef(s.y,s.x,s.z,t)}t.toRotationMatrix(e)}}class Vt{get shapeID(){return this.shapeId}set shapeID(e){this.shapeId=e}constructor(e,t,s,i,a,r,n,o,h){this._indicesLength=0,this.shapeId=e,this._shape=t,this._indices=s,this._indicesLength=s.length,this._shapeUV=r,this._shapeColors=a,this._normals=i,this._positionFunction=n,this._vertexFunction=o,this._material=h}}class Si{constructor(e,t,s,i){this.idx=0,this.ind=0,this.indicesLength=0,this.sqDistance=0,this.materialIndex=0,this.idx=e,this.ind=t,this.indicesLength=s,this.materialIndex=i}}class Ti{constructor(){this.position=c.Zero(),this.color=new Re(1,1,1,1),this.uv=at.Zero()}get x(){return this.position.x}set x(e){this.position.x=e}get y(){return this.position.y}set y(e){this.position.y=e}get z(){return this.position.z}set z(e){this.position.z=e}}class ma{constructor(e,t,s){this.particles=new Array,this.nbParticles=0,this.billboard=!1,this.recomputeNormals=!1,this.counter=0,this.vars={},this._bSphereOnly=!1,this._bSphereRadiusFactor=1,this._positions=new Array,this._indices=new Array,this._normals=new Array,this._colors=new Array,this._uvs=new Array,this._index=0,this._updatable=!0,this._pickable=!1,this._isVisibilityBoxLocked=!1,this._alwaysVisible=!1,this._depthSort=!1,this._expandable=!1,this._shapeCounter=0,this._copy=new kt(0,0,0,0,null,0,0,this),this._color=new Re(0,0,0,0),this._computeParticleColor=!0,this._computeParticleTexture=!0,this._computeParticleRotation=!0,this._computeParticleVertex=!1,this._computeBoundingBox=!1,this._autoFixFaceOrientation=!1,this._depthSortParticles=!0,this._mustUnrotateFixedNormals=!1,this._particlesIntersect=!1,this._needs32Bits=!1,this._isNotBuilt=!0,this._lastParticleId=0,this._idxOfId=[],this._multimaterialEnabled=!1,this._useModelMaterial=!1,this._depthSortFunction=(i,a)=>a.sqDistance-i.sqDistance,this._materialSortFunction=(i,a)=>i.materialIndex-a.materialIndex,this._autoUpdateSubMeshes=!1,this._recomputeInvisibles=!1,this.name=e,this._scene=t||et.LastCreatedScene,this._camera=t.activeCamera,this._pickable=s?s.isPickable:!1,this._depthSort=s?s.enableDepthSort:!1,this._multimaterialEnabled=s?s.enableMultiMaterial:!1,this._useModelMaterial=s?s.useModelMaterial:!1,this._multimaterialEnabled=this._useModelMaterial?!0:this._multimaterialEnabled,this._expandable=s?s.expandable:!1,this._particlesIntersect=s?s.particleIntersection:!1,this._bSphereOnly=s?s.boundingSphereOnly:!1,this._bSphereRadiusFactor=s&&s.bSphereRadiusFactor?s.bSphereRadiusFactor:1,this._computeBoundingBox=s!=null&&s.computeBoundingBox?s.computeBoundingBox:!1,this._autoFixFaceOrientation=s!=null&&s.autoFixFaceOrientation?s.autoFixFaceOrientation:!1,s&&s.updatable!==void 0?this._updatable=s.updatable:this._updatable=!0,this._pickable&&(this.pickedBySubMesh=[[]],this.pickedParticles=this.pickedBySubMesh[0]),(this._depthSort||this._multimaterialEnabled)&&(this.depthSortedParticles=[]),this._multimaterialEnabled&&(this._multimaterial=new mt(this.name+"MultiMaterial",this._scene),this._materials=[],this._materialIndexesById={}),this._tmpVertex=new Ti}buildMesh(){if(!this._isNotBuilt&&this.mesh)return this.mesh;if(this.nbParticles===0&&!this.mesh){const t=Ws("",{radius:1,tessellation:3},this._scene);this.addShape(t,1),t.dispose()}if(this._indices32=this._needs32Bits?new Uint32Array(this._indices):new Uint16Array(this._indices),this._positions32=new Float32Array(this._positions),this._uvs32=new Float32Array(this._uvs),this._colors32=new Float32Array(this._colors),!this.mesh){const t=new oe(this.name,this._scene);this.mesh=t}!this._updatable&&this._multimaterialEnabled&&this._sortParticlesByMaterial(),this.recomputeNormals&&$e.ComputeNormals(this._positions32,this._indices32,this._normals),this._normals32=new Float32Array(this._normals),this._fixedNormal32=new Float32Array(this._normals),this._mustUnrotateFixedNormals&&this._unrotateFixedNormals();const e=new $e;if(e.indices=this._depthSort?this._indices:this._indices32,e.set(this._positions32,E.PositionKind),e.set(this._normals32,E.NormalKind),this._uvs32.length>0&&e.set(this._uvs32,E.UVKind),this._colors32.length>0&&e.set(this._colors32,E.ColorKind),e.applyToMesh(this.mesh,this._updatable),this.mesh.isPickable=this._pickable,this._pickable){let t=0;for(let s=0;s<this.nbParticles;s++){const i=this.particles[s],a=i._model._indicesLength;for(let r=0;r<a;r++)if(r%3==0){const o={idx:i.idx,faceId:t};this.pickedParticles[t]=o,t++}}}return this._multimaterialEnabled&&this.setMultiMaterial(this._materials),this._expandable||(!this._depthSort&&!this._multimaterialEnabled&&!this._autoFixFaceOrientation&&(this._indices=null),this._positions=null,this._normals=null,this._uvs=null,this._colors=null,this._updatable||(this.particles.length=0)),this._isNotBuilt=!1,this.recomputeNormals=!1,this._recomputeInvisibles=!0,this.mesh}_getUVKind(e,t){var s,i;return t===-1&&((s=e.material)!=null&&s.diffuseTexture?t=e.material.diffuseTexture.coordinatesIndex:(i=e.material)!=null&&i.albedoTexture&&(t=e.material.albedoTexture.coordinatesIndex)),"uv"+(t?t+1:"")}digest(e,t){let s=t&&t.facetNb||1,i=t&&t.number||0,a=t&&t.delta||0;const r=e.getVerticesData(E.PositionKind),n=e.getIndices(),o=e.getVerticesData(this._getUVKind(e,(t==null?void 0:t.uvKind)??0)),h=e.getVerticesData(E.ColorKind),l=e.getVerticesData(E.NormalKind),u=t&&t.storage?t.storage:null;let g=0;const _=n.length/3;i?(i=i>_?_:i,s=Math.round(_/i),a=0):s=s>_?_:s;const f=[],m=[],b=[],P=[],x=[],v=c.Zero(),R=s;for(;g<_;){s=R+Math.floor((1+a)*Math.random()),g>_-s&&(s=_-g),f.length=0,m.length=0,b.length=0,P.length=0,x.length=0;let A=0;for(let q=g*3;q<(g+s)*3;q++){b.push(A);const K=n[q],T=K*3;if(f.push(r[T],r[T+1],r[T+2]),m.push(l[T],l[T+1],l[T+2]),o){const V=K*2;P.push(o[V],o[V+1])}if(h){const V=K*4;x.push(h[V],h[V+1],h[V+2],h[V+3])}A++}let W=this.nbParticles;const w=this._posToShape(f),Q=this._uvsToShapeUV(P),G=b.slice(),F=x.slice(),Y=m.slice();v.copyFromFloats(0,0,0);let O;for(O=0;O<w.length;O++)v.addInPlace(w[O]);v.scaleInPlace(1/w.length);const ie=new c(1/0,1/0,1/0),ae=new c(-1/0,-1/0,-1/0);for(O=0;O<w.length;O++)w[O].subtractInPlace(v),ie.minimizeInPlaceFromFloats(w[O].x,w[O].y,w[O].z),ae.maximizeInPlaceFromFloats(w[O].x,w[O].y,w[O].z);let re;this._particlesIntersect&&(re=new Ut(ie,ae));let B=null;this._useModelMaterial&&(B=e.material?e.material:this._setDefaultMaterial());const Se=new Vt(this._shapeCounter,w,G,Y,F,Q,null,null,B),ee=this._positions.length,S=this._indices.length;this._meshBuilder(this._index,S,w,this._positions,G,this._indices,P,this._uvs,F,this._colors,Y,this._normals,W,0,null,Se),this._addParticle(W,this._lastParticleId,ee,S,Se,this._shapeCounter,0,re,u),this.particles[this.nbParticles].position.addInPlace(v),u||(this._index+=w.length,W++,this.nbParticles++,this._lastParticleId++),this._shapeCounter++,g+=s}return this._isNotBuilt=!0,this}_unrotateFixedNormals(){let e=0,t=0;const s=d.Vector3[0],i=d.Quaternion[0],a=d.Matrix[0];for(let r=0;r<this.particles.length;r++){const n=this.particles[r],o=n._model._shape;if(n.rotationQuaternion)n.rotationQuaternion.conjugateToRef(i);else{const h=n.rotation;y.RotationYawPitchRollToRef(h.y,h.x,h.z,i),i.conjugateInPlace()}i.toRotationMatrix(a);for(let h=0;h<o.length;h++)t=e+h*3,c.TransformNormalFromFloatsToRef(this._normals32[t],this._normals32[t+1],this._normals32[t+2],a,s),s.toArray(this._fixedNormal32,t);e=t+3}}_resetCopy(){const e=this._copy;e.position.setAll(0),e.rotation.setAll(0),e.rotationQuaternion=null,e.scaling.setAll(1),e.uvs.copyFromFloats(0,0,1,1),e.color=null,e.translateFromPivot=!1,e.shapeId=0,e.materialIndex=null}_meshBuilder(e,t,s,i,a,r,n,o,h,l,u,g,_,f,m,b){let P,x=0,v=0,R=0;this._resetCopy();const A=this._copy,W=!!(m&&m.storage);if(A.idx=_,A.idxInShape=f,A.shapeId=b.shapeId,this._useModelMaterial){const B=b._material.uniqueId,Se=this._materialIndexesById;Object.prototype.hasOwnProperty.call(Se,B)||(Se[B]=this._materials.length,this._materials.push(b._material));const ee=Se[B];A.materialIndex=ee}if(m&&m.positionFunction&&(m.positionFunction(A,_,f),this._mustUnrotateFixedNormals=!0),W)return A;const w=d.Matrix[0],Q=this._tmpVertex,G=Q.position,F=Q.color,Y=Q.uv,O=d.Vector3[1],ie=d.Vector3[2],ae=d.Vector3[3];C.IdentityToRef(w),A.getRotationMatrix(w),A.pivot.multiplyToRef(A.scaling,ae),A.translateFromPivot?ie.setAll(0):ie.copyFrom(ae);const re=m&&m.vertexFunction;for(P=0;P<s.length;P++){if(G.copyFrom(s[P]),A.color&&F.copyFrom(A.color),n&&Y.copyFromFloats(n[x],n[x+1]),re&&m.vertexFunction(A,Q,P),G.multiplyInPlace(A.scaling).subtractInPlace(ae),c.TransformCoordinatesToRef(G,w,O),O.addInPlace(ie).addInPlace(A.position),i.push(O.x,O.y,O.z),n){const B=A.uvs;o.push((B.z-B.x)*Y.x+B.x,(B.w-B.y)*Y.y+B.y),x+=2}if(A.color)this._color.copyFrom(F);else{const B=this._color;h&&h[v]!==void 0?(B.r=h[v],B.g=h[v+1],B.b=h[v+2],B.a=h[v+3]):(B.r=1,B.g=1,B.b=1,B.a=1)}l.push(this._color.r,this._color.g,this._color.b,this._color.a),v+=4,!this.recomputeNormals&&u&&(c.TransformNormalFromFloatsToRef(u[R],u[R+1],u[R+2],w,G),g.push(G.x,G.y,G.z),R+=3)}for(P=0;P<a.length;P++){const B=e+a[P];r.push(B),B>65535&&(this._needs32Bits=!0)}if(this._depthSort||this._multimaterialEnabled){const B=A.materialIndex!==null?A.materialIndex:0;this.depthSortedParticles.push(new Si(_,t,a.length,B))}return A}_posToShape(e){const t=[];for(let s=0;s<e.length;s+=3)t.push(c.FromArray(e,s));return t}_uvsToShapeUV(e){const t=[];if(e)for(let s=0;s<e.length;s++)t.push(e[s]);return t}_addParticle(e,t,s,i,a,r,n,o=null,h=null){const l=new kt(e,t,s,i,a,r,n,this,o);return(h||this.particles).push(l),l}addShape(e,t,s){const i=e.getVerticesData(E.PositionKind),a=e.getIndices(),r=e.getVerticesData(E.UVKind),n=e.getVerticesData(E.ColorKind),o=e.getVerticesData(E.NormalKind);this.recomputeNormals=!o;const h=Array.from(a),l=o?Array.from(o):[],u=n?Array.from(n):[],g=s&&s.storage?s.storage:null;let _=null;this._particlesIntersect&&(_=e.getBoundingInfo());const f=this._posToShape(i),m=this._uvsToShapeUV(r),b=s?s.positionFunction:null,P=s?s.vertexFunction:null;let x=null;this._useModelMaterial&&(x=e.material?e.material:this._setDefaultMaterial());const v=new Vt(this._shapeCounter,f,h,l,u,m,b,P,x);for(let R=0;R<t;R++)this._insertNewParticle(this.nbParticles,R,v,f,a,r,n,o,_,g,s);return this._shapeCounter++,this._isNotBuilt=!0,this._shapeCounter-1}_rebuildParticle(e,t=!1){this._resetCopy();const s=this._copy;e._model._positionFunction&&e._model._positionFunction(s,e.idx,e.idxInShape);const i=d.Matrix[0],a=d.Vector3[0],r=d.Vector3[1],n=d.Vector3[2],o=d.Vector3[3];s.getRotationMatrix(i),e.pivot.multiplyToRef(e.scaling,o),s.translateFromPivot?n.copyFromFloats(0,0,0):n.copyFrom(o);const h=e._model._shape;for(let l=0;l<h.length;l++)a.copyFrom(h[l]),e._model._vertexFunction&&e._model._vertexFunction(s,a,l),a.multiplyInPlace(s.scaling).subtractInPlace(o),c.TransformCoordinatesToRef(a,i,r),r.addInPlace(n).addInPlace(s.position).toArray(this._positions32,e._pos+l*3);t&&(e.position.setAll(0),e.rotation.setAll(0),e.rotationQuaternion=null,e.scaling.setAll(1),e.uvs.setAll(0),e.pivot.setAll(0),e.translateFromPivot=!1,e.parentId=null)}rebuildMesh(e=!1){for(let t=0;t<this.particles.length;t++)this._rebuildParticle(this.particles[t],e);return this.mesh.updateVerticesData(E.PositionKind,this._positions32,!1,!1),this}removeParticles(e,t){const s=t-e+1;if(!this._expandable||s<=0||s>=this.nbParticles||!this._updatable)return[];const i=this.particles,a=this.nbParticles;if(t<a-1){const h=t+1,l=i[h]._pos-i[e]._pos,u=i[h]._ind-i[e]._ind;for(let g=h;g<a;g++){const _=i[g];_._pos-=l,_._ind-=u}}const r=i.splice(e,s);this._positions.length=0,this._indices.length=0,this._colors.length=0,this._uvs.length=0,this._normals.length=0,this._index=0,this._idxOfId.length=0,(this._depthSort||this._multimaterialEnabled)&&(this.depthSortedParticles=[]);let n=0;const o=i.length;for(let h=0;h<o;h++){const l=i[h],u=l._model,g=u._shape,_=u._indices,f=u._normals,m=u._shapeColors,b=u._shapeUV;l.idx=h,this._idxOfId[l.id]=h,this._meshBuilder(this._index,n,g,this._positions,_,this._indices,b,this._uvs,m,this._colors,f,this._normals,l.idx,l.idxInShape,null,u),this._index+=g.length,n+=_.length}return this.nbParticles-=s,this._isNotBuilt=!0,r}insertParticlesFromArray(e){if(!this._expandable)return this;let t=0,s=e[0].shapeId;const i=e.length;for(let a=0;a<i;a++){const r=e[a],n=r._model,o=n._shape,h=n._indices,l=n._shapeUV,u=n._shapeColors,g=n._normals,_=!g;this.recomputeNormals=_||this.recomputeNormals;const f=r.getBoundingInfo(),m=this._insertNewParticle(this.nbParticles,t,n,o,h,l,u,g,f,null,null);r.copyToRef(m),t++,s!=r.shapeId&&(s=r.shapeId,t=0)}return this._isNotBuilt=!0,this}_insertNewParticle(e,t,s,i,a,r,n,o,h,l,u){const g=this._positions.length,_=this._indices.length,f=this._meshBuilder(this._index,_,i,this._positions,a,this._indices,r,this._uvs,n,this._colors,o,this._normals,e,t,u,s);let m=null;return this._updatable&&(m=this._addParticle(this.nbParticles,this._lastParticleId,g,_,s,this._shapeCounter,t,h,l),m.position.copyFrom(f.position),m.rotation.copyFrom(f.rotation),f.rotationQuaternion&&(m.rotationQuaternion?m.rotationQuaternion.copyFrom(f.rotationQuaternion):m.rotationQuaternion=f.rotationQuaternion.clone()),f.color&&(m.color?m.color.copyFrom(f.color):m.color=f.color.clone()),m.scaling.copyFrom(f.scaling),m.uvs.copyFrom(f.uvs),f.materialIndex!==null&&(m.materialIndex=f.materialIndex),this.expandable&&(this._idxOfId[m.id]=m.idx)),l||(this._index+=i.length,this.nbParticles++,this._lastParticleId++),m}setParticles(e=0,t=this.nbParticles-1,s=!0){if(!this._updatable||this._isNotBuilt)return this;this.beforeUpdateParticles(e,t,s);const i=d.Matrix[0],a=d.Matrix[1],r=this.mesh,n=this._colors32,o=this._positions32,h=this._normals32,l=this._uvs32,u=this._indices32,g=this._indices,_=this._fixedNormal32,f=this._depthSort&&this._depthSortParticles,m=d.Vector3,b=m[5].copyFromFloats(1,0,0),P=m[6].copyFromFloats(0,1,0),x=m[7].copyFromFloats(0,0,1),v=m[8].setAll(Number.MAX_VALUE),R=m[9].setAll(-Number.MAX_VALUE),A=m[10].setAll(0),W=this._tmpVertex,w=W.position,Q=W.color,G=W.uv;if((this.billboard||this._depthSort)&&(this.mesh.computeWorldMatrix(!0),this.mesh._worldMatrix.invertToRef(a)),this.billboard){const ee=m[0];this._camera.getDirectionToRef(Je.Z,ee),c.TransformNormalToRef(ee,a,x),x.normalize();const S=this._camera.getViewMatrix(!0);c.TransformNormalFromFloatsToRef(S.m[1],S.m[5],S.m[9],a,P),c.CrossToRef(P,x,b),P.normalize(),b.normalize()}this._depthSort&&c.TransformCoordinatesToRef(this._camera.globalPosition,a,A),C.IdentityToRef(i);let F=0,Y=0,O=0,ie=0,ae=0,re=0,B=0;if(this.mesh.isFacetDataEnabled&&(this._computeBoundingBox=!0),t=t>=this.nbParticles?this.nbParticles-1:t,this._computeBoundingBox&&(e!=0||t!=this.nbParticles-1)){const ee=this.mesh.getBoundingInfo();ee&&(v.copyFrom(ee.minimum),R.copyFrom(ee.maximum))}Y=this.particles[e]._pos;const Se=Y/3|0;ie=Se*4,re=Se*2;for(let ee=e;ee<=t;ee++){const S=this.particles[ee];this.updateParticle(S);const q=S._model._shape,K=S._model._shapeUV,T=S._rotationMatrix,V=S.position,Be=S.rotation,_e=S.scaling,ce=S._globalPosition;if(f){const L=this.depthSortedParticles[ee];L.idx=S.idx,L.ind=S._ind,L.indicesLength=S._model._indicesLength,L.sqDistance=c.DistanceSquared(S.position,A)}if(!S.alive||S._stillInvisible&&!S.isVisible&&!this._recomputeInvisibles){B=q.length,Y+=B*3,ie+=B*4,re+=B*2;continue}if(S.isVisible){S._stillInvisible=!1;const L=m[12];if(S.pivot.multiplyToRef(_e,L),this.billboard&&(Be.x=0,Be.y=0),(this._computeParticleRotation||this.billboard)&&S.getRotationMatrix(i),S.parentId!==null){const Z=this.getParticleById(S.parentId);if(Z){const I=Z._rotationMatrix,Pe=Z._globalPosition,Ae=V.x*I[1]+V.y*I[4]+V.z*I[7],De=V.x*I[0]+V.y*I[3]+V.z*I[6],Ce=V.x*I[2]+V.y*I[5]+V.z*I[8];if(ce.x=Pe.x+De,ce.y=Pe.y+Ae,ce.z=Pe.z+Ce,this._computeParticleRotation||this.billboard){const z=i.m;T[0]=z[0]*I[0]+z[1]*I[3]+z[2]*I[6],T[1]=z[0]*I[1]+z[1]*I[4]+z[2]*I[7],T[2]=z[0]*I[2]+z[1]*I[5]+z[2]*I[8],T[3]=z[4]*I[0]+z[5]*I[3]+z[6]*I[6],T[4]=z[4]*I[1]+z[5]*I[4]+z[6]*I[7],T[5]=z[4]*I[2]+z[5]*I[5]+z[6]*I[8],T[6]=z[8]*I[0]+z[9]*I[3]+z[10]*I[6],T[7]=z[8]*I[1]+z[9]*I[4]+z[10]*I[7],T[8]=z[8]*I[2]+z[9]*I[5]+z[10]*I[8]}}else S.parentId=null}else if(ce.x=V.x,ce.y=V.y,ce.z=V.z,this._computeParticleRotation||this.billboard){const Z=i.m;T[0]=Z[0],T[1]=Z[1],T[2]=Z[2],T[3]=Z[4],T[4]=Z[5],T[5]=Z[6],T[6]=Z[8],T[7]=Z[9],T[8]=Z[10]}const xe=m[11];for(S.translateFromPivot?xe.setAll(0):xe.copyFrom(L),B=0;B<q.length;B++){F=Y+B*3,O=ie+B*4,ae=re+B*2;const Z=2*B,I=Z+1;w.copyFrom(q[B]),this._computeParticleColor&&S.color&&Q.copyFrom(S.color),this._computeParticleTexture&&G.copyFromFloats(K[Z],K[I]),this._computeParticleVertex&&this.updateParticleVertex(S,W,B);const Pe=w.x*_e.x-L.x,Ae=w.y*_e.y-L.y,De=w.z*_e.z-L.z;let Ce=Pe*T[0]+Ae*T[3]+De*T[6],z=Pe*T[1]+Ae*T[4]+De*T[7],we=Pe*T[2]+Ae*T[5]+De*T[8];Ce+=xe.x,z+=xe.y,we+=xe.z;const qe=o[F]=ce.x+b.x*Ce+P.x*z+x.x*we,Ze=o[F+1]=ce.y+b.y*Ce+P.y*z+x.y*we,Ie=o[F+2]=ce.z+b.z*Ce+P.z*z+x.z*we;if(this._computeBoundingBox&&(v.minimizeInPlaceFromFloats(qe,Ze,Ie),R.maximizeInPlaceFromFloats(qe,Ze,Ie)),!this._computeParticleVertex){const J=_[F],ze=_[F+1],Ge=_[F+2],Le=J*T[0]+ze*T[3]+Ge*T[6],Ne=J*T[1]+ze*T[4]+Ge*T[7],We=J*T[2]+ze*T[5]+Ge*T[8];h[F]=b.x*Le+P.x*Ne+x.x*We,h[F+1]=b.y*Le+P.y*Ne+x.y*We,h[F+2]=b.z*Le+P.z*Ne+x.z*We}if(this._computeParticleColor&&S.color){const J=this._colors32;J[O]=Q.r,J[O+1]=Q.g,J[O+2]=Q.b,J[O+3]=Q.a}if(this._computeParticleTexture){const J=S.uvs;l[ae]=G.x*(J.z-J.x)+J.x,l[ae+1]=G.y*(J.w-J.y)+J.y}}}else for(S._stillInvisible=!0,B=0;B<q.length;B++){if(F=Y+B*3,O=ie+B*4,ae=re+B*2,o[F]=o[F+1]=o[F+2]=0,h[F]=h[F+1]=h[F+2]=0,this._computeParticleColor&&S.color){const L=S.color;n[O]=L.r,n[O+1]=L.g,n[O+2]=L.b,n[O+3]=L.a}if(this._computeParticleTexture){const L=S.uvs;l[ae]=K[B*2]*(L.z-L.x)+L.x,l[ae+1]=K[B*2+1]*(L.w-L.y)+L.y}}if(this._particlesIntersect){const L=S.getBoundingInfo(),ct=L.boundingBox,xe=L.boundingSphere,Z=S._modelBoundingInfo;if(!this._bSphereOnly){const we=Z.boundingBox.vectors,qe=m[1],Ze=m[2];qe.setAll(Number.MAX_VALUE),Ze.setAll(-Number.MAX_VALUE);for(let Ie=0;Ie<8;Ie++){const J=we[Ie].x*_e.x,ze=we[Ie].y*_e.y,Ge=we[Ie].z*_e.z,Le=J*T[0]+ze*T[3]+Ge*T[6],Ne=J*T[1]+ze*T[4]+Ge*T[7],We=J*T[2]+ze*T[5]+Ge*T[8],yt=V.x+b.x*Le+P.x*Ne+x.x*We,Mt=V.y+b.y*Le+P.y*Ne+x.y*We,St=V.z+b.z*Le+P.z*Ne+x.z*We;qe.minimizeInPlaceFromFloats(yt,Mt,St),Ze.maximizeInPlaceFromFloats(yt,Mt,St)}ct.reConstruct(qe,Ze,r._worldMatrix)}const I=Z.minimum.multiplyToRef(_e,m[1]),Pe=Z.maximum.multiplyToRef(_e,m[2]),Ae=Pe.addToRef(I,m[3]).scaleInPlace(.5).addInPlace(ce),De=Pe.subtractToRef(I,m[4]).scaleInPlace(.5*this._bSphereRadiusFactor),Ce=Ae.subtractToRef(De,m[1]),z=Ae.addToRef(De,m[2]);xe.reConstruct(Ce,z,r._worldMatrix)}Y=F+3,ie=O+4,re=ae+2}if(s){if(this._computeParticleColor){const S=r.getVertexBuffer(E.ColorKind);S&&!r.isPickable?S.updateDirectly(n,0):r.updateVerticesData(E.ColorKind,n,!1,!1)}if(this._computeParticleTexture){const S=r.getVertexBuffer(E.UVKind);S&&!r.isPickable?S.updateDirectly(l,0):r.updateVerticesData(E.UVKind,l,!1,!1)}const ee=r.getVertexBuffer(E.PositionKind);if(ee&&!r.isPickable?ee.updateDirectly(o,0):r.updateVerticesData(E.PositionKind,o,!1,!1),!r.areNormalsFrozen||r.isFacetDataEnabled){if(this._computeParticleVertex||r.isFacetDataEnabled){const S=r.isFacetDataEnabled?r.getFacetDataParameters():null;$e.ComputeNormals(o,u,h,S);for(let q=0;q<h.length;q++)_[q]=h[q]}if(!r.areNormalsFrozen){const S=r.getVertexBuffer(E.NormalKind);S&&!r.isPickable?S.updateDirectly(h,0):r.updateVerticesData(E.NormalKind,h,!1,!1)}}if(f){const S=this.depthSortedParticles;S.sort(this._depthSortFunction);const q=S.length;let K=0,T=0;for(let V=0;V<q;V++){const Be=S[V],_e=Be.indicesLength,ce=Be.ind;for(let L=0;L<_e;L++)if(u[K]=g[ce+L],K++,this._pickable&&L%3==0){const xe=this.pickedParticles[T];xe.idx=Be.idx,xe.faceId=T,T++}}}if(this._autoFixFaceOrientation){let S=0;for(let q=0;q<this.particles.length;q++){const K=f?this.particles[this.depthSortedParticles[q].idx]:this.particles[q];if(K.scale.x*K.scale.y*K.scale.z<0)for(let V=0;V<K._model._indicesLength;V+=3){const Be=g[K._ind+V];u[S+V]=g[K._ind+V+1],u[S+V+1]=Be}S+=K._model._indicesLength}}(f||this._autoFixFaceOrientation)&&r.updateIndices(u)}return this._computeBoundingBox&&(r.hasBoundingInfo?r.getBoundingInfo().reConstruct(v,R,r._worldMatrix):r.buildBoundingInfo(v,R,r._worldMatrix)),this._autoUpdateSubMeshes&&this.computeSubMeshes(),this._recomputeInvisibles=!1,this.afterUpdateParticles(e,t,s),this}dispose(){this.mesh.dispose(),this.vars=null,this._positions=null,this._indices=null,this._normals=null,this._uvs=null,this._colors=null,this._indices32=null,this._positions32=null,this._normals32=null,this._fixedNormal32=null,this._uvs32=null,this._colors32=null,this.pickedParticles=null,this.pickedBySubMesh=null,this._materials=null,this._materialIndexes=null,this._indicesByMaterial=null,this._idxOfId=null}pickedParticle(e){if(e.hit){const t=e.subMeshId,s=e.faceId-this.mesh.subMeshes[t].indexStart/3,i=this.pickedBySubMesh;if(i[t]&&i[t][s])return i[t][s]}return null}getParticleById(e){const t=this.particles[e];if(t&&t.id==e)return t;const s=this.particles,i=this._idxOfId[e];if(i!==void 0)return s[i];let a=0;const r=this.nbParticles;for(;a<r;){const n=s[a];if(n.id==e)return n;a++}return null}getParticlesByShapeId(e){const t=[];return this.getParticlesByShapeIdToRef(e,t),t}getParticlesByShapeIdToRef(e,t){t.length=0;for(let s=0;s<this.nbParticles;s++){const i=this.particles[s];i.shapeId==e&&t.push(i)}return this}computeSubMeshes(){if(!this.mesh||!this._multimaterialEnabled)return this;const e=this.depthSortedParticles;if(this.particles.length>0)for(let r=0;r<this.particles.length;r++){const n=this.particles[r];n.materialIndex||(n.materialIndex=0);const o=e[r];o.materialIndex=n.materialIndex,o.ind=n._ind,o.indicesLength=n._model._indicesLength,o.idx=n.idx}this._sortParticlesByMaterial();const t=this._indicesByMaterial,s=this._materialIndexes,i=this.mesh;i.subMeshes=[];const a=i.getTotalVertices();for(let r=0;r<s.length;r++){const n=t[r],o=t[r+1]-n,h=s[r];new Hs(h,0,a,n,o,i)}return this}_sortParticlesByMaterial(){const e=[0];this._indicesByMaterial=e;const t=[];this._materialIndexes=t;const s=this.depthSortedParticles;s.sort(this._materialSortFunction);const i=s.length,a=this._indices32,r=this._indices;let n=0,o=0,h=0,l=s[0].materialIndex;t.push(l),this._pickable&&(this.pickedBySubMesh=[[]],this.pickedParticles=this.pickedBySubMesh[0]);for(let u=0;u<i;u++){const g=s[u],_=g.indicesLength,f=g.ind;g.materialIndex!==l&&(l=g.materialIndex,e.push(h),t.push(l),this._pickable&&(n++,this.pickedBySubMesh[n]=[],o=0));let m=0;for(let b=0;b<_;b++){if(a[h]=r[f+b],this._pickable&&b%3==0){const x=this.pickedBySubMesh[n][o];x?(x.idx=g.idx,x.faceId=m):this.pickedBySubMesh[n][o]={idx:g.idx,faceId:m},o++,m++}h++}}return e.push(a.length),this._updatable&&this.mesh.updateIndices(a),this}_setMaterialIndexesById(){this._materialIndexesById={};for(let e=0;e<this._materials.length;e++){const t=this._materials[e].uniqueId;this._materialIndexesById[t]=e}}_filterUniqueMaterialId(e){return e.filter(function(s,i,a){return a.indexOf(s)===i})}_setDefaultMaterial(){return this._defaultMaterial||(this._defaultMaterial=new $(this.name+"DefaultMaterial",this._scene)),this._defaultMaterial}refreshVisibleSize(){return this._isVisibilityBoxLocked||this.mesh.refreshBoundingInfo(),this}setVisibilityBox(e){const t=e/2;this.mesh.buildBoundingInfo(new c(-t,-t,-t),new c(t,t,t))}get isAlwaysVisible(){return this._alwaysVisible}set isAlwaysVisible(e){this._alwaysVisible=e,this.mesh.alwaysSelectAsActiveMesh=e}set isVisibilityBoxLocked(e){this._isVisibilityBoxLocked=e;const t=this.mesh.getBoundingInfo();t.isLocked=e}get isVisibilityBoxLocked(){return this._isVisibilityBoxLocked}set computeParticleRotation(e){this._computeParticleRotation=e}set computeParticleColor(e){this._computeParticleColor=e}set computeParticleTexture(e){this._computeParticleTexture=e}set computeParticleVertex(e){this._computeParticleVertex=e}set computeBoundingBox(e){this._computeBoundingBox=e}set depthSortParticles(e){this._depthSortParticles=e}get computeParticleRotation(){return this._computeParticleRotation}get computeParticleColor(){return this._computeParticleColor}get computeParticleTexture(){return this._computeParticleTexture}get computeParticleVertex(){return this._computeParticleVertex}get computeBoundingBox(){return this._computeBoundingBox}get depthSortParticles(){return this._depthSortParticles}get expandable(){return this._expandable}get multimaterialEnabled(){return this._multimaterialEnabled}get useModelMaterial(){return this._useModelMaterial}get materials(){return this._materials}setMultiMaterial(e){this._materials=this._filterUniqueMaterialId(e),this._setMaterialIndexesById(),this._multimaterial&&this._multimaterial.dispose(),this._multimaterial=new mt(this.name+"MultiMaterial",this._scene);for(let t=0;t<this._materials.length;t++)this._multimaterial.subMaterials.push(this._materials[t]);this.computeSubMeshes(),this.mesh.material=this._multimaterial}get multimaterial(){return this._multimaterial}set multimaterial(e){this._multimaterial=e}get autoUpdateSubMeshes(){return this._autoUpdateSubMeshes}set autoUpdateSubMeshes(e){this._autoUpdateSubMeshes=e}initParticles(){}recycleParticle(e){return e}updateParticle(e){return e}updateParticleVertex(e,t,s){return this}beforeUpdateParticles(e,t,s){}afterUpdateParticles(e,t,s){}}class xt{get disablePreStep(){return this._prestepType==Ue.DISABLED}set disablePreStep(e){this._prestepType=e?Ue.DISABLED:Ue.TELEPORT}constructor(e,t,s,i){if(this._pluginData=void 0,this._pluginDataInstances=[],this._collisionCBEnabled=!1,this._collisionEndedCBEnabled=!1,this.disableSync=!1,this._isDisposed=!1,this._shape=null,this._prestepType=Ue.DISABLED,!i)return;const a=i.getPhysicsEngine();if(!a)throw new Error("No Physics Engine available.");if(this._physicsEngine=a,a.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const r=a.getPhysicsPlugin();if(!r)throw new Error("No Physics Plugin available.");this._physicsPlugin=r,e.rotationQuaternion||(e.rotationQuaternion=y.FromEulerAngles(e.rotation.x,e.rotation.y,e.rotation.z)),this.startAsleep=s,this._motionType=t,this.disableSync=t==0;const n=e;n.hasThinInstances?this._physicsPlugin.initBodyInstances(this,t,n):(e.parent&&e.computeWorldMatrix(!0),this._physicsPlugin.initBody(this,t,e.absolutePosition,e.absoluteRotationQuaternion)),this.transformNode=e,e.physicsBody=this,a.addBody(this),this._nodeDisposeObserver=e.onDisposeObservable.add(()=>{this.dispose()})}getClassName(){return"PhysicsBody"}clone(e){const t=new xt(e,this.getMotionType(),this.startAsleep,this.transformNode.getScene());return t.shape=this.shape,t.setMassProperties(this.getMassProperties()),t.setLinearDamping(this.getLinearDamping()),t.setAngularDamping(this.getAngularDamping()),t}updateBodyInstances(){const e=this.transformNode;e.hasThinInstances&&this._physicsPlugin.updateBodyInstances(this,e)}get numInstances(){return this._pluginDataInstances.length}get motionType(){return this._motionType}set shape(e){this._shape=e,e&&this._physicsPlugin.setShape(this,e)}get shape(){return this._shape}getBoundingBox(){return this._physicsPlugin.getBodyBoundingBox(this)}setEventMask(e,t){this._physicsPlugin.setEventMask(this,e,t)}getEventMask(e){return this._physicsPlugin.getEventMask(this,e)}setMotionType(e,t){this.disableSync=e==0,this._physicsPlugin.setMotionType(this,e,t)}getMotionType(e){return this._physicsPlugin.getMotionType(this,e)}setPrestepType(e){this._prestepType=e}getPrestepType(){return this._prestepType}computeMassProperties(e){return this._physicsPlugin.computeMassProperties(this,e)}setMassProperties(e,t){this._physicsPlugin.setMassProperties(this,e,t)}getMassProperties(e){return this._physicsPlugin.getMassProperties(this,e)}setLinearDamping(e,t){this._physicsPlugin.setLinearDamping(this,e,t)}getLinearDamping(e){return this._physicsPlugin.getLinearDamping(this,e)}setAngularDamping(e,t){this._physicsPlugin.setAngularDamping(this,e,t)}getAngularDamping(e){return this._physicsPlugin.getAngularDamping(this,e)}setLinearVelocity(e,t){this._physicsPlugin.setLinearVelocity(this,e,t)}getLinearVelocityToRef(e,t){this._physicsPlugin.getLinearVelocityToRef(this,e,t)}getLinearVelocity(e){const t=new c;return this.getLinearVelocityToRef(t,e),t}setAngularVelocity(e,t){this._physicsPlugin.setAngularVelocity(this,e,t)}getAngularVelocityToRef(e,t){this._physicsPlugin.getAngularVelocityToRef(this,e,t)}getAngularVelocity(e){const t=new c;return this.getAngularVelocityToRef(t,e),t}applyImpulse(e,t,s){this._physicsPlugin.applyImpulse(this,e,t,s)}applyAngularImpulse(e,t){this._physicsPlugin.applyAngularImpulse(this,e,t)}applyForce(e,t,s){this._physicsPlugin.applyForce(this,e,t,s)}getGeometry(){return this._physicsPlugin.getBodyGeometry(this)}getCollisionObservable(){return this._physicsPlugin.getCollisionObservable(this)}getCollisionEndedObservable(){return this._physicsPlugin.getCollisionEndedObservable(this)}setCollisionCallbackEnabled(e){this._collisionCBEnabled=e,this._physicsPlugin.setCollisionCallbackEnabled(this,e)}setCollisionEndedCallbackEnabled(e){this._collisionEndedCBEnabled=e,this._physicsPlugin.setCollisionEndedCallbackEnabled(this,e)}getObjectCenterWorld(e){const t=new c;return this.getObjectCenterWorldToRef(t,e)}getObjectCenterWorldToRef(e,t){var s;if(((s=this._pluginDataInstances)==null?void 0:s.length)>0){const i=t||0,a=this.transformNode._thinInstanceDataStorage.matrixData;a&&e.set(a[i*16+12],a[i*16+13],a[i*16+14])}else e.copyFrom(this.transformNode.position);return e}addConstraint(e,t,s,i){this._physicsPlugin.addConstraint(this,e,t,s,i)}syncWithBone(e,t,s,i,a,r){const n=this.transformNode;if(n.rotationQuaternion)if(a){const l=d.Quaternion[0];e.getRotationQuaternionToRef(1,t,l),l.multiplyToRef(a,n.rotationQuaternion)}else e.getRotationQuaternionToRef(1,t,n.rotationQuaternion);const o=d.Vector3[0],h=d.Vector3[1];r||(r=d.Vector3[2],r.x=0,r.y=1,r.z=0),e.getDirectionToRef(r,t,h),e.getAbsolutePositionToRef(t,o),i==null&&s&&(i=s.length()),i!=null&&(o.x+=h.x*i,o.y+=h.y*i,o.z+=h.z*i),n.setAbsolutePosition(o)}iterateOverAllInstances(e){var t;if(((t=this._pluginDataInstances)==null?void 0:t.length)>0)for(let s=0;s<this._pluginDataInstances.length;s++)e(this,s);else e(this,void 0)}setGravityFactor(e,t){this._physicsPlugin.setGravityFactor(this,e,t)}getGravityFactor(e){return this._physicsPlugin.getGravityFactor(this,e)}setTargetTransform(e,t,s){this._physicsPlugin.setTargetTransform(this,e,t,s)}get isDisposed(){return this._isDisposed}dispose(){this._isDisposed||(this._collisionCBEnabled&&this.setCollisionCallbackEnabled(!1),this._collisionEndedCBEnabled&&this.setCollisionEndedCallbackEnabled(!1),this._nodeDisposeObserver&&(this.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this._physicsEngine.removeBody(this),this._physicsPlugin.removeBody(this),this._physicsPlugin.disposeBody(this),this.transformNode.physicsBody=null,this._pluginData=null,this._pluginDataInstances.length=0,this._isDisposed=!0,this.shape=null)}}class be{constructor(e,t){if(this._pluginData=void 0,this._isTrigger=!1,this._isDisposed=!1,!t)return;const s=t.getPhysicsEngine();if(!s)throw new Error("No Physics Engine available.");if(s.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const i=s.getPhysicsPlugin();if(!i)throw new Error("No Physics Plugin available.");if(this._physicsPlugin=i,e.pluginData!==void 0&&e.pluginData!==null)this._pluginData=e.pluginData,this._type=this._physicsPlugin.getShapeType(this);else if(e.type!==void 0&&e.type!==null){this._type=e.type;const a=e.parameters??{};this._physicsPlugin.initShape(this,e.type,a)}}getClassName(){return"PhysicsShape"}get type(){return this._type}set filterMembershipMask(e){this._physicsPlugin.setShapeFilterMembershipMask(this,e)}get filterMembershipMask(){return this._physicsPlugin.getShapeFilterMembershipMask(this)}set filterCollideMask(e){this._physicsPlugin.setShapeFilterCollideMask(this,e)}get filterCollideMask(){return this._physicsPlugin.getShapeFilterCollideMask(this)}set material(e){this._physicsPlugin.setMaterial(this,e),this._material=e}get material(){return this._material||(this._material=this._physicsPlugin.getMaterial(this)),this._material}set density(e){this._physicsPlugin.setDensity(this,e)}get density(){return this._physicsPlugin.getDensity(this)}addChildFromParent(e,t,s){const i=s.computeWorldMatrix(!0),a=e.computeWorldMatrix(!0),r=d.Matrix[0];i.multiplyToRef(C.Invert(a),r);const n=d.Vector3[0],o=d.Quaternion[0],h=d.Vector3[1];r.decompose(h,o,n),this._physicsPlugin.addChild(this,t,n,o,h)}addChild(e,t,s,i){this._physicsPlugin.addChild(this,e,t,s,i)}removeChild(e){this._physicsPlugin.removeChild(this,e)}getNumChildren(){return this._physicsPlugin.getNumChildren(this)}getBoundingBox(){return this._physicsPlugin.getBoundingBox(this)}set isTrigger(e){this._isTrigger!==e&&(this._isTrigger=e,this._physicsPlugin.setTrigger(this,e))}get isTrigger(){return this._isTrigger}dispose(){this._isDisposed||(this._physicsPlugin.disposeShape(this),this._isDisposed=!0)}}class $t extends be{constructor(e,t,s){super({type:0,parameters:{center:e,radius:t}},s)}static FromMesh(e){const t=e.getBoundingInfo(),s=t.boundingSphere.center,i=t.boundingBox.extendSize,a=Math.max(i.x,i.y,i.z);return new $t(s,a,e.getScene())}}class es extends be{constructor(e,t,s,i){super({type:1,parameters:{pointA:e,pointB:t,radius:s}},i)}static FromMesh(e){const t=e.getBoundingInfo(),s=t.boundingBox.extendSize.x,i=new c(0,t.boundingBox.extendSize.y-s,0),a=t.boundingBox.center.add(i),r=t.boundingBox.center.subtract(i);return new es(a,r,s,e.getScene())}}class ts extends be{constructor(e,t,s,i){super({type:2,parameters:{pointA:e,pointB:t,radius:s}},i)}static FromMesh(e){const t=e.getBoundingInfo(),s=t.boundingBox.extendSize.x,i=new c(0,t.boundingBox.extendSize.y,0),a=t.boundingBox.center.add(i),r=t.boundingBox.center.subtract(i);return new ts(a,r,s,e.getScene())}}class ss extends be{constructor(e,t,s,i){super({type:3,parameters:{center:e,rotation:t,extents:s}},i)}static FromMesh(e){const t=e.getBoundingInfo(),s=t.boundingBox.center,i=t.boundingBox.extendSize.scale(2);return new ss(s,y.Identity(),i,e.getScene())}}class fa extends be{constructor(e,t){super({type:4,parameters:{mesh:e}},t)}}class ba extends be{constructor(e,t){super({type:6,parameters:{mesh:e}},t)}}class xa extends be{constructor(e){super({type:5,parameters:{}},e)}}class Pa extends be{constructor(e,t,s,i,a,r){super({type:7,parameters:{heightFieldSizeX:e,heightFieldSizeZ:t,numHeightFieldSamplesX:s,numHeightFieldSamplesZ:i,heightFieldData:a}},r)}}class ya extends be{constructor(e,t){super({type:7,parameters:{groundMesh:e}},t)}}class Ve{constructor(e,t,s){if(this._pluginData=void 0,!s)throw new Error("Missing scene parameter for constraint constructor.");const i=s.getPhysicsEngine();if(!i)throw new Error("No Physics Engine available.");if(i.getPluginVersion()!=2)throw new Error("Plugin version is incorrect. Expected version 2.");const a=i.getPhysicsPlugin();if(!a)throw new Error("No Physics Plugin available.");this._physicsPlugin=a,this._options=t,this._type=e}get type(){return this._type}get options(){return this._options}set isEnabled(e){this._physicsPlugin.setEnabled(this,e)}get isEnabled(){return this._physicsPlugin.getEnabled(this)}set isCollisionsEnabled(e){this._physicsPlugin.setCollisionsEnabled(this,e)}get isCollisionsEnabled(){return this._physicsPlugin.getCollisionsEnabled(this)}getBodiesUsingConstraint(){return this._physicsPlugin.getBodiesUsingConstraint(this)}dispose(){this._physicsPlugin.disposeConstraint(this)}}class Ma{}class vi extends Ve{constructor(e,t,s){super(7,e,s),this.limits=t}setAxisFriction(e,t){this._physicsPlugin.setAxisFriction(this,e,t)}getAxisFriction(e){return this._physicsPlugin.getAxisFriction(this,e)}setAxisMode(e,t){this._physicsPlugin.setAxisMode(this,e,t)}getAxisMode(e){return this._physicsPlugin.getAxisMode(this,e)}setAxisMinLimit(e,t){this._physicsPlugin.setAxisMinLimit(this,e,t)}getAxisMinLimit(e){return this._physicsPlugin.getAxisMinLimit(this,e)}setAxisMaxLimit(e,t){this._physicsPlugin.setAxisMaxLimit(this,e,t)}getAxisMaxLimit(e){return this._physicsPlugin.getAxisMaxLimit(this,e)}setAxisMotorType(e,t){this._physicsPlugin.setAxisMotorType(this,e,t)}getAxisMotorType(e){return this._physicsPlugin.getAxisMotorType(this,e)}setAxisMotorTarget(e,t){this._physicsPlugin.setAxisMotorTarget(this,e,t)}getAxisMotorTarget(e){return this._physicsPlugin.getAxisMotorTarget(this,e)}setAxisMotorMaxForce(e,t){this._physicsPlugin.setAxisMotorMaxForce(this,e,t)}getAxisMotorMaxForce(e){return this._physicsPlugin.getAxisMotorMaxForce(this,e)}}class Sa extends Ve{constructor(e,t,s,i,a){super(1,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Ta extends Ve{constructor(e,t){super(2,{maxDistance:e},t)}}class va extends Ve{constructor(e,t,s,i,a){super(3,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Ra extends Ve{constructor(e,t,s,i,a){super(4,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Ba extends Ve{constructor(e,t,s,i,a){super(5,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Aa extends Ve{constructor(e,t,s,i,a){super(6,{pivotA:e,pivotB:t,axisA:s,axisB:i},a)}}class Da extends vi{constructor(e,t,s,i,a,r,n,o,h){super({pivotA:e,pivotB:t,axisA:s,axisB:i},[{axis:6,minLimit:a,maxLimit:r,stiffness:n,damping:o}],h)}}class Ri{constructor(e,t,s={mass:0},i){if(this.transformNode=e,this.type=t,this._options=s,this._scene=i,this._disposeShapeWhenDisposed=!0,!this.transformNode){D.Error("No object was provided. A physics object is obligatory");return}const a=e;if(this.transformNode.parent&&this._options.mass!==0&&a.hasThinInstances&&D.Warn("A physics body has been created for an object which has a parent and thin instances. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&e.getScene&&(this._scene=e.getScene()),!this._scene)return;this._options.mass=s.mass===void 0?0:s.mass,this._options.friction=s.friction===void 0?.2:s.friction,this._options.restitution=s.restitution===void 0?.2:s.restitution;const r=this._options.mass===0?0:2,n=this._options.startAsleep??!1;this.body=new xt(e,r,n,this._scene),this._addSizeOptions(),t.getClassName&&t.getClassName()==="PhysicsShape"?(this.shape=t,this._disposeShapeWhenDisposed=!1):this.shape=new be({type:t,parameters:this._options},this._scene),this._options.isTriggerShape&&(this.shape.isTrigger=!0),this.material={friction:this._options.friction,restitution:this._options.restitution},this.body.shape=this.shape,this.shape.material=this.material,this.body.setMassProperties({mass:this._options.mass}),this._nodeDisposeObserver=this.transformNode.onDisposeObservable.add(()=>{this.dispose()})}_getObjectBoundingBox(){return this.transformNode.getRawBoundingInfo?this.transformNode.getRawBoundingInfo().boundingBox:new ft(new c(-.5,-.5,-.5),new c(.5,.5,.5))}_hasVertices(e){return(e==null?void 0:e.getTotalVertices())>0}_addSizeOptions(){this.transformNode.computeWorldMatrix(!0);const e=this._getObjectBoundingBox(),t=d.Vector3[0];t.copyFrom(e.extendSize),t.scaleInPlace(2),t.multiplyInPlace(this.transformNode.absoluteScaling),t.x=Math.abs(t.x),t.y=Math.abs(t.y),t.z=Math.abs(t.z);const s=d.Vector3[1];if(s.copyFrom(e.minimum),s.multiplyInPlace(this.transformNode.absoluteScaling),!this._options.center){const i=new c;i.copyFrom(e.center),i.multiplyInPlace(this.transformNode.absoluteScaling),this._options.center=i}switch(this.type){case 0:!this._options.radius&&Ct(t.x,t.y,1e-4)&&Ct(t.x,t.z,1e-4)?this._options.radius=t.x/2:this._options.radius||(D.Warn("Non uniform scaling is unsupported for sphere shapes. Setting the radius to the biggest bounding box extent."),this._options.radius=Math.max(t.x,t.y,t.z)/2);break;case 1:{const i=t.x/2;this._options.radius=this._options.radius??i,this._options.pointA=this._options.pointA??new c(0,s.y+i,0),this._options.pointB=this._options.pointB??new c(0,s.y+t.y-i,0)}break;case 2:{const i=t.x/2;this._options.radius=this._options.radius??i,this._options.pointA=this._options.pointA??new c(0,s.y,0),this._options.pointB=this._options.pointB??new c(0,s.y+t.y,0)}break;case 6:case 4:case 7:if(!this._options.mesh&&this._hasVertices(this.transformNode))this._options.mesh=this.transformNode;else if(!this._options.mesh||!this._hasVertices(this._options.mesh))throw new Error("No valid mesh was provided for mesh or convex hull shape parameter. Please provide a mesh with valid geometry (number of vertices greater than 0).");break;case 3:this._options.extents=this._options.extents??new c(t.x,t.y,t.z),this._options.rotation=this._options.rotation??y.Identity();break}}dispose(){this._nodeDisposeObserver&&(this.body.transformNode.onDisposeObservable.remove(this._nodeDisposeObserver),this._nodeDisposeObserver=null),this.body.dispose(),this._disposeShapeWhenDisposed&&this.shape.dispose()}}class Ca{}class wa{constructor(e,t,s){this._boxConfigs=new Array,this._joints=new Array,this._bones=new Array,this._initialRotation=new Array,this._initialRotation2=new Array,this._boneNames=[],this._transforms=new Array,this._aggregates=new Array,this._ragdollMode=!1,this._rootBoneName="",this._rootBoneIndex=-1,this._mass=10,this._restitution=0,this.pauseSync=!1,this._defaultJoint=3,this._defaultJointMin=-90,this._defaultJointMax=90,this._skeleton=e,this._scene=e.getScene(),this._rootTransformNode=t,this._config=s,this._boxConfigs=[],this._putBoxesInBoneCenter=!1,this._defaultJoint=3,this._init()}getAggregate(e){return e<0||e>=this._aggregates.length?this._aggregates[this._rootBoneIndex]:this._aggregates[e]}_createColliders(){this._rootTransformNode.computeWorldMatrix(),this._skeleton.computeAbsoluteMatrices(!0),this._skeleton.prepare(!0);const e=this._config;for(let t=0;t<e.length;t++){const s=e[t].bone!==void 0?[e[t].bone]:e[t].bones;for(let i=0;i<s.length;i++){const a=this._skeleton.bones[this._skeleton.getBoneIndexByName(s[i])];if(a==null)return;const r={width:this._config[t].width,depth:this._config[t].depth,height:this._config[t].height,size:this._config[t].size};r.width=r.width??r.size,r.depth=r.depth??r.size,r.height=r.height??r.size;const n=new X(s[i]+"_transform",this._scene);r.joint=e[t].joint!==void 0?e[t].joint:this._defaultJoint,r.rotationAxis=e[t].rotationAxis!==void 0?e[t].rotationAxis:Je.X,r.min=e[t].min!==void 0?e[t].min:this._defaultJointMin,r.max=e[t].max!==void 0?e[t].max:this._defaultJointMax;let o=0;e[t].putBoxInBoneCenter!==void 0&&e[t].putBoxInBoneCenter||this._putBoxesInBoneCenter?(a.length===void 0&&D.Log("The length property is not defined for bone "+a.name),o=a.length/2):e[t].boxOffset!==void 0&&(o=e[t].boxOffset),r.boxOffset=o;const h=e[t].boneOffsetAxis!==void 0?e[t].boneOffsetAxis:Je.Y,l=a.getDirection(h,this._rootTransformNode);r.boneOffsetAxis=h,n.position=a.getAbsolutePosition(this._rootTransformNode).add(l.scale(o));const u=e[t].mass!==void 0?e[t].mass:this._mass,g=e[t].restitution!==void 0?e[t].restitution:this._restitution,_=new Ri(n,3,{mass:u,restitution:g,friction:.6,extents:new c(r.width,r.height,r.depth)},this._scene);_.body.setCollisionCallbackEnabled(!0),_.body.disablePreStep=!1,_.body.setMotionType(1),this._aggregates.push(_),this._bones.push(a),this._boneNames.push(a.name),this._transforms.push(n),this._boxConfigs.push(r),this._initialRotation.push(a.getRotationQuaternion(1,this._rootTransformNode)),this._initialRotation2.push(a.getRotationQuaternion(1))}}}_initJoints(){this._rootTransformNode.computeWorldMatrix();for(let e=0;e<this._bones.length;e++){if(e==this._rootBoneIndex)continue;const t=this._findNearestParent(e);if(t==null){D.Warn("Couldn't find a nearest parent bone in the configs for bone called "+this._boneNames[e]);return}const s=this._boneNames.indexOf(t.name);let i=this._bones[e].getAbsolutePosition(this._rootTransformNode).subtract(this._transforms[s].position);const a=this._transforms[s].computeWorldMatrix(),r=C.Invert(a);i=c.TransformCoordinates(this._bones[e].getAbsolutePosition(this._rootTransformNode),r);const n=this._bones[e].getAbsolutePosition(this._rootTransformNode),o=this._transforms[e].position.clone(),h=n.subtract(o),l=new Ve(1,{pivotA:i,pivotB:h,axisA:this._boxConfigs[e].rotationAxis,axisB:this._boxConfigs[e].rotationAxis,collision:!1},this._scene);this._aggregates[s].body.addConstraint(this._aggregates[e].body,l),l.isEnabled=!1,this._joints.push(l)}}_syncBonesToPhysics(){const e=this._rootTransformNode.getWorldMatrix();for(let t=0;t<this._bones.length;t++){const s=this._aggregates[t].transformNode,i=this._bones[t].getAbsolutePosition();c.TransformCoordinatesToRef(i,e,s.position),this._bones[t].getDirectionToRef(this._boxConfigs[t].boneOffsetAxis,this._rootTransformNode,d.Vector3[0]),d.Vector3[0].scaleInPlace(this._boxConfigs[t].boxOffset??0),s.position.addInPlace(d.Vector3[0]),this._setBoneOrientationToBody(t)}}_setBoneOrientationToBody(e){const t=this._aggregates[e].transformNode,s=this._bones[e];this._initialRotation[e].conjugateToRef(d.Quaternion[0]),s.getRotationQuaternionToRef(1,this._rootTransformNode,d.Quaternion[1]),d.Quaternion[1].multiplyToRef(d.Quaternion[0],t.rotationQuaternion),t.rotationQuaternion.normalize()}_syncBonesAndBoxes(){if(!this.pauseSync)if(this._ragdollMode){this._setBodyOrientationToBone(this._rootBoneIndex);const e=this._aggregates[this._rootBoneIndex].body.transformNode.position;this._rootTransformNode.getWorldMatrix().invertToRef(d.Matrix[0]),c.TransformCoordinatesToRef(e,d.Matrix[0],d.Vector3[0]),this._bones[this._rootBoneIndex].setAbsolutePosition(d.Vector3[0]);for(let t=0;t<this._bones.length;t++)t!=this._rootBoneIndex&&this._setBodyOrientationToBone(t)}else this._syncBonesToPhysics()}_setBodyOrientationToBone(e){var a,r;const t=this._rootTransformNode.rotationQuaternion??y.FromEulerAngles(this._rootTransformNode.rotation.x,this._rootTransformNode.rotation.y,this._rootTransformNode.rotation.z),s=this._initialRotation2[e],i=(r=(a=this._aggregates[e].body)==null?void 0:a.transformNode)==null?void 0:r.rotationQuaternion;t.multiplyToRef(s,d.Quaternion[1]),i.multiplyToRef(d.Quaternion[1],d.Quaternion[0]),this._bones[e].setRotationQuaternion(d.Quaternion[0],1,this._rootTransformNode)}_defineRootBone(){const e=this._skeleton.getChildren();return e.length!=1?(D.Log("Ragdoll creation failed: there can only be one root in the skeleton."),!1):(this._rootBoneName=e[0].name,this._rootBoneIndex=this._boneNames.indexOf(this._rootBoneName),this._rootBoneIndex==-1?(D.Log("Ragdoll creation failed: the array boneNames doesn't have the root bone. The root bone is "+this._skeleton.getChildren()),!1):!0)}_findNearestParent(e){let t=this._bones[e].getParent();do{if(t!=null&&this._boneNames.includes(t.name))break;t=t==null?void 0:t.getParent()}while(t!=null);return t}_init(){this._createColliders(),this._defineRootBone()&&(this._initJoints(),this._scene.registerBeforeRender(()=>{this._syncBonesAndBoxes()}),this._syncBonesToPhysics())}ragdoll(){this._ragdollMode=!0,this._skeleton.bones.forEach(e=>{e.linkTransformNode(null)});for(let e=0;e<this._joints.length;e++)this._joints[e].isEnabled=!0;for(let e=0;e<this._aggregates.length;e++)this._aggregates[e].body.setMotionType(2)}dispose(){this._aggregates.forEach(e=>{e.dispose()})}}class Bi{constructor(e,t,s){this._vertices=[],this._indices=[],this._isRightHanded=s.useRightHandedSystem,this._collectIndices=t}addNodeMeshes(e,t){e.computeWorldMatrix(!0);const s=d.Matrix[0];if(C.ScalingToRef(e.absoluteScaling.x,e.absoluteScaling.y,e.absoluteScaling.z,s),e instanceof oe?this._addMesh(e,s):e instanceof wt&&this._addMesh(e.sourceMesh,s),t){const i=d.Matrix[1];e.computeWorldMatrix().invertToRef(i);const a=d.Matrix[2];i.multiplyToRef(s,a),e.getChildMeshes(!1).filter(n=>!n.physicsBody).forEach(n=>{const o=n.computeWorldMatrix(),h=d.Matrix[3];o.multiplyToRef(a,h),n instanceof oe?this._addMesh(n,h):n instanceof wt&&this._addMesh(n.sourceMesh,h)})}}_addMesh(e,t){const s=e.getVerticesData(E.PositionKind)||[],i=s.length/3,a=this._vertices.length;for(let r=0;r<i;r++){const n=new c(s[r*3+0],s[r*3+1],s[r*3+2]);this._vertices.push(c.TransformCoordinates(n,t))}if(this._collectIndices){const r=e.getIndices();if(r)for(let n=0;n<r.length;n+=3)this._isRightHanded?(this._indices.push(r[n+0]+a),this._indices.push(r[n+1]+a),this._indices.push(r[n+2]+a)):(this._indices.push(r[n+2]+a),this._indices.push(r[n+1]+a),this._indices.push(r[n+0]+a))}}getVertices(e){const t=this._vertices.length*3,i=t*4,a=e._malloc(i),r=new Float32Array(e.HEAPU8.buffer,a,t);for(let n=0;n<this._vertices.length;n++)r[n*3+0]=this._vertices[n].x,r[n*3+1]=this._vertices[n].y,r[n*3+2]=this._vertices[n].z;return{offset:a,numObjects:t}}freeBuffer(e,t){e._free(t.offset)}getTriangles(e){const s=this._indices.length*4,i=e._malloc(s),a=new Int32Array(e.HEAPU8.buffer,i,this._indices.length);for(let r=0;r<this._indices.length;r++)a[r]=this._indices[r];return{offset:i,numObjects:this._indices.length}}}class zt{constructor(e){this.hpBodyId=e,this.userMassProps={centerOfMass:void 0,mass:void 0,inertia:void 0,inertiaOrientation:void 0}}}class Gt{constructor(){this.bodyId=BigInt(0),this.position=new c,this.normal=new c}}class Lt{constructor(){this.contactOnA=new Gt,this.contactOnB=new Gt,this.impulseApplied=0,this.type=0}static readToRef(e,t,s){const i=new Int32Array(e,t),a=new Float32Array(e,t),r=2;s.contactOnA.bodyId=BigInt(i[r]),s.contactOnA.position.set(a[r+8],a[r+9],a[r+10]),s.contactOnA.normal.set(a[r+11],a[r+12],a[r+13]);const n=18;s.contactOnB.bodyId=BigInt(i[n]),s.contactOnB.position.set(a[n+8],a[n+9],a[n+10]),s.contactOnB.normal.set(a[n+11],a[n+12],a[n+13]),s.impulseApplied=a[n+13+3],s.type=i[0]}}class Nt{constructor(){this.bodyIdA=BigInt(0),this.bodyIdB=BigInt(0),this.type=0}static readToRef(e,t,s){const i=new Int32Array(e,t);s.type=i[0],s.bodyIdA=BigInt(i[2]),s.bodyIdB=BigInt(i[6])}}class Ia{constructor(e=!0,t=HK){if(this._useDeltaForWorldStep=e,this._hknp={},this.name="HavokPlugin",this._fixedTimeStep=1/60,this._tmpVec3=Us(3,c.Zero),this._bodies=new Map,this._shapes=new Map,this._bodyCollisionObservable=new Map,this._constraintToBodyIdPair=new Map,this._bodyCollisionEndedObservable=new Map,this.onCollisionObservable=new N,this.onCollisionEndedObservable=new N,this.onTriggerCollisionObservable=new N,typeof t=="function"){D.Error("Havok is not ready. Please make sure you await HK() before using the plugin.");return}else this._hknp=t;if(!this.isSupported()){D.Error("Havok is not available. Please make sure you included the js file.");return}this.world=this._hknp.HP_World_Create()[1],this._queryCollector=this._hknp.HP_QueryCollector_Create(1)[1]}isSupported(){return this._hknp!==void 0}setGravity(e){this._hknp.HP_World_SetGravity(this.world,this._bVecToV3(e))}setTimeStep(e){this._fixedTimeStep=e}getTimeStep(){return this._fixedTimeStep}executeStep(e,t){for(const i of t)i.disablePreStep||this.setPhysicsBodyTransformation(i,i.transformNode);const s=this._useDeltaForWorldStep?e:this._fixedTimeStep;this._hknp.HP_World_SetIdealStepTime(this.world,s),this._hknp.HP_World_Step(this.world,s),this._bodyBuffer=this._hknp.HP_World_GetBodyBuffer(this.world)[1];for(const i of t)i.disableSync||this.sync(i);this._notifyCollisions(),this._notifyTriggers()}getPluginVersion(){return 2}setVelocityLimits(e,t){this._hknp.HP_World_SetSpeedLimit(this.world,e,t)}getMaxLinearVelocity(){return this._hknp.HP_World_GetSpeedLimit(this.world)[1]}getMaxAngularVelocity(){return this._hknp.HP_World_GetSpeedLimit(this.world)[2]}initBody(e,t,s,i){e._pluginData=new zt(this._hknp.HP_Body_Create()[1]),this._internalSetMotionType(e._pluginData,t);const a=[this._bVecToV3(s),this._bQuatToV4(i)];this._hknp.HP_Body_SetQTransform(e._pluginData.hpBodyId,a),this._hknp.HP_World_AddBody(this.world,e._pluginData.hpBodyId,e.startAsleep),this._bodies.set(e._pluginData.hpBodyId[0],{body:e,index:0})}removeBody(e){if(e._pluginDataInstances&&e._pluginDataInstances.length>0)for(const t of e._pluginDataInstances)this._bodyCollisionObservable.delete(t.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,t.hpBodyId),this._bodies.delete(t.hpBodyId[0]);e._pluginData&&(this._bodyCollisionObservable.delete(e._pluginData.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,e._pluginData.hpBodyId),this._bodies.delete(e._pluginData.hpBodyId[0]))}initBodyInstances(e,t,s){var r;const i=((r=s._thinInstanceDataStorage)==null?void 0:r.instancesCount)??0,a=s._thinInstanceDataStorage.matrixData;a&&(this._createOrUpdateBodyInstances(e,t,a,0,i,!1),e._pluginDataInstances.forEach((n,o)=>{this._bodies.set(n.hpBodyId[0],{body:e,index:o})}))}_createOrUpdateBodyInstances(e,t,s,i,a,r){const n=d.Quaternion[0],o=C.Identity();for(let h=i;h<a;h++){const l=[s[h*16+12],s[h*16+13],s[h*16+14]];let u;r?u=e._pluginDataInstances[h].hpBodyId:u=this._hknp.HP_Body_Create()[1],o.setRowFromFloats(0,s[h*16+0],s[h*16+1],s[h*16+2],0),o.setRowFromFloats(1,s[h*16+4],s[h*16+5],s[h*16+6],0),o.setRowFromFloats(2,s[h*16+8],s[h*16+9],s[h*16+10],0),y.FromRotationMatrixToRef(o,n);const g=[l,[n.x,n.y,n.z,n.w]];if(this._hknp.HP_Body_SetQTransform(u,g),!r){const _=new zt(u);e._pluginDataInstances.length&&(_.userMassProps=e._pluginDataInstances[0].userMassProps),this._internalSetMotionType(_,t),this._internalUpdateMassProperties(_),e._pluginDataInstances.push(_),this._hknp.HP_World_AddBody(this.world,u,e.startAsleep),_.worldTransformOffset=this._hknp.HP_Body_GetWorldTransformOffset(u)[1]}}}updateBodyInstances(e,t){var n,o;const s=((n=t._thinInstanceDataStorage)==null?void 0:n.instancesCount)??0,i=t._thinInstanceDataStorage.matrixData;if(!i)return;const a=e._pluginDataInstances.length,r=this.getMotionType(e);if(s>a){this._createOrUpdateBodyInstances(e,r,i,a,s,!1);const h=this._hknp.HP_Body_GetShape(e._pluginDataInstances[0].hpBodyId)[1];h[0]||(h[0]=(o=e.shape)==null?void 0:o._pluginData[0]);for(let l=a;l<s;l++)this._hknp.HP_Body_SetShape(e._pluginDataInstances[l].hpBodyId,h),this._internalUpdateMassProperties(e._pluginDataInstances[l]),this._bodies.set(e._pluginDataInstances[l].hpBodyId[0],{body:e,index:l})}else if(s<a){const h=a-s;for(let l=0;l<h;l++){const u=e._pluginDataInstances.pop();this._bodies.delete(u.hpBodyId[0]),this._hknp.HP_World_RemoveBody(this.world,u.hpBodyId),this._hknp.HP_Body_Release(u.hpBodyId)}this._createOrUpdateBodyInstances(e,r,i,0,s,!0)}}sync(e){this.syncTransform(e,e.transformNode)}syncTransform(e,t){var s;if(e._pluginDataInstances.length){const i=t,a=i._thinInstanceDataStorage.matrixData;if(!a)return;const r=e._pluginDataInstances.length;for(let n=0;n<r;n++){const o=e._pluginDataInstances[n].worldTransformOffset,h=new Float32Array(this._hknp.HEAPU8.buffer,this._bodyBuffer+o,16),l=n*16;for(let u=0;u<15;u++)(u&3)!=3&&(a[l+u]=h[u]);a[l+15]=1}i.thinInstanceBufferUpdated("matrix")}else try{const i=this._hknp.HP_Body_GetQTransform(e._pluginData.hpBodyId)[1],a=i[0],r=i[1],n=d.Quaternion[0];n.set(r[0],r[1],r[2],r[3]);const o=t.parent;if(o&&!o.getWorldMatrix().isIdentity()){o.computeWorldMatrix(!0),d.Vector3[1].copyFrom(t.scaling),n.normalize();const h=d.Matrix[0],l=d.Vector3[0];l.copyFromFloats(a[0],a[1],a[2]),C.ComposeToRef(t.absoluteScaling,n,l,h);const u=d.Matrix[1];o.getWorldMatrix().invertToRef(u);const g=d.Matrix[2];h.multiplyToRef(u,g),g.decomposeToTransformNode(t),(s=t.rotationQuaternion)==null||s.normalize(),t.scaling.copyFrom(d.Vector3[1])}else t.position.set(a[0],a[1],a[2]),t.rotationQuaternion?t.rotationQuaternion.copyFrom(n):n.toEulerAnglesToRef(t.rotation)}catch(i){D.Error(`Syncing transform failed for node ${t.name}: ${i.message}...`)}}setShape(e,t){var r,n;const s=t&&t._pluginData?t._pluginData:BigInt(0);if(!(e.transformNode instanceof oe)||!((r=e.transformNode._thinInstanceDataStorage)!=null&&r.matrixData)){this._hknp.HP_Body_SetShape(e._pluginData.hpBodyId,s),this._internalUpdateMassProperties(e._pluginData);return}const a=((n=e.transformNode._thinInstanceDataStorage)==null?void 0:n.instancesCount)??0;for(let o=0;o<a;o++)this._hknp.HP_Body_SetShape(e._pluginDataInstances[o].hpBodyId,s),this._internalUpdateMassProperties(e._pluginDataInstances[o])}_getPluginReference(e,t){var s;return(s=e._pluginDataInstances)!=null&&s.length?e._pluginDataInstances[t??0]:e._pluginData}getShape(e){const t=this._getPluginReference(e),s=this._hknp.HP_Body_GetShape(t.hpBodyId)[1];if(s!=0){const i=e.transformNode.getScene();return new be({pluginData:s},i)}return null}getShapeType(e){return e.type?e.type:this._hknp.HP_Shape_GetType(e._pluginData)}setEventMask(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetEventMask(i.hpBodyId,t)},s)}getEventMask(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetEventMask(s.hpBodyId)[1]}_fromMassPropertiesTuple(e){return{centerOfMass:c.FromArray(e[0]),mass:e[1],inertia:c.FromArray(e[2]),inertiaOrientation:y.FromArray(e[3])}}_internalUpdateMassProperties(e){const t=this._internalComputeMassProperties(e),s=e.userMassProps;s.centerOfMass&&(t[0]=s.centerOfMass.asArray()),s.mass!=null&&(t[1]=s.mass),s.inertia&&(t[2]=s.inertia.asArray()),s.inertiaOrientation&&(t[3]=s.inertiaOrientation.asArray()),this._hknp.HP_Body_SetMassProperties(e.hpBodyId,t)}_internalSetMotionType(e,t){switch(t){case 0:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.STATIC);break;case 1:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.KINEMATIC);break;case 2:this._hknp.HP_Body_SetMotionType(e.hpBodyId,this._hknp.MotionType.DYNAMIC);break}}setMotionType(e,t,s){this._applyToBodyOrInstances(e,i=>{this._internalSetMotionType(i,t)},s)}getMotionType(e,t){const s=this._getPluginReference(e,t),i=this._hknp.HP_Body_GetMotionType(s.hpBodyId)[1];switch(i){case this._hknp.MotionType.STATIC:return 0;case this._hknp.MotionType.KINEMATIC:return 1;case this._hknp.MotionType.DYNAMIC:return 2}throw new Error("Unknown motion type: "+i)}setActivationControl(e,t){switch(t){case 1:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.ALWAYS_ACTIVE);break;case 2:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.ALWAYS_INACTIVE);break;case 0:this._hknp.HP_Body_SetActivationControl(e._pluginData.hpBodyId,this._hknp.ActivationControl.SIMULATION_CONTROLLED);break}}_internalComputeMassProperties(e){const t=this._hknp.HP_Body_GetShape(e.hpBodyId);if(t[0]==this._hknp.Result.RESULT_OK){const s=this._hknp.HP_Shape_BuildMassProperties(t[1]);if(s[0]==this._hknp.Result.RESULT_OK)return s[1]}return[[0,0,0],1,[1,1,1],[0,0,0,1]]}computeMassProperties(e,t){const s=this._getPluginReference(e,t),i=this._internalComputeMassProperties(s);return this._fromMassPropertiesTuple(i)}setMassProperties(e,t,s){this._applyToBodyOrInstances(e,i=>{i.userMassProps=t,this._internalUpdateMassProperties(i)},s)}getMassProperties(e,t){const s=this._getPluginReference(e,t),i=this._hknp.HP_Body_GetMassProperties(s.hpBodyId)[1];return this._fromMassPropertiesTuple(i)}setLinearDamping(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetLinearDamping(i.hpBodyId,t)},s)}getLinearDamping(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetLinearDamping(s.hpBodyId)[1]}setAngularDamping(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetAngularDamping(i.hpBodyId,t)},s)}getAngularDamping(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetAngularDamping(s.hpBodyId)[1]}setLinearVelocity(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetLinearVelocity(i.hpBodyId,this._bVecToV3(t))},s)}getLinearVelocityToRef(e,t,s){const i=this._getPluginReference(e,s),a=this._hknp.HP_Body_GetLinearVelocity(i.hpBodyId)[1];this._v3ToBvecRef(a,t)}_applyToBodyOrInstances(e,t,s){var i;if(((i=e._pluginDataInstances)==null?void 0:i.length)>0&&s===void 0)for(let a=0;a<e._pluginDataInstances.length;a++)t(e._pluginDataInstances[a]);else t(this._getPluginReference(e,s))}applyImpulse(e,t,s,i){this._applyToBodyOrInstances(e,a=>{this._hknp.HP_Body_ApplyImpulse(a.hpBodyId,this._bVecToV3(s),this._bVecToV3(t))},i)}applyAngularImpulse(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_ApplyAngularImpulse(i.hpBodyId,this._bVecToV3(t))},s)}applyForce(e,t,s,i){t.scaleToRef(this.getTimeStep(),this._tmpVec3[0]),this.applyImpulse(e,this._tmpVec3[0],s,i)}setAngularVelocity(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetAngularVelocity(i.hpBodyId,this._bVecToV3(t))},s)}getAngularVelocityToRef(e,t,s){const i=this._getPluginReference(e,s),a=this._hknp.HP_Body_GetAngularVelocity(i.hpBodyId)[1];this._v3ToBvecRef(a,t)}setPhysicsBodyTransformation(e,t){if(e.getPrestepType()==Ue.TELEPORT){const s=e.transformNode;if(e.numInstances>0){const a=s._thinInstanceDataStorage.matrixData;if(!a)return;const r=e.numInstances;this._createOrUpdateBodyInstances(e,e.getMotionType(),a,0,r,!0)}else this._hknp.HP_Body_SetQTransform(e._pluginData.hpBodyId,this._getTransformInfos(t))}else e.getPrestepType()==Ue.ACTION?this.setTargetTransform(e,t.absolutePosition,t.absoluteRotationQuaternion):e.getPrestepType()==Ue.DISABLED?D.Warn("Prestep type is set to DISABLED. Unable to set physics body transformation."):D.Warn("Invalid prestep type set to physics body.")}setTargetTransform(e,t,s,i){this._applyToBodyOrInstances(e,a=>{this._hknp.HP_Body_SetTargetQTransform(a.hpBodyId,[this._bVecToV3(t),this._bQuatToV4(s)])},i)}setGravityFactor(e,t,s){this._applyToBodyOrInstances(e,i=>{this._hknp.HP_Body_SetGravityFactor(i.hpBodyId,t)},s)}getGravityFactor(e,t){const s=this._getPluginReference(e,t);return this._hknp.HP_Body_GetGravityFactor(s.hpBodyId)[1]}disposeBody(e){if(e._pluginDataInstances&&e._pluginDataInstances.length>0)for(const t of e._pluginDataInstances)this._hknp.HP_Body_Release(t.hpBodyId),t.hpBodyId=void 0;e._pluginData&&(this._hknp.HP_Body_Release(e._pluginData.hpBodyId),e._pluginData.hpBodyId=void 0)}_createOptionsFromGroundMesh(e){const t=e.groundMesh;if(!t)return;let s=t.getVerticesData(E.PositionKind);const i=t.computeWorldMatrix(!0),a=[];let r;for(r=0;r<s.length;r+=3)c.FromArrayToRef(s,r,d.Vector3[0]),c.TransformCoordinatesToRef(d.Vector3[0],i,d.Vector3[1]),d.Vector3[1].toArray(a,r);s=a;const n=~~(Math.sqrt(s.length/3)-1),o=t.getBoundingInfo(),h=Math.min(o.boundingBox.extendSizeWorld.x,o.boundingBox.extendSizeWorld.z),l=o.boundingBox.minimumWorld.x,u=o.boundingBox.minimumWorld.y,g=o.boundingBox.minimumWorld.z,_=new Float32Array((n+1)*(n+1)),f=h*2/n;for(let m=0;m<_.length;m++)_[m]=u;for(let m=0;m<s.length;m=m+3){const b=Math.round((s[m+0]-l)/f),P=n-Math.round((s[m+2]-g)/f),x=s[m+1]-u;_[P*(n+1)+b]=x}e.numHeightFieldSamplesX=n+1,e.numHeightFieldSamplesZ=n+1,e.heightFieldSizeX=o.boundingBox.extendSizeWorld.x*2,e.heightFieldSizeZ=o.boundingBox.extendSizeWorld.z*2,e.heightFieldData=_}initShape(e,t,s){switch(t){case 0:{const i=s.radius||1,a=s.center?this._bVecToV3(s.center):[0,0,0];e._pluginData=this._hknp.HP_Shape_CreateSphere(a,i)[1]}break;case 3:{const i=s.rotation?this._bQuatToV4(s.rotation):[0,0,0,1],a=s.extents?this._bVecToV3(s.extents):[1,1,1],r=s.center?this._bVecToV3(s.center):[0,0,0];e._pluginData=this._hknp.HP_Shape_CreateBox(r,i,a)[1]}break;case 1:{const i=s.pointA?this._bVecToV3(s.pointA):[0,0,0],a=s.pointB?this._bVecToV3(s.pointB):[0,1,0],r=s.radius||0;e._pluginData=this._hknp.HP_Shape_CreateCapsule(i,a,r)[1]}break;case 5:e._pluginData=this._hknp.HP_Shape_CreateContainer()[1];break;case 2:{const i=s.pointA?this._bVecToV3(s.pointA):[0,0,0],a=s.pointB?this._bVecToV3(s.pointB):[0,1,0],r=s.radius||0;e._pluginData=this._hknp.HP_Shape_CreateCylinder(i,a,r)[1]}break;case 4:case 6:{const i=s.mesh;if(i){const a=!!s.includeChildMeshes,r=t!=4,n=new Bi(i,r,i==null?void 0:i.getScene());n.addNodeMeshes(i,a);const o=n.getVertices(this._hknp),h=o.numObjects/3;if(t==4)e._pluginData=this._hknp.HP_Shape_CreateConvexHull(o.offset,h)[1];else{const l=n.getTriangles(this._hknp),u=l.numObjects/3;e._pluginData=this._hknp.HP_Shape_CreateMesh(o.offset,h,l.offset,u)[1],n.freeBuffer(this._hknp,l)}n.freeBuffer(this._hknp,o)}else throw new Error("No mesh provided to create physics shape.")}break;case 7:if(s.groundMesh&&this._createOptionsFromGroundMesh(s),s.numHeightFieldSamplesX&&s.numHeightFieldSamplesZ&&s.heightFieldSizeX&&s.heightFieldSizeZ&&s.heightFieldData){const i=s.numHeightFieldSamplesX*s.numHeightFieldSamplesZ,a=i*4,r=this._hknp._malloc(a),n=new Float32Array(this._hknp.HEAPU8.buffer,r,i);for(let l=0;l<s.numHeightFieldSamplesX;l++)for(let u=0;u<s.numHeightFieldSamplesZ;u++){const g=u*s.numHeightFieldSamplesX+l,_=(s.numHeightFieldSamplesX-1-l)*s.numHeightFieldSamplesZ+u;n[g]=s.heightFieldData[_]}const o=s.heightFieldSizeX/(s.numHeightFieldSamplesX-1),h=s.heightFieldSizeZ/(s.numHeightFieldSamplesZ-1);e._pluginData=this._hknp.HP_Shape_CreateHeightField(s.numHeightFieldSamplesX,s.numHeightFieldSamplesZ,[o,1,h],r)[1],this._hknp._free(r)}else throw new Error("Missing required heightfield parameters");break;default:throw new Error("Unsupported Shape Type.")}this._shapes.set(e._pluginData[0],e)}setShapeFilterMembershipMask(e,t){const s=this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][1];this._hknp.HP_Shape_SetFilterInfo(e._pluginData,[t,s])}getShapeFilterMembershipMask(e){return this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][0]}setShapeFilterCollideMask(e,t){const s=this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][0];this._hknp.HP_Shape_SetFilterInfo(e._pluginData,[s,t])}getShapeFilterCollideMask(e){return this._hknp.HP_Shape_GetFilterInfo(e._pluginData)[1][1]}setMaterial(e,t){const s=t.friction??.5,i=t.staticFriction??s,a=t.restitution??0,r=t.frictionCombine??1,n=t.restitutionCombine??2,o=[i,s,a,this._materialCombineToNative(r),this._materialCombineToNative(n)];this._hknp.HP_Shape_SetMaterial(e._pluginData,o)}getMaterial(e){const t=this._hknp.HP_Shape_GetMaterial(e._pluginData)[1];return{staticFriction:t[0],friction:t[1],restitution:t[2],frictionCombine:this._nativeToMaterialCombine(t[3]),restitutionCombine:this._nativeToMaterialCombine(t[4])}}setDensity(e,t){this._hknp.HP_Shape_SetDensity(e._pluginData,t)}getDensity(e){return this._hknp.HP_Shape_GetDensity(e._pluginData)[1]}_getTransformInfos(e){if(e.parent)return e.computeWorldMatrix(!0),[this._bVecToV3(e.absolutePosition),this._bQuatToV4(e.absoluteRotationQuaternion)];let t=d.Quaternion[0];if(e.rotationQuaternion)t=e.rotationQuaternion;else{const i=e.rotation;y.FromEulerAnglesToRef(i.x,i.y,i.z,t)}return[this._bVecToV3(e.position),this._bQuatToV4(t)]}addChild(e,t,s,i,a){const r=[s?this._bVecToV3(s):[0,0,0],i?this._bQuatToV4(i):[0,0,0,1],a?this._bVecToV3(a):[1,1,1]];this._hknp.HP_Shape_AddChild(e._pluginData,t._pluginData,r)}removeChild(e,t){this._hknp.HP_Shape_RemoveChild(e._pluginData,t)}getNumChildren(e){return this._hknp.HP_Shape_GetNumChildren(e._pluginData)[1]}setTrigger(e,t){this._hknp.HP_Shape_SetTrigger(e._pluginData,t)}getBoundingBox(e){const t=this._hknp.HP_Shape_GetBoundingBox(e._pluginData,[[0,0,0],[0,0,0,1]])[1];return d.Vector3[0].set(t[0][0],t[0][1],t[0][2]),d.Vector3[1].set(t[1][0],t[1][1],t[1][2]),new ft(d.Vector3[0],d.Vector3[1],C.IdentityReadOnly)}getBodyBoundingBox(e){const t=this.getBoundingBox(e.shape);return new ft(t.minimum,t.maximum,e.transformNode.getWorldMatrix())}getBodyGeometry(e){var l;const t=((l=e._pluginDataInstances)==null?void 0:l.length)>0?e._pluginDataInstances[0]:e._pluginData,s=this._hknp.HP_Body_GetShape(t.hpBodyId)[1],i=this._hknp.HP_Shape_CreateDebugDisplayGeometry(s);if(i[0]!=this._hknp.Result.RESULT_OK)return{positions:[],indices:[]};const a=this._hknp.HP_DebugGeometry_GetInfo(i[1])[1],r=new Float32Array(this._hknp.HEAPU8.buffer,a[0],a[1]*3),n=new Uint32Array(this._hknp.HEAPU8.buffer,a[2],a[3]*3),o=r.slice(0),h=n.slice(0);return this._hknp.HP_DebugGeometry_Release(i[1]),{positions:o,indices:h}}disposeShape(e){this._hknp.HP_Shape_Release(e._pluginData),e._pluginData=void 0}initConstraint(e,t,s,i,a){const r=e.type,n=e.options;if(!r||!n){D.Warn("No constraint type or options. Constraint is invalid.");return}if(t._pluginDataInstances.length>0&&i===void 0||s._pluginDataInstances.length>0&&a===void 0){D.Warn("Body is instanced but no instance index was specified. Constraint will not be applied.");return}e._pluginData=e._pluginData??[];const o=this._hknp.HP_Constraint_Create()[1];e._pluginData.push(o);const h=this._getPluginReference(t,i).hpBodyId,l=this._getPluginReference(s,a).hpBodyId;this._hknp.HP_Constraint_SetParentBody(o,h),this._hknp.HP_Constraint_SetChildBody(o,l),this._constraintToBodyIdPair.set(o[0],[h[0],l[0]]);const u=n.pivotA?this._bVecToV3(n.pivotA):this._bVecToV3(c.Zero()),g=n.axisA??new c(1,0,0),_=this._tmpVec3[0];n.perpAxisA?_.copyFrom(n.perpAxisA):g.getNormalToRef(_),this._hknp.HP_Constraint_SetAnchorInParent(o,u,this._bVecToV3(g),this._bVecToV3(_));const f=n.pivotB?this._bVecToV3(n.pivotB):this._bVecToV3(c.Zero()),m=n.axisB??new c(1,0,0),b=this._tmpVec3[0];if(n.perpAxisB?b.copyFrom(n.perpAxisB):m.getNormalToRef(b),this._hknp.HP_Constraint_SetAnchorInChild(o,f,this._bVecToV3(m),this._bVecToV3(b)),e._initOptions||(e._initOptions={axisA:g.clone(),axisB:m.clone(),perpAxisA:_.clone(),perpAxisB:b.clone(),pivotA:new c(u[0],u[1],u[2]),pivotB:new c(f[0],f[1],f[2])}),r==5)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==2){const x=n.maxDistance||0,v=this._hknp.ConstraintAxis.LINEAR_DISTANCE;this._hknp.HP_Constraint_SetAxisMode(o,v,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(o,v,x),this._hknp.HP_Constraint_SetAxisMaxLimit(o,v,x)}else if(r==3)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==6)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==4)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.ANGULAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==1)this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_X,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Y,this._hknp.ConstraintAxisLimitMode.LOCKED),this._hknp.HP_Constraint_SetAxisMode(o,this._hknp.ConstraintAxis.LINEAR_Z,this._hknp.ConstraintAxisLimitMode.LOCKED);else if(r==7){const x=e;for(const v of x.limits){const R=this._constraintAxisToNative(v.axis);(v.minLimit??-1)==0&&(v.maxLimit??-1)==0?this._hknp.HP_Constraint_SetAxisMode(o,R,this._hknp.ConstraintAxisLimitMode.LOCKED):(v.minLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(o,R,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMinLimit(o,R,v.minLimit)),v.maxLimit!=null&&(this._hknp.HP_Constraint_SetAxisMode(o,R,this._hknp.ConstraintAxisLimitMode.LIMITED),this._hknp.HP_Constraint_SetAxisMaxLimit(o,R,v.maxLimit))),v.stiffness&&this._hknp.HP_Constraint_SetAxisStiffness(o,R,v.stiffness),v.damping&&this._hknp.HP_Constraint_SetAxisDamping(o,R,v.damping)}}else throw new Error("Unsupported Constraint Type.");const P=!!n.collision;this._hknp.HP_Constraint_SetCollisionsEnabled(o,P),this._hknp.HP_Constraint_SetEnabled(o,!0)}getBodiesUsingConstraint(e){const t=[];for(const s of e._pluginData){const i=this._constraintToBodyIdPair.get(s[0]);if(i){const a=this._bodies.get(i[0]),r=this._bodies.get(i[1]);a&&r&&t.push({parentBody:a.body,parentBodyIndex:a.index,childBody:r.body,childBodyIndex:r.index})}}return t}addConstraint(e,t,s,i,a){this.initConstraint(s,e,t,i,a)}setEnabled(e,t){for(const s of e._pluginData)this._hknp.HP_Constraint_SetEnabled(s,t)}getEnabled(e){const t=e._pluginData&&e._pluginData[0];return t?this._hknp.HP_Constraint_GetEnabled(t)[1]:!1}setCollisionsEnabled(e,t){for(const s of e._pluginData)this._hknp.HP_Constraint_SetCollisionsEnabled(s,t)}getCollisionsEnabled(e){const t=e._pluginData&&e._pluginData[0];return t?this._hknp.HP_Constraint_GetCollisionsEnabled(t)[1]:!1}setAxisFriction(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisFriction(i,this._constraintAxisToNative(t),s)}getAxisFriction(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisFriction(s,this._constraintAxisToNative(t))[1]:null}setAxisMode(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMode(i,this._constraintAxisToNative(t),this._limitModeToNative(s))}getAxisMode(e,t){const s=e._pluginData&&e._pluginData[0];if(s){const i=this._hknp.HP_Constraint_GetAxisMode(s,this._constraintAxisToNative(t))[1];return this._nativeToLimitMode(i)}return null}setAxisMinLimit(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMinLimit(i,this._constraintAxisToNative(t),s)}getAxisMinLimit(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMinLimit(s,this._constraintAxisToNative(t))[1]:null}setAxisMaxLimit(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMaxLimit(i,this._constraintAxisToNative(t),s)}getAxisMaxLimit(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMaxLimit(s,this._constraintAxisToNative(t))[1]:null}setAxisMotorType(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorType(i,this._constraintAxisToNative(t),this._constraintMotorTypeToNative(s))}getAxisMotorType(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._nativeToMotorType(this._hknp.HP_Constraint_GetAxisMotorType(s,this._constraintAxisToNative(t))[1]):null}setAxisMotorTarget(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorTarget(i,this._constraintAxisToNative(t),s)}getAxisMotorTarget(e,t){return e._pluginData&&e._pluginData[0]?this._hknp.HP_Constraint_GetAxisMotorTarget(e._pluginData,this._constraintAxisToNative(t))[1]:null}setAxisMotorMaxForce(e,t,s){for(const i of e._pluginData)this._hknp.HP_Constraint_SetAxisMotorMaxForce(i,this._constraintAxisToNative(t),s)}getAxisMotorMaxForce(e,t){const s=e._pluginData&&e._pluginData[0];return s?this._hknp.HP_Constraint_GetAxisMotorMaxForce(s,this._constraintAxisToNative(t))[1]:null}disposeConstraint(e){for(const t of e._pluginData)this._hknp.HP_Constraint_SetEnabled(t,!1),this._hknp.HP_Constraint_Release(t);e._pluginData.length=0}_populateHitData(e,t){const s=this._bodies.get(e[0][0]);t.body=s==null?void 0:s.body,t.bodyIndex=s==null?void 0:s.index;const i=this._shapes.get(e[1][0]);t.shape=i;const a=e[3],r=e[4],n=e[5];t.setHitData({x:r[0],y:r[1],z:r[2]},{x:a[0],y:a[1],z:a[2]},n)}raycast(e,t,s,i){const a=(i==null?void 0:i.membership)??-1,r=(i==null?void 0:i.collideWith)??-1,n=(i==null?void 0:i.shouldHitTriggers)??!1;s.reset(e,t);const o=[BigInt(0)],h=[this._bVecToV3(e),this._bVecToV3(t),[a,r],n,o];if(this._hknp.HP_World_CastRayWithCollector(this.world,this._queryCollector,h),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[,l]=this._hknp.HP_QueryCollector_GetCastRayResult(this._queryCollector,0)[1];this._populateHitData(l,s),s.calculateHitDistance()}}pointProximity(e,t){var n,o;const s=((n=e==null?void 0:e.collisionFilter)==null?void 0:n.membership)??-1,i=((o=e==null?void 0:e.collisionFilter)==null?void 0:o.collideWith)??-1;t.reset();const a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[this._bVecToV3(e.position),e.maxDistance,[s,i],e.shouldHitTriggers,a];if(this._hknp.HP_World_PointProximityWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[h,l]=this._hknp.HP_QueryCollector_GetPointProximityResult(this._queryCollector,0)[1];this._populateHitData(l,t),t.setHitDistance(h)}}shapeProximity(e,t,s){t.reset(),s.reset();const i=e.shape._pluginData,a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[i,this._bVecToV3(e.position),this._bQuatToV4(e.rotation),e.maxDistance,e.shouldHitTriggers,a];if(this._hknp.HP_World_ShapeProximityWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[n,o,h]=this._hknp.HP_QueryCollector_GetShapeProximityResult(this._queryCollector,0)[1];this._populateHitData(o,t),this._populateHitData(h,s),t.setHitDistance(n),s.setHitDistance(n)}}shapeCast(e,t,s){t.reset(),s.reset();const i=e.shape._pluginData,a=e.ignoreBody?[BigInt(e.ignoreBody._pluginData.hpBodyId[0])]:[BigInt(0)],r=[i,this._bQuatToV4(e.rotation),this._bVecToV3(e.startPosition),this._bVecToV3(e.endPosition),e.shouldHitTriggers,a];if(this._hknp.HP_World_ShapeCastWithCollector(this.world,this._queryCollector,r),this._hknp.HP_QueryCollector_GetNumHits(this._queryCollector)[1]>0){const[n,o,h]=this._hknp.HP_QueryCollector_GetShapeCastResult(this._queryCollector,0)[1];this._populateHitData(o,t),this._populateHitData(h,s),t.setHitFraction(n),s.setHitFraction(n)}}getCollisionObservable(e){const t=e._pluginData.hpBodyId[0];let s=this._bodyCollisionObservable.get(t);return s||(s=new N,this._bodyCollisionObservable.set(t,s)),s}getCollisionEndedObservable(e){const t=e._pluginData.hpBodyId[0];let s=this._bodyCollisionEndedObservable.get(t);return s||(s=new N,this._bodyCollisionEndedObservable.set(t,s)),s}setCollisionCallbackEnabled(e,t){const s=this._hknp.EventType.COLLISION_STARTED.value|this._hknp.EventType.COLLISION_CONTINUED.value|this._hknp.EventType.COLLISION_FINISHED.value;e._pluginDataInstances&&e._pluginDataInstances.length?e._pluginDataInstances.forEach(i=>{this._hknp.HP_Body_SetEventMask(i.hpBodyId,t?s:0)}):e._pluginData&&this._hknp.HP_Body_SetEventMask(e._pluginData.hpBodyId,t?s:0)}setCollisionEndedCallbackEnabled(e,t){const s=this._getPluginReference(e);let i=this._hknp.HP_Body_GetEventMask(s.hpBodyId)[1];i=t?i|this._hknp.EventType.COLLISION_FINISHED.value:i&~this._hknp.EventType.COLLISION_FINISHED.value,e._pluginDataInstances&&e._pluginDataInstances.length?e._pluginDataInstances.forEach(a=>{this._hknp.HP_Body_SetEventMask(a.hpBodyId,i)}):e._pluginData&&this._hknp.HP_Body_SetEventMask(e._pluginData.hpBodyId,i)}_notifyTriggers(){let e=this._hknp.HP_World_GetTriggerEvents(this.world)[1];const t=new Nt;for(;e;){Nt.readToRef(this._hknp.HEAPU8.buffer,e,t);const s=this._bodies.get(t.bodyIdA),i=this._bodies.get(t.bodyIdB);if(s&&i){const a={collider:s.body,colliderIndex:s.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,type:this._nativeTriggerCollisionValueToCollisionType(t.type)};this.onTriggerCollisionObservable.notifyObservers(a)}e=this._hknp.HP_World_GetNextTriggerEvent(this.world,e)}}_notifyCollisions(){let e=this._hknp.HP_World_GetCollisionEvents(this.world)[1];const t=new Lt,s=Number(this.world);for(;e;){Lt.readToRef(this._hknp.HEAPU8.buffer,e,t);const i=this._bodies.get(t.contactOnA.bodyId),a=this._bodies.get(t.contactOnB.bodyId);if(i&&a){const r={collider:i.body,colliderIndex:i.index,collidedAgainst:a.body,collidedAgainstIndex:a.index,type:this._nativeCollisionValueToCollisionType(t.type)};if(r.type==="COLLISION_FINISHED")this.onCollisionEndedObservable.notifyObservers(r);else{t.contactOnB.position.subtractToRef(t.contactOnA.position,this._tmpVec3[0]);const n=c.Dot(this._tmpVec3[0],t.contactOnA.normal);r.point=t.contactOnA.position,r.distance=n,r.impulse=t.impulseApplied,r.normal=t.contactOnA.normal,this.onCollisionObservable.notifyObservers(r)}if(this._bodyCollisionObservable.size&&r.type!=="COLLISION_FINISHED"){const n=this._bodyCollisionObservable.get(t.contactOnA.bodyId),o=this._bodyCollisionObservable.get(t.contactOnB.bodyId);t.contactOnA.position.subtractToRef(t.contactOnB.position,this._tmpVec3[0]);const h=c.Dot(this._tmpVec3[0],t.contactOnB.normal);if(n&&n.notifyObservers(r),o){const l={collider:a.body,colliderIndex:a.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,point:t.contactOnB.position,distance:h,impulse:t.impulseApplied,normal:t.contactOnB.normal,type:this._nativeCollisionValueToCollisionType(t.type)};o.notifyObservers(l)}}else if(this._bodyCollisionEndedObservable.size){const n=this._bodyCollisionEndedObservable.get(t.contactOnA.bodyId),o=this._bodyCollisionEndedObservable.get(t.contactOnB.bodyId);t.contactOnA.position.subtractToRef(t.contactOnB.position,this._tmpVec3[0]);const h=c.Dot(this._tmpVec3[0],t.contactOnB.normal);if(n&&n.notifyObservers(r),o){const l={collider:a.body,colliderIndex:a.index,collidedAgainst:i.body,collidedAgainstIndex:i.index,point:t.contactOnB.position,distance:h,impulse:t.impulseApplied,normal:t.contactOnB.normal,type:this._nativeCollisionValueToCollisionType(t.type)};o.notifyObservers(l)}}}e=this._hknp.HP_World_GetNextCollisionEvent(s,e)}}get numBodies(){return this._hknp.HP_World_GetNumBodies(this.world)[1]}dispose(){this._queryCollector&&(this._hknp.HP_QueryCollector_Release(this._queryCollector),this._queryCollector=void 0),this.world&&(this._hknp.HP_World_Release(this.world),this.world=void 0)}_v3ToBvecRef(e,t){t.set(e[0],e[1],e[2])}_bVecToV3(e){return[e._x,e._y,e._z]}_bQuatToV4(e){return[e._x,e._y,e._z,e._w]}_constraintMotorTypeToNative(e){switch(e){case 2:return this._hknp.ConstraintMotorType.POSITION;case 1:return this._hknp.ConstraintMotorType.VELOCITY}return this._hknp.ConstraintMotorType.NONE}_nativeToMotorType(e){switch(e){case this._hknp.ConstraintMotorType.POSITION:return 2;case this._hknp.ConstraintMotorType.VELOCITY:return 1}return 0}_materialCombineToNative(e){switch(e){case 0:return this._hknp.MaterialCombine.GEOMETRIC_MEAN;case 1:return this._hknp.MaterialCombine.MINIMUM;case 2:return this._hknp.MaterialCombine.MAXIMUM;case 3:return this._hknp.MaterialCombine.ARITHMETIC_MEAN;case 4:return this._hknp.MaterialCombine.MULTIPLY}}_nativeToMaterialCombine(e){switch(e){case this._hknp.MaterialCombine.GEOMETRIC_MEAN:return 0;case this._hknp.MaterialCombine.MINIMUM:return 1;case this._hknp.MaterialCombine.MAXIMUM:return 2;case this._hknp.MaterialCombine.ARITHMETIC_MEAN:return 3;case this._hknp.MaterialCombine.MULTIPLY:return 4;default:return}}_constraintAxisToNative(e){switch(e){case 0:return this._hknp.ConstraintAxis.LINEAR_X;case 1:return this._hknp.ConstraintAxis.LINEAR_Y;case 2:return this._hknp.ConstraintAxis.LINEAR_Z;case 3:return this._hknp.ConstraintAxis.ANGULAR_X;case 4:return this._hknp.ConstraintAxis.ANGULAR_Y;case 5:return this._hknp.ConstraintAxis.ANGULAR_Z;case 6:return this._hknp.ConstraintAxis.LINEAR_DISTANCE}}_nativeToLimitMode(e){switch(e){case this._hknp.ConstraintAxisLimitMode.FREE:return 0;case this._hknp.ConstraintAxisLimitMode.LIMITED:return 1;case this._hknp.ConstraintAxisLimitMode.LOCKED:return 2}return 0}_limitModeToNative(e){switch(e){case 0:return this._hknp.ConstraintAxisLimitMode.FREE;case 1:return this._hknp.ConstraintAxisLimitMode.LIMITED;case 2:return this._hknp.ConstraintAxisLimitMode.LOCKED}}_nativeCollisionValueToCollisionType(e){switch(e){case this._hknp.EventType.COLLISION_STARTED.value:return"COLLISION_STARTED";case this._hknp.EventType.COLLISION_FINISHED.value:return"COLLISION_FINISHED";case this._hknp.EventType.COLLISION_CONTINUED.value:return"COLLISION_CONTINUED"}return"COLLISION_STARTED"}_nativeTriggerCollisionValueToCollisionType(e){switch(e){case 8:return"TRIGGER_ENTERED";case 16:return"TRIGGER_EXITED"}return"TRIGGER_ENTERED"}}class Ea extends Qt{constructor(){super(...arguments),this._hitDistance=0}get hitDistance(){return this._hitDistance}setHitDistance(e){this._hitDistance=e}reset(){super.reset(),this._hitDistance=0}}class Fa extends Qt{constructor(){super(...arguments),this._hitFraction=0}get hitFraction(){return this._hitFraction}setHitFraction(e){this._hitFraction=e}}class Oa extends se{getClassName(){return"HighlightsPostProcess"}constructor(e,t,s,i,a,r,n=0){super(e,"highlights",null,null,t,s,i,a,r,null,n)}_gatherImports(e,t){e?(this._webGPUReady=!0,t.push(Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zq),__vite__mapDeps([0,1,2]))]))):t.push(Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zp),__vite__mapDeps([0,1,2]))])),super._gatherImports(e,t)}}class ka extends jt{constructor(e,t,s,i=1,a){super(s.getEngine(),e),this.LensChromaticAberrationEffect="LensChromaticAberrationEffect",this.HighlightsEnhancingEffect="HighlightsEnhancingEffect",this.LensDepthOfFieldEffect="LensDepthOfFieldEffect",this._pentagonBokehIsEnabled=!1,this._scene=s,this._depthTexture=s.enableDepthRenderer().getDepthMap(),t.grain_texture?this._grainTexture=t.grain_texture:this._createGrainTexture(),this._edgeBlur=t.edge_blur?t.edge_blur:0,this._grainAmount=t.grain_amount?t.grain_amount:0,this._chromaticAberration=t.chromatic_aberration?t.chromatic_aberration:0,this._distortion=t.distortion?t.distortion:0,this._highlightsGain=t.dof_gain!==void 0?t.dof_gain:-1,this._highlightsThreshold=t.dof_threshold?t.dof_threshold:1,this._dofDistance=t.dof_focus_distance!==void 0?t.dof_focus_distance:-1,this._dofAperture=t.dof_aperture?t.dof_aperture:1,this._dofDarken=t.dof_darken?t.dof_darken:0,this._dofPentagon=t.dof_pentagon!==void 0?t.dof_pentagon:!0,this._blurNoise=t.blur_noise!==void 0?t.blur_noise:!0,this._createChromaticAberrationPostProcess(i),this._createHighlightsPostProcess(i),this._createDepthOfFieldPostProcess(i/4),this.addEffect(new Oe(s.getEngine(),this.LensChromaticAberrationEffect,()=>this._chromaticAberrationPostProcess,!0)),this.addEffect(new Oe(s.getEngine(),this.HighlightsEnhancingEffect,()=>this._highlightsPostProcess,!0)),this.addEffect(new Oe(s.getEngine(),this.LensDepthOfFieldEffect,()=>this._depthOfFieldPostProcess,!0)),this._highlightsGain===-1&&this._disableEffect(this.HighlightsEnhancingEffect,null),s.postProcessRenderPipelineManager.addPipeline(this),a&&s.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(e,a)}getClassName(){return"LensRenderingPipeline"}get scene(){return this._scene}get edgeBlur(){return this._edgeBlur}set edgeBlur(e){this.setEdgeBlur(e)}get grainAmount(){return this._grainAmount}set grainAmount(e){this.setGrainAmount(e)}get chromaticAberration(){return this._chromaticAberration}set chromaticAberration(e){this.setChromaticAberration(e)}get dofAperture(){return this._dofAperture}set dofAperture(e){this.setAperture(e)}get edgeDistortion(){return this._distortion}set edgeDistortion(e){this.setEdgeDistortion(e)}get dofDistortion(){return this._dofDistance}set dofDistortion(e){this.setFocusDistance(e)}get darkenOutOfFocus(){return this._dofDarken}set darkenOutOfFocus(e){this.setDarkenOutOfFocus(e)}get blurNoise(){return this._blurNoise}set blurNoise(e){this._blurNoise=e}get pentagonBokeh(){return this._pentagonBokehIsEnabled}set pentagonBokeh(e){e?this.enablePentagonBokeh():this.disablePentagonBokeh()}get highlightsGain(){return this._highlightsGain}set highlightsGain(e){this.setHighlightsGain(e)}get highlightsThreshold(){return this._highlightsThreshold}set highlightsThreshold(e){this.setHighlightsThreshold(e)}setEdgeBlur(e){this._edgeBlur=e}disableEdgeBlur(){this._edgeBlur=0}setGrainAmount(e){this._grainAmount=e}disableGrain(){this._grainAmount=0}setChromaticAberration(e){this._chromaticAberration=e}disableChromaticAberration(){this._chromaticAberration=0}setEdgeDistortion(e){this._distortion=e}disableEdgeDistortion(){this._distortion=0}setFocusDistance(e){this._dofDistance=e}disableDepthOfField(){this._dofDistance=-1}setAperture(e){this._dofAperture=e}setDarkenOutOfFocus(e){this._dofDarken=e}enablePentagonBokeh(){this._highlightsPostProcess.updateEffect(`#define PENTAGON
`),this._pentagonBokehIsEnabled=!0}disablePentagonBokeh(){this._pentagonBokehIsEnabled=!1,this._highlightsPostProcess.updateEffect()}enableNoiseBlur(){this._blurNoise=!0}disableNoiseBlur(){this._blurNoise=!1}setHighlightsGain(e){this._highlightsGain=e}setHighlightsThreshold(e){this._highlightsGain===-1&&(this._highlightsGain=1),this._highlightsThreshold=e}disableHighlights(){this._highlightsGain=-1}dispose(e=!1){this._scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this._name,this._scene.cameras),this._chromaticAberrationPostProcess=null,this._highlightsPostProcess=null,this._depthOfFieldPostProcess=null,this._grainTexture.dispose(),e&&this._scene.disableDepthRenderer()}_createChromaticAberrationPostProcess(e){this._chromaticAberrationPostProcess=new se("LensChromaticAberration","chromaticAberration",["chromatic_aberration","screen_width","screen_height","direction","radialIntensity","centerPosition"],[],e,null,j.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1),this._chromaticAberrationPostProcess.onApply=t=>{t.setFloat("chromatic_aberration",this._chromaticAberration),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight()),t.setFloat("radialIntensity",1),t.setFloat2("direction",17,17),t.setFloat2("centerPosition",.5,.5)}}_createHighlightsPostProcess(e){this._highlightsPostProcess=new se("LensHighlights","lensHighlights",["gain","threshold","screen_width","screen_height"],[],e,null,j.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1,this._dofPentagon?`#define PENTAGON
`:""),this._highlightsPostProcess.externalTextureSamplerBinding=!0,this._highlightsPostProcess.onApply=t=>{t.setFloat("gain",this._highlightsGain),t.setFloat("threshold",this._highlightsThreshold),t.setTextureFromPostProcess("textureSampler",this._chromaticAberrationPostProcess),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight())}}_createDepthOfFieldPostProcess(e){this._depthOfFieldPostProcess=new se("LensDepthOfField","depthOfField",["grain_amount","blur_noise","screen_width","screen_height","distortion","dof_enabled","screen_distance","aperture","darken","edge_blur","highlights","near","far"],["depthSampler","grainSampler","highlightsSampler"],e,null,j.TRILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1),this._depthOfFieldPostProcess.externalTextureSamplerBinding=!0,this._depthOfFieldPostProcess.onApply=t=>{t.setTexture("depthSampler",this._depthTexture),t.setTexture("grainSampler",this._grainTexture),t.setTextureFromPostProcess("textureSampler",this._highlightsPostProcess),t.setTextureFromPostProcess("highlightsSampler",this._depthOfFieldPostProcess),t.setFloat("grain_amount",this._grainAmount),t.setBool("blur_noise",this._blurNoise),t.setFloat("screen_width",this._scene.getEngine().getRenderWidth()),t.setFloat("screen_height",this._scene.getEngine().getRenderHeight()),t.setFloat("distortion",this._distortion),t.setBool("dof_enabled",this._dofDistance!==-1),t.setFloat("screen_distance",1/(.1-1/this._dofDistance)),t.setFloat("aperture",this._dofAperture),t.setFloat("darken",this._dofDarken),t.setFloat("edge_blur",this._edgeBlur),t.setBool("highlights",this._highlightsGain!==-1),this._scene.activeCamera&&(t.setFloat("near",this._scene.activeCamera.minZ),t.setFloat("far",this._scene.activeCamera.maxZ))}}_createGrainTexture(){const t=new Uint8Array(1048576);for(let i=0;i<t.length;){const a=Math.floor(Qs(.42,.58)*255);t[i++]=a,t[i++]=a,t[i++]=a,t[i++]=255}const s=bt.CreateRGBATexture(t,512,512,this._scene,!1,!1,2);s.name="LensNoiseTexture",s.wrapU=j.WRAP_ADDRESSMODE,s.wrapV=j.WRAP_ADDRESSMODE,this._grainTexture=s}}class Ai{getVoxelGrid(){return this._triPlanarVoxelization?this._voxelGridRT:this._voxelGridZaxis}getDebugPassPP(){return this._voxelDebugPass||this._createDebugPass(),this._voxelDebugPass}get triPlanarVoxelization(){return this._triPlanarVoxelization}set triPlanarVoxelization(e){this._triPlanarVoxelization!==e&&(this._triPlanarVoxelization=e,this._disposeVoxelTextures(),this._createTextures(),this._renderPipeline.updateVoxelization())}setWorldScaleMatrix(e){this._invWorldScaleMatrix=e}isVoxelizationInProgress(){return this._voxelizationInProgress}get voxelResolutionExp(){return this._voxelResolutionExp}set voxelResolutionExp(e){this._voxelResolutionExp===e&&this._voxelGridZaxis||(this._voxelResolutionExp=Math.round(Math.min(Math.max(e,3),9)),this._voxelResolution=Math.pow(2,this._voxelResolutionExp),this._disposeVoxelTextures(),this._createTextures())}set voxelDebugAxis(e){this._voxelDebugAxis=e}get voxelDebugAxis(){return this._voxelDebugAxis}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}setDebugMipNumber(e){this._debugMipNumber=e}get debugPassName(){return this._debugPassName}get voxelDebugEnabled(){return this._voxelDebugEnabled}set voxelDebugEnabled(e){this._voxelDebugEnabled!==e&&(this._voxelDebugEnabled=e,e?(this._voxelSlabDebugRT=new he("voxelSlabDebug",{ratio:1},this._scene,{generateDepthBuffer:!0,generateMipMaps:!1,type:0,format:6,samplingMode:1}),this._voxelSlabDebugRT.noPrePassRenderer=!0):this._voxelSlabDebugRT&&this._removeVoxelRTs([this._voxelSlabDebugRT]))}_createDebugPass(){const e=this._engine.isWebGPU;if(!this._voxelDebugPass){const t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:6,textureType:0,samplingMode:1,uniforms:["sizeParams","mipNumber"],samplers:["voxelTexture","voxelSlabTexture"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{if(this._isVoxelGrid3D){s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.z_),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zZ),__vite__mapDeps([0,1,2])));return}s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zU),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zT),__vite__mapDeps([0,1,2])))}};this._voxelDebugPass=new se(this.debugPassName,this._isVoxelGrid3D?"iblVoxelGrid3dDebug":"iblVoxelGrid2dArrayDebug",t),this._voxelDebugPass.onApplyObservable.add(s=>{this._voxelDebugAxis===0?s.setTexture("voxelTexture",this._voxelGridXaxis):this._voxelDebugAxis===1?s.setTexture("voxelTexture",this._voxelGridYaxis):this._voxelDebugAxis===2?s.setTexture("voxelTexture",this._voxelGridZaxis):s.setTexture("voxelTexture",this.getVoxelGrid()),s.setTexture("voxelSlabTexture",this._voxelSlabDebugRT),s.setVector4("sizeParams",this._debugSizeParams),s.setFloat("mipNumber",this._debugMipNumber)})}}constructor(e,t,s=6,i=!0){this._voxelMrtsXaxis=[],this._voxelMrtsYaxis=[],this._voxelMrtsZaxis=[],this._isVoxelGrid3D=!0,this._renderInFlight=!1,this._renderTargets=[],this._triPlanarVoxelization=!0,this._voxelizationInProgress=!1,this._voxelResolution=64,this._voxelResolutionExp=6,this._mipArray=[],this._voxelDebugEnabled=!1,this._voxelDebugAxis=-1,this._debugSizeParams=new le(0,0,0,0),this._debugMipNumber=0,this._debugPassName="Voxelization Debug Pass",this._scene=e,this._engine=e.getEngine(),this._triPlanarVoxelization=i,this._renderPipeline=t,this._engine.getCaps().drawBuffersExtension||D.Error("Can't do voxel rendering without the draw buffers extension.");const a=this._engine.isWebGPU;this._maxDrawBuffers=this._engine.getCaps().maxDrawBuffers||0,this._copyMipEffectRenderer=new js(this._engine),this._copyMipEffectWrapper=new qs({engine:this._engine,fragmentShader:"copyTexture3DLayerToTexture",useShaderStore:!0,uniformNames:["layerNum"],samplerNames:["textureSampler"],shaderLanguage:a?1:0,extraInitializationsAsync:async()=>{a?await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zs),__vite__mapDeps([0,1,2])):await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zr),__vite__mapDeps([0,1,2]))}}),this.voxelResolutionExp=s}_generateMipMaps(){const e=Math.ceil(Math.log2(this._voxelResolution));for(let t=1;t<e+1;t++)this._generateMipMap(t)}_generateMipMap(e){const t=this._mipArray[e-1];t&&(t.setTexture("srcMip",e===1?this.getVoxelGrid():this._mipArray[e-2]),t.render())}_copyMipMaps(){const e=Math.ceil(Math.log2(this._voxelResolution));for(let t=1;t<e+1;t++)this._copyMipMap(t)}_copyMipMap(e){const t=this._mipArray[e-1];if(!t)return;const s=this.getVoxelGrid();let i;if(s instanceof he&&s.renderTarget?i=s.renderTarget:i=s._rtWrapper,i){this._copyMipEffectRenderer.saveStates();const a=t.getSize().width;for(let r=0;r<a;r++)this._engine.bindFramebuffer(i,0,a,a,!0,e,r),this._copyMipEffectRenderer.applyEffectWrapper(this._copyMipEffectWrapper),this._copyMipEffectWrapper.effect.setTexture("textureSampler",t),this._copyMipEffectWrapper.effect.setInt("layerNum",r),this._copyMipEffectRenderer.draw(),this._engine.unBindFramebuffer(i,!0);this._copyMipEffectRenderer.restoreStates()}}_computeNumberOfSlabs(){return Math.ceil(this._voxelResolution/this._maxDrawBuffers)}_createTextures(){const e=this._engine.isWebGPU,t={width:this._voxelResolution,height:this._voxelResolution,layers:this._isVoxelGrid3D?void 0:this._voxelResolution,depth:this._isVoxelGrid3D?this._voxelResolution:void 0},s={generateDepthBuffer:!1,generateMipMaps:!1,type:0,format:6,samplingMode:1},i=this._computeNumberOfSlabs(),a={generateDepthBuffer:!1,generateMipMaps:!0,type:0,format:6,samplingMode:4,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(n=>n.zD),__vite__mapDeps([0,1,2])):await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(n=>n.zE),__vite__mapDeps([0,1,2]))}};this._triPlanarVoxelization?(this._voxelGridXaxis=new he("voxelGridXaxis",t,this._scene,s),this._voxelGridYaxis=new he("voxelGridYaxis",t,this._scene,s),this._voxelGridZaxis=new he("voxelGridZaxis",t,this._scene,s),this._voxelMrtsXaxis=this._createVoxelMRTs("x_axis_",this._voxelGridXaxis,i),this._voxelMrtsYaxis=this._createVoxelMRTs("y_axis_",this._voxelGridYaxis,i),this._voxelMrtsZaxis=this._createVoxelMRTs("z_axis_",this._voxelGridZaxis,i),this._voxelGridRT=new He("combinedVoxelGrid",t,"iblCombineVoxelGrids",this._scene,a,!1),this._scene.proceduralTextures.splice(this._scene.proceduralTextures.indexOf(this._voxelGridRT),1),this._voxelGridRT.setFloat("layer",0),this._voxelGridRT.setTexture("voxelXaxisSampler",this._voxelGridXaxis),this._voxelGridRT.setTexture("voxelYaxisSampler",this._voxelGridYaxis),this._voxelGridRT.setTexture("voxelZaxisSampler",this._voxelGridZaxis),this._voxelGridRT.autoClear=!1,this._voxelGridRT.wrapU=j.CLAMP_ADDRESSMODE,this._voxelGridRT.wrapV=j.CLAMP_ADDRESSMODE):(this._voxelGridZaxis=new he("voxelGridZaxis",t,this._scene,a),this._voxelMrtsZaxis=this._createVoxelMRTs("z_axis_",this._voxelGridZaxis,i));const r={generateDepthBuffer:!1,generateMipMaps:!1,type:0,format:6,samplingMode:1,shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(n=>n.zG),__vite__mapDeps([0,1,2])):await M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(n=>n.zF),__vite__mapDeps([0,1,2]))}};this._mipArray=new Array(Math.ceil(Math.log2(this._voxelResolution)));for(let n=1;n<=this._mipArray.length;n++){const o=this._voxelResolution>>n,h={width:o,height:o,depth:o};this._mipArray[n-1]=new He("voxelMip"+n,h,"iblGenerateVoxelMip",this._scene,r,!1),this._scene.proceduralTextures.splice(this._scene.proceduralTextures.indexOf(this._mipArray[n-1]),1);const l=this._mipArray[n-1];l.autoClear=!1,l.wrapU=j.CLAMP_ADDRESSMODE,l.wrapV=j.CLAMP_ADDRESSMODE,l.setTexture("srcMip",n>1?this._mipArray[n-2]:this.getVoxelGrid()),l.setInt("layerNum",0)}}_createVoxelMRTs(e,t,s){t.wrapU=j.CLAMP_ADDRESSMODE,t.wrapV=j.CLAMP_ADDRESSMODE,t.noPrePassRenderer=!0;const i=[],a=new Array(this._maxDrawBuffers).fill(this._isVoxelGrid3D?32879:35866);for(let r=0;r<s;r++){let n=new Array(this._maxDrawBuffers).fill(0);n=n.map((l,u)=>r*this._maxDrawBuffers+u);let o=new Array(this._maxDrawBuffers).fill("");o=o.map((l,u)=>"voxel_grid_"+e+(r*this._maxDrawBuffers+u));const h=new Zs("mrt_"+e+r,{width:this._voxelResolution,height:this._voxelResolution,depth:this._isVoxelGrid3D?this._voxelResolution:void 0},this._maxDrawBuffers,this._scene,{types:new Array(this._maxDrawBuffers).fill(0),samplingModes:new Array(this._maxDrawBuffers).fill(3),generateMipMaps:!1,targetTypes:a,formats:new Array(this._maxDrawBuffers).fill(6),faceIndex:new Array(this._maxDrawBuffers).fill(0),layerIndex:n,layerCounts:new Array(this._maxDrawBuffers).fill(this._voxelResolution),generateDepthBuffer:!1,generateStencilBuffer:!1},o);h.clearColor=new Re(0,0,0,1),h.noPrePassRenderer=!0;for(let l=0;l<this._maxDrawBuffers;l++)h.setInternalTexture(t.getInternalTexture(),l);i.push(h)}return i}_disposeVoxelTextures(){var e,t,s,i;this._stopVoxelization();for(let a=0;a<this._voxelMrtsZaxis.length;a++)this._triPlanarVoxelization&&(this._voxelMrtsXaxis[a].dispose(!0),this._voxelMrtsYaxis[a].dispose(!0)),this._voxelMrtsZaxis[a].dispose(!0);this._triPlanarVoxelization&&((e=this._voxelGridXaxis)==null||e.dispose(),(t=this._voxelGridYaxis)==null||t.dispose(),(s=this._voxelGridRT)==null||s.dispose()),(i=this._voxelGridZaxis)==null||i.dispose(),this._mipArray.forEach(a=>{a.dispose()}),this._mipArray=[],this._voxelMrtsXaxis=[],this._voxelMrtsYaxis=[],this._voxelMrtsZaxis=[]}_createVoxelMaterial(){const e=this._engine.isWebGPU,t=new it("voxelization",this._scene,"iblVoxelGrid",{uniforms:["world","viewMatrix","invWorldScale","nearPlane","farPlane","stepSize"],defines:["MAX_DRAW_BUFFERS "+this._maxDrawBuffers],shaderLanguage:e?1:0,extraInitializationsAsync:async()=>{e?await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zX),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zY),__vite__mapDeps([0,1,2]))]):await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zV),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(s=>s.zW),__vite__mapDeps([0,1,2]))])}});return t.cullBackFaces=!1,t.backFaceCulling=!1,t.depthFunction=st.ALWAYS,t}isReady(){let e=this.getVoxelGrid().isReady();for(let t=0;t<this._mipArray.length;t++){const s=this._mipArray[t].isReady();e&&(e=s)}return!(!e||this._voxelizationInProgress)}_stopVoxelization(){this._removeVoxelRTs(this._voxelMrtsXaxis),this._removeVoxelRTs(this._voxelMrtsYaxis),this._removeVoxelRTs(this._voxelMrtsZaxis)}_removeVoxelRTs(e){const t=this._renderTargets.findIndex(s=>s===e[0]);if(t>=0)this._renderTargets.splice(t,e.length);else{const s=this._scene.customRenderTargets.findIndex(i=>i===e[0]);s>=0&&this._scene.customRenderTargets.splice(s,e.length)}}updateVoxelGrid(e){this._stopVoxelization(),this._voxelizationInProgress=!0,this._triPlanarVoxelization?(this._addRTsForRender(this._voxelMrtsXaxis,e,0),this._addRTsForRender(this._voxelMrtsYaxis,e,1),this._addRTsForRender(this._voxelMrtsZaxis,e,2)):this._addRTsForRender(this._voxelMrtsZaxis,e,2),this._voxelDebugEnabled&&(this._removeVoxelRTs([this._voxelSlabDebugRT]),this._addRTsForRender([this._voxelSlabDebugRT],[],this._voxelDebugAxis,1,!0)),this.boundVoxelGridRenderFn=this._renderVoxelGrid.bind(this),this._scene.onAfterRenderTargetsRenderObservable.add(this.boundVoxelGridRenderFn)}_renderVoxelGrid(){if(this._voxelizationInProgress){let e=this.getVoxelGrid().isReady();for(let t=0;t<this._mipArray.length;t++){const s=this._mipArray[t].isReady();e&&(e=s)}for(let t=0;t<this._renderTargets.length;t++){const s=this._renderTargets[t].isReadyForRendering();e&&(e=s)}e?(this._renderInFlight=!1,this._scene.prePassRenderer._setEnabled(!1),this._renderTargets.forEach(t=>{t.render()}),this._stopVoxelization(),this._triPlanarVoxelization&&this._voxelGridRT.render(),this._generateMipMaps(),this._copyMipMaps(),this._voxelizationInProgress=!1,this._scene.onAfterRenderTargetsRenderObservable.removeCallback(this.boundVoxelGridRenderFn),this._scene.prePassRenderer._setEnabled(!0)):this._renderInFlight||(this._renderInFlight=!0,setTimeout(()=>{this._renderVoxelGrid()},16))}}_addRTsForRender(e,t,s,i=0,a=!1){const r=1/this._computeNumberOfSlabs(),n=this._scene.meshes;e.forEach((o,h)=>{o.renderList=[];const l=h*r,u=(h+1)*r,g=r/this._maxDrawBuffers;let _;if(i===0)_=this._createVoxelMaterial();else{const P=this._engine.isWebGPU;_=new it("voxelSlabDebug",this._scene,"iblVoxelSlabDebug",{uniforms:["world","viewMatrix","cameraViewMatrix","projection","invWorldScale","nearPlane","farPlane","stepSize"],defines:["MAX_DRAW_BUFFERS "+this._maxDrawBuffers],shaderLanguage:P?1:0,extraInitializationsAsync:async()=>{P?await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(x=>x.A2),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(x=>x.A1),__vite__mapDeps([0,1,2]))]):await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(x=>x.A0),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(x=>x.z$),__vite__mapDeps([0,1,2]))])}}),this._scene.onBeforeRenderObservable.add(()=>{_.setMatrix("projection",this._scene.activeCamera.getProjectionMatrix()),_.setMatrix("cameraViewMatrix",this._scene.activeCamera.getViewMatrix())})}const f=new c(0,0,0);let m=new c(0,0,1);s===0?m=new c(1,0,0):s===1&&(m=new c(0,1,0));let b=new c(0,1,0);s===1&&(b=new c(1,0,0)),_.setMatrix("viewMatrix",C.LookAtLH(f,m,b)),_.setMatrix("invWorldScale",this._invWorldScaleMatrix),_.setFloat("nearPlane",l),_.setFloat("farPlane",u),_.setFloat("stepSize",g),n.forEach(P=>{var x;P instanceof oe&&P.material&&t.indexOf(P.uniqueId)===-1&&((x=o.renderList)==null||x.push(P),o.setMaterialForRendering(P,_))})}),a?this._scene.customRenderTargets=this._scene.customRenderTargets.concat(e):this._renderTargets=this._renderTargets.concat(e)}resize(){var e;(e=this._voxelSlabDebugRT)==null||e.resize({width:this._scene.getEngine().getRenderWidth(),height:this._scene.getEngine().getRenderHeight()})}dispose(){this._disposeVoxelTextures(),this._voxelSlabDebugRT&&(this._removeVoxelRTs([this._voxelSlabDebugRT]),this._voxelSlabDebugRT.dispose()),this._voxelDebugPass&&this._voxelDebugPass.dispose()}}class Di{get voxelShadowOpacity(){return this._voxelShadowOpacity}set voxelShadowOpacity(e){this._voxelShadowOpacity=e}get ssShadowOpacity(){return this._ssShadowOpacity}set ssShadowOpacity(e){this._ssShadowOpacity=e}get sssSamples(){return this._sssSamples}set sssSamples(e){this._sssSamples=e}get sssStride(){return this._sssStride}set sssStride(e){this._sssStride=e}get sssMaxDist(){return this._sssMaxDist}set sssMaxDist(e){this._sssMaxDist=e}get sssThickness(){return this._sssThickness}set sssThickness(e){this._sssThickness=e}get sampleDirections(){return this._sampleDirections}set sampleDirections(e){this._sampleDirections=e}get envRotation(){return this._envRotation}set envRotation(e){this._envRotation=e}getPassPP(){return this._outputPP}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}setWorldScaleMatrix(e){this._invWorldScaleMatrix=e}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){const e=this._engine.isWebGPU;if(!this._debugPassPP){const t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zw),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zv),__vite__mapDeps([0,1,2])))}};this._debugPassPP=new se(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTextureFromPostProcessOutput("debugSampler",this._outputPP),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e,t){this._voxelShadowOpacity=1,this._sssSamples=16,this._sssStride=8,this._sssMaxDist=.05,this._sssThickness=.5,this._ssShadowOpacity=1,this._cameraInvView=C.Identity(),this._cameraInvProj=C.Identity(),this._invWorldScaleMatrix=C.Identity(),this._frameId=0,this._sampleDirections=4,this.debugEnabled=!1,this._debugPassName="Voxel Tracing Debug Pass",this._envRotation=0,this._downscale=1,this._debugVoxelMarchEnabled=!1,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._renderPipeline=t,this._createTextures()}_createTextures(){let e="";this._scene.useRightHandedSystem&&(e+=`#define RIGHT_HANDED
`),this._debugVoxelMarchEnabled&&(e+=`#define VOXEL_MARCH_DIAGNOSTIC_INFO_OPTION 1u
`);const t=this._engine.isWebGPU,s={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:7,textureType:0,samplingMode:1,uniforms:["viewMtx","projMtx","invProjMtx","invViewMtx","wsNormalizationMtx","shadowParameters","offsetDataParameters","sssParameters","shadowOpacity"],samplers:["voxelGridSampler","icdfySampler","icdfxSampler","blueNoiseSampler","worldNormalSampler","depthSampler","worldPositionSampler"],defines:e,engine:this._engine,reusable:!1,shaderLanguage:t?1:0,extraInitializations:(i,a)=>{i?a.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zu),__vite__mapDeps([0,1,2]))):a.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zt),__vite__mapDeps([0,1,2])))}};this._outputPP=new se("voxelTracingPass","iblShadowVoxelTracing",s),this._outputPP.autoClear=!1,this._outputPP.onApplyObservable.add(i=>{this._updatePostProcess(i,this._scene.activeCamera)})}_updatePostProcess(e,t){this._scene.useRightHandedSystem&&(e.defines=`#define RIGHT_HANDED
`),e.setMatrix("viewMtx",t.getViewMatrix()),e.setMatrix("projMtx",t.getProjectionMatrix()),t.getProjectionMatrix().invertToRef(this._cameraInvProj),t.getViewMatrix().invertToRef(this._cameraInvView),e.setMatrix("invProjMtx",this._cameraInvProj),e.setMatrix("invViewMtx",this._cameraInvView),e.setMatrix("wsNormalizationMtx",this._invWorldScaleMatrix),this._frameId++;const s=this._downscale*this._downscale;let i=this._scene.useRightHandedSystem?-(this._envRotation+.5*Math.PI):this._envRotation-.5*Math.PI;i=i%(2*Math.PI),e.setVector4("shadowParameters",new le(this._sampleDirections,this._frameId/s,this._downscale,i));const a=new at(0,0),r=this._renderPipeline.getVoxelGridTexture(),n=Math.floor(Math.log2(r.getSize().width));e.setVector4("offsetDataParameters",new le(a.x,a.y,n,0)),e.setVector4("sssParameters",new le(this._sssSamples,this._sssStride,this._sssMaxDist,this._sssThickness)),e.setVector4("shadowOpacity",new le(this._voxelShadowOpacity,this._ssShadowOpacity,0,0)),e.setTexture("voxelGridSampler",r),e.setTexture("blueNoiseSampler",this._renderPipeline._noiseTexture),e.setTexture("icdfySampler",this._renderPipeline.getIcdfyTexture()),e.setTexture("icdfxSampler",this._renderPipeline.getIcdfxTexture()),this._debugVoxelMarchEnabled&&(e.defines+=`#define VOXEL_MARCH_DIAGNOSTIC_INFO_OPTION 1u
`);const o=this._scene.prePassRenderer;if(o){const h=o.getIndex(8),l=o.getIndex(10),u=o.getIndex(1);h>=0&&e.setTexture("worldNormalSampler",o.getRenderTarget().textures[h]),l>=0&&e.setTexture("depthSampler",o.getRenderTarget().textures[l]),u>=0&&e.setTexture("worldPositionSampler",o.getRenderTarget().textures[u])}}isReady(){return this._outputPP.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())&&this._renderPipeline.getIcdfyTexture().isReady()&&this._renderPipeline.getIcdfxTexture().isReady()&&this._renderPipeline.getVoxelGridTexture().isReady()}dispose(){this._outputPP.dispose(),this._debugPassPP&&this._debugPassPP.dispose()}}class Ci{get iblSource(){return this._iblSource}set iblSource(e){this._iblSource!==e&&(this._disposeTextures(),this._iblSource=e,e.isCube?e.isReadyOrNotBlocking()?this._recreateAssetsFromNewIbl(e):e.onLoadObservable.addOnce(this._recreateAssetsFromNewIbl.bind(this,e)):e.isReadyOrNotBlocking()?this._recreateAssetsFromNewIbl(e):e.onLoadObservable.addOnce(this._recreateAssetsFromNewIbl.bind(this,e)))}_recreateAssetsFromNewIbl(e){this._debugPass&&this._debugPass.dispose(),this._createTextures(),this._debugPass&&this._createDebugPass(),this._icdfxPT.onGeneratedObservable.addOnce(()=>{this.onReadyObservable.notifyObservers()})}getIcdfyTexture(){return this._icdfyPT}getIcdfxTexture(){return this._icdfxPT}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}get debugPassName(){return this._debugPassName}getDebugPassPP(){return this._debugPass||this._createDebugPass(),this._debugPass}constructor(e){this.debugEnabled=!1,this._debugSizeParams=new le(0,0,0,0),this._debugPassName="Importance Sample Debug",this.onReadyObservable=new N,this._scene=e,this._engine=e.getEngine()}_createTextures(){const e=this._iblSource?this._iblSource.getSize():{width:1,height:1};this._iblSource||(this._iblSource=bt.CreateRTexture(new Uint8Array([255]),1,1,this._scene,!1,!1,1,0),this._iblSource.name="Placeholder IBL Source"),this._iblSource.isCube&&(e.width*=4,e.height*=2);const t=this._engine.isWebGPU,s={generateDepthBuffer:!1,generateMipMaps:!1,format:6,type:1,samplingMode:1,shaderLanguage:t?1:0,extraInitializationsAsync:async()=>{t?await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zJ),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zL),__vite__mapDeps([0,1,2]))]):await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zK),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zM),__vite__mapDeps([0,1,2]))])}},i={generateDepthBuffer:!1,generateMipMaps:!1,format:6,type:2,samplingMode:1,shaderLanguage:t?1:0,extraInitializationsAsync:async()=>{t?await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zN),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zP),__vite__mapDeps([0,1,2]))]):await Promise.all([M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zO),__vite__mapDeps([0,1,2])),M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zQ),__vite__mapDeps([0,1,2]))])}};this._cdfyPT=new He("cdfyTexture",{width:e.width,height:e.height+1},"iblShadowsCdfy",this._scene,s,!1,!1),this._cdfyPT.autoClear=!1,this._cdfyPT.setTexture("iblSource",this._iblSource),this._cdfyPT.setInt("iblHeight",e.height),this._iblSource.isCube&&(this._cdfyPT.defines=`#define IBL_USE_CUBE_MAP
`),this._cdfyPT.refreshRate=0,this._icdfyPT=new He("icdfyTexture",{width:e.width,height:e.height},"iblShadowsIcdfy",this._scene,i,!1,!1),this._icdfyPT.autoClear=!1,this._icdfyPT.setTexture("cdfy",this._cdfyPT),this._icdfyPT.refreshRate=0,this._cdfxPT=new He("cdfxTexture",{width:e.width+1,height:1},"iblShadowsCdfx",this._scene,s,!1,!1),this._cdfxPT.autoClear=!1,this._cdfxPT.setTexture("cdfy",this._cdfyPT),this._cdfxPT.refreshRate=0,this._icdfxPT=new He("icdfxTexture",{width:e.width,height:1},"iblShadowsIcdfx",this._scene,i,!1,!1),this._icdfxPT.autoClear=!1,this._icdfxPT.setTexture("cdfx",this._cdfxPT),this._icdfxPT.refreshRate=0}_disposeTextures(){var e,t,s,i,a;(e=this._cdfyPT)==null||e.dispose(),(t=this._icdfyPT)==null||t.dispose(),(s=this._cdfxPT)==null||s.dispose(),(i=this._icdfxPT)==null||i.dispose(),(a=this._iblSource)==null||a.dispose()}_createDebugPass(){var i,a,r;this._debugPass&&this._debugPass.dispose();const e=this._engine.isWebGPU,t={width:this._scene.getEngine().getRenderWidth(),height:this._scene.getEngine().getRenderHeight(),samplingMode:j.BILINEAR_SAMPLINGMODE,engine:this._engine,textureType:0,uniforms:["sizeParams"],samplers:["cdfy","icdfy","cdfx","icdfx","iblSource"],defines:(i=this._iblSource)!=null&&i.isCube?`#define IBL_USE_CUBE_MAP
`:"",shaderLanguage:e?1:0,extraInitializations:(n,o)=>{n?o.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(h=>h.zR),__vite__mapDeps([0,1,2]))):o.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(h=>h.zS),__vite__mapDeps([0,1,2])))}};this._debugPass=new se(this._debugPassName,"iblShadowsImportanceSamplingDebug",t);const s=this._debugPass.getEffect();s&&(s.defines=(a=this._iblSource)!=null&&a.isCube?`#define IBL_USE_CUBE_MAP
`:""),(r=this._iblSource)!=null&&r.isCube&&this._debugPass.updateEffect(`#define IBL_USE_CUBE_MAP
`),this._debugPass.onApplyObservable.add(n=>{n.setTexture("cdfy",this._cdfyPT),n.setTexture("icdfy",this._icdfyPT),n.setTexture("cdfx",this._cdfxPT),n.setTexture("icdfx",this._icdfxPT),n.setTexture("iblSource",this._iblSource),n.setFloat4("sizeParams",this._debugSizeParams.x,this._debugSizeParams.y,this._debugSizeParams.z,this._debugSizeParams.w)})}isReady(){return this._iblSource&&this._iblSource.name!=="Placeholder IBL Source"&&this._iblSource.isReady()&&this._cdfyPT&&this._cdfyPT.isReady()&&this._icdfyPT&&this._icdfyPT.isReady()&&this._cdfxPT&&this._cdfxPT.isReady()&&this._icdfxPT&&this._icdfxPT.isReady()}dispose(){this._disposeTextures(),this._debugPass&&this._debugPass.dispose()}}class wi{getPassPP(){return this._outputPP}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}setWorldScale(e){this._worldScale=e}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){if(!this._debugPassPP){const e=this._engine.isWebGPU,t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:6,textureType:0,samplingMode:1,uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zw),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zv),__vite__mapDeps([0,1,2])))}};this._debugPassPP=new se(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTextureFromPostProcessOutput("debugSampler",this._outputPP),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e){this._worldScale=1,this._debugPassName="Spatial Blur Debug Pass",this.debugEnabled=!1,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._createTextures()}_createTextures(){const e=this._engine.isWebGPU,t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:7,textureType:0,samplingMode:1,uniforms:["blurParameters"],samplers:["shadowSampler","worldNormalSampler","linearDepthSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zx),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zy),__vite__mapDeps([0,1,2])))}};this._outputPP=new se("spacialBlurPP","iblShadowSpatialBlur",t),this._outputPP.autoClear=!1,this._outputPP.onApplyObservable.add(s=>{this._updatePostProcess(s)})}_updatePostProcess(e){e.setVector4("blurParameters",new le(1,this._worldScale,0,0));const s=this._scene.prePassRenderer;if(s){const i=s.getIndex(8),a=s.getIndex(5);i>=0&&e.setTexture("worldNormalSampler",s.getRenderTarget().textures[i]),a>=0&&e.setTexture("linearDepthSampler",s.getRenderTarget().textures[a])}}isReady(){return this._outputPP.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())}dispose(){this._outputPP.dispose(),this._debugPassPP&&this._debugPassPP.dispose()}}class Ii{getPassPP(){return this._outputPP}getDebugPassPP(){return this._debugPassPP||this._createDebugPass(),this._debugPassPP}get debugPassName(){return this._debugPassName}get remenance(){return this._remenance}set remenance(e){this._remenance=e}get reset(){return this._reset}set reset(e){this._reset=e}setDebugDisplayParams(e,t,s,i){this._debugSizeParams.set(e,t,s,i)}_createDebugPass(){if(!this._debugPassPP){const e=this._engine.isWebGPU,t={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:7,textureType:0,samplingMode:1,uniforms:["sizeParams"],samplers:["debugSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zw),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zv),__vite__mapDeps([0,1,2])))}};this._debugPassPP=new se(this.debugPassName,"iblShadowDebug",t),this._debugPassPP.autoClear=!1,this._debugPassPP.onApplyObservable.add(s=>{s.setTextureFromPostProcessOutput("debugSampler",this._outputPP),s.setVector4("sizeParams",this._debugSizeParams)})}}constructor(e){this.debugEnabled=!1,this._debugPassName="Shadow Accumulation Debug Pass",this._remenance=.9,this._reset=!0,this._debugSizeParams=new le(0,0,0,0),this._scene=e,this._engine=e.getEngine(),this._createTextures()}_createTextures(){const e=this._engine.isWebGPU,t={generateDepthBuffer:!1,generateMipMaps:!1,format:5,type:2,samplingMode:2};this._oldLocalPositionRT=new he("oldLocalPositionRT",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},this._scene,t);const s={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:5,textureType:2,samplingMode:1,engine:this._engine,reusable:!1,defines:"#define PASS_SAMPLER sampler",shaderLanguage:e?1:0,extraInitializations:(h,l)=>{h?l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zo),__vite__mapDeps([0,1,2]))):l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zn),__vite__mapDeps([0,1,2])))}},i=new se("Copy Local Position Texture","pass",s);i.autoClear=!1,i.onApplyObservable.add(h=>{const l=this._scene.prePassRenderer,u=l.getIndex(1);u>=0&&h.setTexture("textureSampler",l.getRenderTarget().textures[u])}),this._oldLocalPositionRT.addPostProcess(i),this._oldLocalPositionRT.skipInitialClear=!0,this._oldLocalPositionRT.noPrePassRenderer=!0,this._scene.customRenderTargets.push(this._oldLocalPositionRT);const a={generateDepthBuffer:!1,generateMipMaps:!1,format:7,type:2,samplingMode:1};this._oldAccumulationRT=new he("oldAccumulationRT",{width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()},this._scene,a);const r={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:7,textureType:2,samplingMode:1,engine:this._engine,reusable:!1,defines:"#define PASS_SAMPLER sampler",shaderLanguage:e?1:0,extraInitializations:(h,l)=>{h?l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zo),__vite__mapDeps([0,1,2]))):l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zn),__vite__mapDeps([0,1,2])))}},n=new se("Copy Accumulation Texture","pass",r);n.autoClear=!1,n.onApplyObservable.add(h=>{var l;(l=this._outputPP._outputTexture)!=null&&l.texture?h.setTextureFromPostProcessOutput("textureSampler",this._outputPP):h._bindTexture("textureSampler",this._outputPP.inputTexture.texture)}),this._oldAccumulationRT.addPostProcess(n),this._oldAccumulationRT.skipInitialClear=!0,this._oldAccumulationRT.noPrePassRenderer=!0,this._scene.customRenderTargets.push(this._oldAccumulationRT);const o={width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight(),textureFormat:7,textureType:2,samplingMode:1,uniforms:["accumulationParameters"],samplers:["oldAccumulationSampler","prevLocalPositionSampler","localPositionSampler","motionSampler"],engine:this._engine,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(h,l)=>{h?l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zz),__vite__mapDeps([0,1,2]))):l.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(u=>u.zA),__vite__mapDeps([0,1,2])))}};this._outputPP=new se("accumulationPassPP","iblShadowAccumulation",o),this._outputPP.autoClear=!1,this._outputPP.resize(this._engine.getRenderWidth(),this._engine.getRenderHeight()),this._outputPP.onApplyObservable.add(h=>{this._updatePostProcess(h)})}_updatePostProcess(e){e.setVector4("accumulationParameters",new le(this.remenance,this.reset?1:0,0,0)),e.setTexture("oldAccumulationSampler",this._oldAccumulationRT),e.setTexture("prevLocalPositionSampler",this._oldLocalPositionRT);const t=this._scene.prePassRenderer;if(t){const s=t.getIndex(1);s>=0&&e.setTexture("localPositionSampler",t.getRenderTarget().textures[s]);const i=t.getIndex(11);i>=0&&e.setTexture("motionSampler",t.getRenderTarget().textures[i])}this.reset=!1}resize(){this._oldAccumulationRT.resize({width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()}),this._oldLocalPositionRT.resize({width:this._engine.getRenderWidth(),height:this._engine.getRenderHeight()})}_disposeTextures(){this._oldAccumulationRT.dispose(),this._oldLocalPositionRT.dispose()}isReady(){return this._oldAccumulationRT&&this._oldAccumulationRT.isReadyForRendering()&&this._oldLocalPositionRT&&this._oldLocalPositionRT.isReadyForRendering()&&this._outputPP.isReady()&&!(this._debugPassPP&&!this._debugPassPP.isReady())}dispose(){this._disposeTextures(),this._outputPP.dispose(),this._debugPassPP&&this._debugPassPP.dispose()}}class Ei{constructor(){this.enabled=!0,this.name="iblShadows",this.texturesRequired=[5,10,8,11,1,9]}}class Va extends jt{get shadowOpacity(){return this._shadowOpacity}set shadowOpacity(e){this._shadowOpacity=e}get voxelShadowOpacity(){var e;return(e=this._voxelTracingPass)==null?void 0:e.voxelShadowOpacity}set voxelShadowOpacity(e){this._voxelTracingPass&&(this._voxelTracingPass.voxelShadowOpacity=e)}get ssShadowOpacity(){var e;return(e=this._voxelTracingPass)==null?void 0:e.ssShadowOpacity}set ssShadowOpacity(e){this._voxelTracingPass&&(this._voxelTracingPass.ssShadowOpacity=e)}get ssShadowSamples(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssSamples}set ssShadowSamples(e){this._voxelTracingPass&&(this._voxelTracingPass.sssSamples=e)}get ssShadowStride(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssStride}set ssShadowStride(e){this._voxelTracingPass&&(this._voxelTracingPass.sssStride=e)}get ssShadowMaxDist(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssMaxDist}set ssShadowMaxDist(e){this._voxelTracingPass&&(this._voxelTracingPass.sssMaxDist=e)}get ssShadowThickness(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sssThickness}set ssShadowThickness(e){this._voxelTracingPass&&(this._voxelTracingPass.sssThickness=e)}setIblTexture(e){this._importanceSamplingRenderer&&(this._importanceSamplingRenderer.iblSource=e)}getVoxelGridTexture(){var e;return(e=this._voxelRenderer)==null?void 0:e.getVoxelGrid()}getIcdfyTexture(){return this._importanceSamplingRenderer.getIcdfyTexture()}getIcdfxTexture(){return this._importanceSamplingRenderer.getIcdfxTexture()}get gbufferDebugEnabled(){return this._gbufferDebugEnabled}set gbufferDebugEnabled(e){if(e&&!this.allowDebugPasses){D.Warn("Can't enable G-Buffer debug view without setting allowDebugPasses to true.");return}this._gbufferDebugEnabled=e,e?this._enableEffect(this._getGBufferDebugPass().name,this.cameras):this._disableEffect(this._getGBufferDebugPass().name,this.cameras)}get importanceSamplingDebugEnabled(){var e;return(e=this._importanceSamplingRenderer)==null?void 0:e.debugEnabled}set importanceSamplingDebugEnabled(e){if(this._importanceSamplingRenderer){if(e&&!this.allowDebugPasses){D.Warn("Can't enable importance sampling debug view without setting allowDebugPasses to true.");return}e!==this._importanceSamplingRenderer.debugEnabled&&(this._importanceSamplingRenderer.debugEnabled=e,e?this._enableEffect(this._importanceSamplingRenderer.debugPassName,this.cameras):this._disableEffect(this._importanceSamplingRenderer.debugPassName,this.cameras))}}get voxelDebugEnabled(){var e;return(e=this._voxelRenderer)==null?void 0:e.voxelDebugEnabled}set voxelDebugEnabled(e){if(this._voxelRenderer){if(e&&!this.allowDebugPasses){D.Warn("Can't enable voxel debug view without setting allowDebugPasses to true.");return}this._voxelRenderer.voxelDebugEnabled=e,e?this._enableEffect(this._voxelRenderer.debugPassName,this.cameras):this._disableEffect(this._voxelRenderer.debugPassName,this.cameras)}}get voxelDebugAxis(){var e;return(e=this._voxelRenderer)==null?void 0:e.voxelDebugAxis}set voxelDebugAxis(e){this._voxelRenderer&&(this._voxelRenderer.voxelDebugAxis=e)}set voxelDebugDisplayMip(e){this._voxelRenderer&&this._voxelRenderer.setDebugMipNumber(e)}get voxelTracingDebugEnabled(){var e;return(e=this._voxelTracingPass)==null?void 0:e.debugEnabled}set voxelTracingDebugEnabled(e){if(this._voxelTracingPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable voxel tracing debug view without setting allowDebugPasses to true.");return}e!==this._voxelTracingPass.debugEnabled&&(this._voxelTracingPass.debugEnabled=e,e?this._enableEffect(this._voxelTracingPass.debugPassName,this.cameras):this._disableEffect(this._voxelTracingPass.debugPassName,this.cameras))}}get spatialBlurPassDebugEnabled(){var e;return(e=this._spatialBlurPass)==null?void 0:e.debugEnabled}set spatialBlurPassDebugEnabled(e){if(this._spatialBlurPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable spatial blur debug view without setting allowDebugPasses to true.");return}e!==this._spatialBlurPass.debugEnabled&&(this._spatialBlurPass.debugEnabled=e,e?this._enableEffect(this._spatialBlurPass.debugPassName,this.cameras):this._disableEffect(this._spatialBlurPass.debugPassName,this.cameras))}}get accumulationPassDebugEnabled(){var e;return(e=this._accumulationPass)==null?void 0:e.debugEnabled}set accumulationPassDebugEnabled(e){if(this._accumulationPass){if(e&&!this.allowDebugPasses){D.Warn("Can't enable accumulation pass debug view without setting allowDebugPasses to true.");return}e!==this._accumulationPass.debugEnabled&&(this._accumulationPass.debugEnabled=e,e?this._enableEffect(this._accumulationPass.debugPassName,this.cameras):this._disableEffect(this._accumulationPass.debugPassName,this.cameras))}}addExcludedMesh(e){this._excludedMeshes.indexOf(e.uniqueId)===-1&&this._excludedMeshes.push(e.uniqueId)}removeExcludedMesh(e){const t=this._excludedMeshes.indexOf(e.uniqueId);t!==-1&&this._excludedMeshes.splice(t,1)}get resolutionExp(){return this._voxelRenderer.voxelResolutionExp}set resolutionExp(e){if(e!==this._voxelRenderer.voxelResolutionExp){if(this._voxelRenderer.isVoxelizationInProgress()){D.Warn("Can't change the resolution of the voxel grid while voxelization is in progress.");return}this._voxelRenderer.voxelResolutionExp=e,this.updateVoxelization(),this._accumulationPass.reset=!0}}get sampleDirections(){var e;return(e=this._voxelTracingPass)==null?void 0:e.sampleDirections}set sampleDirections(e){this._voxelTracingPass&&(this._voxelTracingPass.sampleDirections=e)}get shadowRemenance(){var e;return(e=this._accumulationPass)==null?void 0:e.remenance}set shadowRemenance(e){this._accumulationPass&&(this._accumulationPass.remenance=e)}get envRotation(){var e;return(e=this._voxelTracingPass)==null?void 0:e.envRotation}set envRotation(e){this._voxelTracingPass&&(this._voxelTracingPass.envRotation=e)}get allowDebugPasses(){return this._allowDebugPasses}set allowDebugPasses(e){this._allowDebugPasses!==e&&(this._allowDebugPasses=e,e?this._importanceSamplingRenderer.isReady()?this._createDebugPasses():this._importanceSamplingRenderer.onReadyObservable.addOnce(()=>{this._createDebugPasses()}):this._disposeDebugPasses())}static get IsSupported(){const e=et.LastCreatedEngine;return e?e._features.supportIBLShadows:!1}constructor(e,t,s={},i){if(super(t.getEngine(),e),this._voxelizationDirty=!0,this._boundsNeedUpdate=!0,this._allowDebugPasses=!1,this._debugPasses=[],this._excludedMeshes=[],this._shadowOpacity=.75,this._enabled=!0,this.voxelGridSize=1,this._gbufferDebugEnabled=!1,this._gBufferDebugSizeParams=new le(0,0,0,0),this.scene=t,!t.enablePrePassRenderer()){D.Warn("IBL Shadows Render Pipeline could not enable PrePass, aborting.");return}this.shadowOpacity=s.shadowOpacity||.75,this._prePassEffectConfiguration=new Ei,this._voxelRenderer=new Ai(this.scene,this,s?s.resolutionExp:6,s.triPlanarVoxelization!==void 0?s.triPlanarVoxelization:!0),this._importanceSamplingRenderer=new Ci(this.scene),this._voxelTracingPass=new Di(this.scene,this),this.sampleDirections=s.sampleDirections||2,this.voxelShadowOpacity=s.voxelShadowOpacity||1,this.ssShadowOpacity=s.ssShadowsEnabled===void 0||s.ssShadowsEnabled?1:0,this.ssShadowMaxDist=s.ssShadowMaxDist||.05,this.ssShadowSamples=s.ssShadowSampleCount||16,this.ssShadowStride=s.ssShadowStride||8,this.ssShadowThickness=s.ssShadowThickness||.5,this._spatialBlurPass=new wi(this.scene),this._accumulationPass=new Ii(this.scene),this.shadowRemenance=s.shadowRemenance||.75,this._noiseTexture=new j("https://assets.babylonjs.com/textures/blue_noise/blue_noise_rgb.png",this.scene,!1,!0,1),this.scene.environmentTexture&&(this._importanceSamplingRenderer.iblSource=this.scene.environmentTexture),this._createShadowCombinePostProcess(),t.postProcessRenderPipelineManager.addPipeline(this),this.scene.onNewMeshAddedObservable.add(this.updateSceneBounds.bind(this)),this.scene.onMeshRemovedObservable.add(this.updateSceneBounds.bind(this)),this.scene.onActiveCameraChanged.add(this._listenForCameraChanges.bind(this)),this.scene.onBeforeRenderObservable.add(this._updateBeforeRender.bind(this)),this._listenForCameraChanges(),this.scene.getEngine().onResizeObservable.add(this._handleResize.bind(this)),this._importanceSamplingRenderer.onReadyObservable.addOnce(()=>{this._createEffectPasses(i);const a=()=>{this._voxelRenderer.isReady()?(this.toggleShadow(this._enabled),this._enabled&&(this._voxelizationDirty=!0)):setTimeout(()=>{a()},16)};a()})}toggleShadow(e){this._enabled=e,e?(this._enableEffect("IBLShadowVoxelTracingPass",this.cameras),this._enableEffect("IBLShadowSpatialBlurPass",this.cameras),this._enableEffect("IBLShadowAccumulationBlurPass",this.cameras),this._enableEffect("IBLShadowCompositePass",this.cameras)):(this._disableEffect("IBLShadowVoxelTracingPass",null),this._disableEffect("IBLShadowSpatialBlurPass",null),this._disableEffect("IBLShadowAccumulationBlurPass",null),this._disableEffect("IBLShadowCompositePass",null))}_handleResize(){var e;this._voxelRenderer.resize(),(e=this._accumulationPass)==null||e.resize()}_createShadowCombinePostProcess(){const e=this.engine.isWebGPU,t={width:this.scene.getEngine().getRenderWidth(),height:this.scene.getEngine().getRenderHeight(),uniforms:["shadowOpacity"],samplers:["sceneTexture"],samplingMode:2,engine:this.scene.getEngine(),textureType:0,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(s,i)=>{s?i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zC),__vite__mapDeps([0,1,2]))):i.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(a=>a.zB),__vite__mapDeps([0,1,2])))}};this._shadowCompositePP=new se("iblShadowsCombine","iblShadowsCombine",t),this._shadowCompositePP.autoClear=!1,this._shadowCompositePP.onApplyObservable.add(s=>{var i,a,r,n,o;s.setTextureFromPostProcess("sceneTexture",this._voxelTracingPass.getPassPP()),s.setFloat("shadowOpacity",this._shadowOpacity),(i=this._importanceSamplingRenderer)!=null&&i.isReady()&&((a=this._voxelRenderer)!=null&&a.isReady())&&((r=this._voxelTracingPass)!=null&&r.isReady())&&((n=this._spatialBlurPass)!=null&&n.isReady())&&((o=this._accumulationPass)!=null&&o.isReady())&&this.update()}),this._shadowCompositePP._prePassEffectConfiguration=this._prePassEffectConfiguration}_createEffectPasses(e){this.addEffect(new Oe(this.scene.getEngine(),"IBLShadowVoxelTracingPass",()=>this._voxelTracingPass.getPassPP(),!0)),this.addEffect(new Oe(this.scene.getEngine(),"IBLShadowSpatialBlurPass",()=>this._spatialBlurPass.getPassPP(),!0)),this.addEffect(new Oe(this.scene.getEngine(),"IBLShadowAccumulationBlurPass",()=>this._accumulationPass.getPassPP(),!0)),this.addEffect(new Oe(this.scene.getEngine(),"IBLShadowCompositePass",()=>this._shadowCompositePP,!0)),e&&this.scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(this.name,e),this.toggleShadow(!1),this._enabled=!0}_getGBufferDebugPass(){if(this._gbufferDebugPass)return this._gbufferDebugPass;const e=this.engine.isWebGPU,t=this._prePassEffectConfiguration.texturesRequired.map(i=>It.TextureFormats[i].name.toString()),s={width:this.scene.getEngine().getRenderWidth(),height:this.scene.getEngine().getRenderHeight(),samplingMode:1,engine:this.scene.getEngine(),textureType:0,textureFormat:5,uniforms:["sizeParams"],samplers:t,reusable:!1,shaderLanguage:e?1:0,extraInitializations:(i,a)=>{i?a.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zI),__vite__mapDeps([0,1,2]))):a.push(M(()=>import("./flowGraphSceneTickEventBlock-YCfZJfc8.js").then(r=>r.zH),__vite__mapDeps([0,1,2])))}};return this._gbufferDebugPass=new se("iblShadowGBufferDebug","iblShadowGBufferDebug",s),this._gbufferDebugPass.autoClear=!1,this._gbufferDebugPass.onApplyObservable.add(i=>{this._prePassEffectConfiguration.texturesRequired.forEach(a=>{const r=this.scene.prePassRenderer;if(!r){D.Error("Can't enable G-Buffer debug rendering since prepassRenderer doesn't exist.");return}const n=r.getIndex(a);n>=0&&i.setTexture(It.TextureFormats[a].name,r.getRenderTarget().textures[n])}),i.setVector4("sizeParams",this._gBufferDebugSizeParams),this.scene.activeCamera&&i.setFloat("maxDepth",this.scene.activeCamera.maxZ)}),this._gbufferDebugPass}_createDebugPasses(){var t,s,i,a,r;this._debugPasses=[{pass:(t=this._importanceSamplingRenderer)==null?void 0:t.getDebugPassPP(),enabled:this.importanceSamplingDebugEnabled},{pass:(s=this._voxelRenderer)==null?void 0:s.getDebugPassPP(),enabled:this.voxelDebugEnabled},{pass:(i=this._voxelTracingPass)==null?void 0:i.getDebugPassPP(),enabled:this.voxelTracingDebugEnabled},{pass:(a=this._spatialBlurPass)==null?void 0:a.getDebugPassPP(),enabled:this.spatialBlurPassDebugEnabled},{pass:(r=this._accumulationPass)==null?void 0:r.getDebugPassPP(),enabled:this.accumulationPassDebugEnabled},{pass:this._getGBufferDebugPass(),enabled:this.gbufferDebugEnabled}];for(let n=0;n<this._debugPasses.length;n++)this._debugPasses[n].pass&&this.addEffect(new Oe(this.scene.getEngine(),this._debugPasses[n].pass.name,()=>this._debugPasses[n].pass,!0));const e=this.cameras.slice();this.scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this.name,this.cameras),this.scene.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(this.name,e);for(let n=0;n<this._debugPasses.length;n++)this._debugPasses[n].pass&&(this._debugPasses[n].enabled?this._enableEffect(this._debugPasses[n].pass.name,this.cameras):this._disableEffect(this._debugPasses[n].pass.name,this.cameras))}_disposeEffectPasses(){this.scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this.name,this.cameras),this._disableEffect("IBLShadowVoxelTracingPass",this.cameras),this._disableEffect("IBLShadowSpatialBlurPass",this.cameras),this._disableEffect("IBLShadowAccumulationBlurPass",this.cameras),this._disableEffect("IBLShadowCompositePass",this.cameras),this._disposeDebugPasses(),this._reset()}_disposeDebugPasses(){for(let e=0;e<this._debugPasses.length;e++)this._disableEffect(this._debugPasses[e].pass.name,this.cameras),this._debugPasses[e].pass.dispose();this._debugPasses=[]}_updateDebugPasses(){let e=0;this._gbufferDebugEnabled&&e++,this.importanceSamplingDebugEnabled&&e++,this.voxelDebugEnabled&&e++,this.voxelTracingDebugEnabled&&e++,this.spatialBlurPassDebugEnabled&&e++,this.accumulationPassDebugEnabled&&e++;const t=Math.ceil(Math.sqrt(e)),s=Math.ceil(e/t),i=1/s,a=1/t;let r=0,n=0;if(this.gbufferDebugEnabled){if(!this.scene.prePassRenderer){D.Error("Can't enable G-Buffer debug rendering since prepassRenderer doesn't exist.");return}this._gBufferDebugSizeParams.set(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)}this.importanceSamplingDebugEnabled&&(this._importanceSamplingRenderer.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.voxelDebugEnabled&&(this._voxelRenderer.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.voxelTracingDebugEnabled&&(this._voxelTracingPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.spatialBlurPassDebugEnabled&&(this._spatialBlurPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a)),this.accumulationPassDebugEnabled&&(this._accumulationPass.setDebugDisplayParams(r,n,s,t),r-=i,r<=-1&&(r=0,n-=a))}updateVoxelization(){this._voxelizationDirty=!0}updateSceneBounds(){this._voxelizationDirty=!0,this._boundsNeedUpdate=!0}_updateBeforeRender(){this._updateDebugPasses()}_listenForCameraChanges(){this.scene.activeCamera instanceof Et&&this.scene.onBeforeCameraRenderObservable.add(e=>{e instanceof Et?e.inertialAlphaOffset!==0||e.inertialBetaOffset!==0||e.inertialRadiusOffset!==0||e.inertialPanningX!==0||e.inertialPanningY:e instanceof Xs&&(e.cameraDirection.x!==0||e.cameraDirection.y!==0||e.cameraDirection.z!==0||e.cameraRotation.x!==0||e.cameraRotation.y),this._accumulationPass})}setPrePassRenderer(e){return!!e.addEffectConfiguration(this._prePassEffectConfiguration)}isReady(){return this._noiseTexture.isReady()&&this._voxelRenderer.isReady()&&this._importanceSamplingRenderer.isReady()&&(!this._voxelTracingPass||this._voxelTracingPass.isReady())&&(!this._spatialBlurPass||this._spatialBlurPass.isReady())&&(!this._accumulationPass||this._accumulationPass.isReady())}update(){var e,t;if(!this._voxelRenderer.isVoxelizationInProgress()){if(this._boundsNeedUpdate){const s=this.scene.getWorldExtends(h=>h instanceof oe&&this._excludedMeshes.indexOf(h.uniqueId)===-1),i=s.max.subtract(s.min);if(this.voxelGridSize=Math.max(i.x,Math.max(i.y,i.z)),!isFinite(this.voxelGridSize)||this.voxelGridSize===0){D.Warn("IBL Shadows: Scene size is invalid. Can't update bounds."),this._boundsNeedUpdate=!1,this.voxelGridSize=1;return}const a=this.voxelGridSize/2,r=s.max.add(s.min).multiplyByFloats(-.5,-.5,-.5),n=C.Compose(new c(1/a,1/a,1/a),new y,new c(0,0,0));C.Compose(new c(1,1,1),new y,r).multiplyToRef(n,n),(e=this._voxelTracingPass)==null||e.setWorldScaleMatrix(n),this._voxelRenderer.setWorldScaleMatrix(n),(t=this._spatialBlurPass)==null||t.setWorldScale(a*2),this._boundsNeedUpdate=!1,this.ssShadowMaxDist=1.1*this.voxelGridSize/(1<<this.resolutionExp)}this._voxelizationDirty&&(this._voxelRenderer.updateVoxelGrid(this._excludedMeshes),this._voxelizationDirty=!1,this.ssShadowMaxDist=1.1*this.voxelGridSize/(1<<this.resolutionExp))}}getClassName(){return"IBLShadowsRenderPipeline"}dispose(){var e,t,s;this._disposeEffectPasses(),this._noiseTexture.dispose(),this._voxelRenderer.dispose(),this._importanceSamplingRenderer.dispose(),(e=this._voxelTracingPass)==null||e.dispose(),(t=this._spatialBlurPass)==null||t.dispose(),(s=this._accumulationPass)==null||s.dispose(),super.dispose()}}class za{constructor(e){this.numSamples=400,this.radius=.1,this.intensity=.1,this.edgeArtifactCorrection=.1,this.rotateSample=!0,this.noiseFactor=100,this.useFullTexture=!1,this.rsm=e}dispose(){this.rsm.dispose()}}class Ga extends Ys{constructor(e,t,s,i,a=null,r=.01,n=j.TRILINEAR_SAMPLINGMODE,o){super(e,t,s,64,i,r,n,!0,a,o),this.name=e}}class Fi{get resolve(){return this._resolve}get reject(){return this._reject}constructor(){this.promise=new Promise((e,t)=>{this._resolve=e,this._reject=t})}}class La{constructor(e,t){this._meshesOrigins=[],this._toCenterVectors=[],this._scaledDirection=new c(1,1,1),this._newPosition=c.Zero(),this._centerPosition=c.Zero(),this._meshes=e.slice(),t?this._centerMesh=t:this._setCenterMesh(),this._centerMesh.computeWorldMatrix(!0);const s=this._meshes.indexOf(this._centerMesh);s>=0&&this._meshes.splice(s,1),this._centerPosition=this._centerMesh.getAbsolutePosition().clone();for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const a=this._meshes[i];this._meshesOrigins[i]=a.getAbsolutePosition().clone(),this._toCenterVectors[i]=c.Zero(),a.hasBoundingInfo&&this._centerMesh.hasBoundingInfo&&(a.computeWorldMatrix(!0),a.getBoundingInfo().boundingBox.centerWorld.subtractToRef(this._centerMesh.getBoundingInfo().boundingBox.centerWorld,this._toCenterVectors[i]))}}_setCenterMesh(){let e=c.Zero();const t=c.Zero();let s=Number.MAX_VALUE;for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const r=this._meshes[i].getBoundingInfo();r&&t.addInPlace(r.boundingBox.centerWorld)}e=t.scale(1/this._meshes.length);for(let i=0;i<this._meshes.length;i++)if(this._meshes[i]){const a=this._meshes[i],r=a.getBoundingInfo();if(r){const n=r.boundingBox.centerWorld.subtract(e).lengthSquared();n<s&&(this._centerMesh=a,s=n)}}}getClassName(){return"MeshExploder"}getMeshes(){const e=this._meshes.slice();return e.unshift(this._centerMesh),e}explode(e=1){for(let t=0;t<this._meshes.length;t++)this._meshes[t]&&this._meshesOrigins[t]&&this._toCenterVectors[t]&&(this._toCenterVectors[t].scaleToRef(e,this._scaledDirection),this._meshesOrigins[t].addToRef(this._scaledDirection,this._newPosition),this._meshes[t].setAbsolutePosition(this._newPosition));this._centerMesh.setAbsolutePosition(this._centerPosition)}}class is{static get FilesToLoad(){return Ks.FilesToLoad}constructor(e,t,s,i,a,r,n,o,h,l=!1){this.useAppend=l,this.onProcessFileCallback=()=>!0,this.displayLoadingUI=!0,this.loadAsync=(u,g)=>this.useAppend?ht.AppendAsync("file:",u,this._currentScene,g):ht.LoadAsync("file:",u,this._engine,g),this._engine=e,this._currentScene=t,this._sceneLoadedCallback=s,this._progressCallback=i,this._additionalRenderLoopLogicCallback=a,this._textureLoadingCallback=r,this._startingProcessingFilesCallback=n,this._onReloadCallback=o,this._errorCallback=h}monitorElementForDragNDrop(e){e&&(this._elementToMonitor=e,this._dragEnterHandler=t=>{this._drag(t)},this._dragOverHandler=t=>{this._drag(t)},this._dropHandler=t=>{this._drop(t)},this._elementToMonitor.addEventListener("dragenter",this._dragEnterHandler,!1),this._elementToMonitor.addEventListener("dragover",this._dragOverHandler,!1),this._elementToMonitor.addEventListener("drop",this._dropHandler,!1))}get filesToLoad(){return this._filesToLoad}dispose(){this._elementToMonitor&&(this._elementToMonitor.removeEventListener("dragenter",this._dragEnterHandler),this._elementToMonitor.removeEventListener("dragover",this._dragOverHandler),this._elementToMonitor.removeEventListener("drop",this._dropHandler))}_renderFunction(){if(this._additionalRenderLoopLogicCallback&&this._additionalRenderLoopLogicCallback(),this._currentScene){if(this._textureLoadingCallback){const e=this._currentScene.getWaitingItemsCount();e>0&&this._textureLoadingCallback(e)}this._currentScene.render()}}_drag(e){e.stopPropagation(),e.preventDefault()}_drop(e){e.stopPropagation(),e.preventDefault(),this.loadFiles(e)}_traverseFolder(e,t,s,i){const a=e.createReader(),r=e.fullPath.replace(/^\//,"").replace(/(.+?)\/?$/,"$1/");a.readEntries(n=>{s.count+=n.length;for(const o of n)o.isFile?o.file(h=>{h.correctName=r+h.name,t.push(h),--s.count===0&&i()}):o.isDirectory&&this._traverseFolder(o,t,s,i);--s.count===0&&i()})}_processFiles(e){for(let t=0;t<e.length;t++){const s=e[t].correctName.toLowerCase(),i=s.split(".").pop();this.onProcessFileCallback(e[t],s,i,a=>this._sceneFileToLoad=a)&&(ht.IsPluginForExtensionAvailable("."+i)&&(this._sceneFileToLoad=e[t]),is.FilesToLoad[s]=e[t])}}loadFiles(e){if(e&&e.dataTransfer&&e.dataTransfer.files&&(this._filesToLoad=e.dataTransfer.files),e&&e.target&&e.target.files&&(this._filesToLoad=e.target.files),!(!this._filesToLoad||this._filesToLoad.length===0)&&(this._startingProcessingFilesCallback&&this._startingProcessingFilesCallback(this._filesToLoad),this._filesToLoad&&this._filesToLoad.length>0)){const t=[],s=[],i=e.dataTransfer?e.dataTransfer.items:null;for(let a=0;a<this._filesToLoad.length;a++){const r=this._filesToLoad[a],n=r.name.toLowerCase();let o;if(r.correctName=n,i){const h=i[a];h.getAsEntry?o=h.getAsEntry():h.webkitGetAsEntry&&(o=h.webkitGetAsEntry())}o&&o.isDirectory?s.push(o):t.push(r)}if(s.length===0)this._processFiles(t),this._processReload();else{const a={count:s.length};for(const r of s)this._traverseFolder(r,t,a,()=>{this._processFiles(t),a.count===0&&this._processReload()})}}}_processReload(){this._onReloadCallback?this._onReloadCallback(this._sceneFileToLoad):this.reload()}reload(){if(this._sceneFileToLoad)this.useAppend||this._currentScene&&(D.errorsCount>0&&D.ClearLogCache(),this._engine.stopRenderLoop()),ht.ShowLoadingScreen=!1,this.displayLoadingUI&&this._engine.displayLoadingUI(),this.loadAsync(this._sceneFileToLoad,this._progressCallback).then(e=>{this.useAppend?this.displayLoadingUI&&this._engine.hideLoadingUI():(this._currentScene&&this._currentScene.dispose(),this._currentScene=e,this._currentScene.executeWhenReady(()=>{this.displayLoadingUI&&this._engine.hideLoadingUI(),this._engine.runRenderLoop(()=>{this._renderFunction()})})),this._sceneLoadedCallback&&this._currentScene&&this._sceneLoadedCallback(this._sceneFileToLoad,this._currentScene)}).catch(e=>{this.displayLoadingUI&&this._engine.hideLoadingUI(),this._errorCallback&&this._errorCallback(this._sceneFileToLoad,this._currentScene,e.message)});else{if(this._filesToLoad.length===1){const t=this._filesToLoad[0].name.toLowerCase().split(".").pop();if(t)switch(t.toLowerCase()){case"dds":case"env":case"hdr":return}}D.Error("Please provide a valid .babylon file.")}}}class Na{constructor(e){this.byteOffset=0,this.buffer=e}loadAsync(e){return this.buffer.readAsync(this.byteOffset,e).then(t=>{this._dataView=new DataView(t.buffer,t.byteOffset,t.byteLength),this._dataByteOffset=0})}readUint32(){const e=this._dataView.getUint32(this._dataByteOffset,!0);return this._dataByteOffset+=4,this.byteOffset+=4,e}readUint8Array(e){const t=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._dataByteOffset,e);return this._dataByteOffset+=e,this.byteOffset+=e,t}readString(e){return Js(this.readUint8Array(e))}skipBytes(e){this._dataByteOffset+=e,this.byteOffset+=e}}class Wa{constructor(){this._trackedScene=null}track(e){this._trackedScene=e,Ye.AllowLoadingUniqueId=!0,this._savedJSON=Ft.Serialize(e),Ye.AllowLoadingUniqueId=!1}getDelta(){if(!this._trackedScene)return null;const e=j.ForceSerializeBuffers;j.ForceSerializeBuffers=!1,Ye.AllowLoadingUniqueId=!0;const t=Ft.Serialize(this._trackedScene);Ye.AllowLoadingUniqueId=!1;const s={};for(const i in t)this._compareCollections(i,this._savedJSON[i],t[i],s);return j.ForceSerializeBuffers=e,s}_compareArray(e,t,s,i){if(t.length===0&&s.length===0)return!0;if(t.length&&!isNaN(t[0])||s.length&&!isNaN(s[0])){if(t.length!==s.length)return!1;if(t.length===0)return!0;for(let r=0;r<t.length;r++)if(t[r]!==s[r])return i[e]=s,!1;return!0}const a=[];for(let r=0;r<t.length;r++){const n=t[r],o=n.uniqueId;a.push(o);const h=s.filter(l=>l.uniqueId===o);if(h.length){const l=h[0],u={};this._compareObjects(n,l,u)||(i[e]||(i[e]=[]),u.__state={id:l.id||l.name},i[e].push(u))}else{const l={__state:{deleteId:n.id||n.name}};i[e]||(i[e]=[]),i[e].push(l)}}for(let r=0;r<s.length;r++){const n=s[r],o=n.uniqueId;a.indexOf(o)===-1&&(i[e]||(i[e]=[]),i[e].push(n))}return!0}_compareObjects(e,t,s){let i=!1;for(const a in e){if(!Object.prototype.hasOwnProperty.call(e,a))continue;const r=e[a],n=t[a];let o=!1;if(Array.isArray(r))o=JSON.stringify(r)!==JSON.stringify(n);else if(!isNaN(r)||Object.prototype.toString.call(r)=="[object String]")o=r!==n;else if(typeof r=="object"&&typeof n=="object"){const h={};this._compareObjects(r,n,h)||(s[a]=h,i=!0)}o&&(i=!0,s[a]=n)}return!i}_compareCollections(e,t,s,i){if(t!==s&&t&&s){if(Array.isArray(t)&&Array.isArray(s)){if(this._compareArray(e,t,s,i))return}else if(typeof t=="object"&&typeof s=="object"){const a={};this._compareObjects(t,s,a)||(i[e]=a);return}}}static GetShadowGeneratorById(e,t){const s=e.lights.map(i=>i.getShadowGenerators());for(const i of s)if(i){const a=i.values();for(let r=a.next();r.done!==!0;r=a.next()){const n=r.value;if(n&&n.id===t)return n}}return null}static ApplyDelta(e,t){typeof e=="string"&&(e=JSON.parse(e));const s=t;for(const i in e){const a=e[i],r=s[i];if(Array.isArray(r)||i==="shadowGenerators")switch(i){case"cameras":this._ApplyDeltaForEntity(a,t,t.getCameraById.bind(t),n=>lt.Parse(n,t));break;case"lights":this._ApplyDeltaForEntity(a,t,t.getLightById.bind(t),n=>ii.Parse(n,t));break;case"shadowGenerators":this._ApplyDeltaForEntity(a,t,n=>this.GetShadowGeneratorById(t,n),n=>si.Parse(n,t));break;case"meshes":this._ApplyDeltaForEntity(a,t,t.getMeshById.bind(t),n=>oe.Parse(n,t,""));break;case"skeletons":this._ApplyDeltaForEntity(a,t,t.getSkeletonById.bind(t),n=>Wt.Parse(n,t));break;case"materials":this._ApplyDeltaForEntity(a,t,t.getMaterialById.bind(t),n=>ti.Parse(n,t,""));break;case"multiMaterials":this._ApplyDeltaForEntity(a,t,t.getMaterialById.bind(t),n=>mt.Parse(n,t,""));break;case"transformNodes":this._ApplyDeltaForEntity(a,t,t.getTransformNodeById.bind(t),n=>X.Parse(n,t,""));break;case"particleSystems":this._ApplyDeltaForEntity(a,t,t.getParticleSystemById.bind(t),n=>ei.Parse(n,t,""));break;case"morphTargetManagers":this._ApplyDeltaForEntity(a,t,t.getMorphTargetById.bind(t),n=>$s.Parse(n,t));break;case"postProcesses":this._ApplyDeltaForEntity(a,t,t.getPostProcessByName.bind(t),n=>se.Parse(n,t,""));break}else isNaN(r)?r.fromArray&&r.fromArray(a):s[i]=a}}static _ApplyPropertiesToEntity(e,t){for(const s in e){const i=e[s],a=t[s];a!==void 0&&(!isNaN(a)||Array.isArray(a)?t[s]=i:a.fromArray?a.fromArray(i):typeof a=="object"&&a!==null&&this._ApplyPropertiesToEntity(i,a))}}static _ApplyDeltaForEntity(e,t,s,i){for(const a of e)if(a.__state&&a.__state.id!==void 0){const r=s(a.__state.id);r&&(this._ApplyPropertiesToEntity(a,r),Ye.ParseProperties(a,r,t,null))}else if(a.__state&&a.__state.deleteId!==void 0){const r=s(a.__state.deleteId);r==null||r.dispose()}else i(a)}}class Pt{constructor(e){this._observer=null,this._currentState=[],this.onPressureChanged=new N,Pt.IsAvailable&&(this._observer=new PressureObserver(t=>{this._currentState=t,this.onPressureChanged.notifyObservers(t)},e))}static get IsAvailable(){return typeof PressureObserver<"u"&&PressureObserver.knownSources&&PressureObserver.knownSources.includes("cpu")}observe(e){var t;try{(t=this._observer)==null||t.observe(e),this.onPressureChanged.notifyObservers(this._currentState)}catch{}}unobserve(e){var t;try{(t=this._observer)==null||t.unobserve(e)}catch{}}dispose(){var e;(e=this._observer)==null||e.disconnect(),this._observer=null,this.onPressureChanged.clear()}}const de=()=>{};class Ha{static FpsStrategy(){return e=>{const t=e.getEngine();return{id:"FPS",getData:()=>t.getFps(),dispose:de}}}static ThermalStrategy(){return this._PressureStrategy("Thermal utilization","thermal")}static PowerSupplyStrategy(){return this._PressureStrategy("Power supply utilization","power-supply")}static PressureStrategy(){return this._PressureStrategy("Pressure")}static _PressureStrategy(e,t=null){return()=>{let s=0;const i=new Pt;return i.observe("cpu"),i.onPressureChanged.add(a=>{var r;for(const n of a)if(t&&n.factors.includes(t)||!t&&(((r=n.factors)==null?void 0:r.length)??0)===0)switch(n.state){case"nominal":s=0;break;case"fair":s=.25;break;case"serious":s=.5;break;case"critical":s=1;break}}),{id:e,getData:()=>s,dispose:()=>i.dispose()}}}static TotalMeshesStrategy(){return e=>({id:"Total meshes",getData:()=>e.meshes.length,dispose:de})}static ActiveMeshesStrategy(){return e=>({id:"Active meshes",getData:()=>e.getActiveMeshes().length,dispose:de})}static ActiveIndicesStrategy(){return e=>({id:"Active indices",getData:()=>e.getActiveIndices(),dispose:de})}static ActiveFacesStrategy(){return e=>({id:"Active faces",getData:()=>e.getActiveIndices()/3,dispose:de})}static ActiveBonesStrategy(){return e=>({id:"Active bones",getData:()=>e.getActiveBones(),dispose:de})}static ActiveParticlesStrategy(){return e=>({id:"Active particles",getData:()=>e.getActiveParticles(),dispose:de})}static DrawCallsStrategy(){return e=>{let t=0;const s=e.onBeforeAnimationsObservable.add(()=>{e.getEngine()._drawCalls.fetchNewFrame()}),i=e.onAfterRenderObservable.add(()=>{t=e.getEngine()._drawCalls.current});return{id:"Draw calls",getData:()=>t,dispose:()=>{e.onBeforeAnimationsObservable.remove(s),e.onAfterRenderObservable.remove(i)}}}}static TotalLightsStrategy(){return e=>({id:"Total lights",getData:()=>e.lights.length,dispose:de})}static TotalVerticesStrategy(){return e=>({id:"Total vertices",getData:()=>e.getTotalVertices(),dispose:de})}static TotalMaterialsStrategy(){return e=>({id:"Total materials",getData:()=>e.materials.length,dispose:de})}static TotalTexturesStrategy(){return e=>({id:"Total textures",getData:()=>e.textures.length,dispose:de})}static AbsoluteFpsStrategy(){return e=>{const t=new fi(e);return t.captureFrameTime=!0,{id:"Absolute FPS",getData:()=>1e3/t.frameTimeCounter.lastSecAverage,dispose:de}}}static MeshesSelectionStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeActiveMeshesEvaluationObservable.add(()=>{t=H.Now}),a=e.onAfterActiveMeshesEvaluationObservable.add(()=>{s=H.Now-t});return{id:"Meshes Selection",getData:()=>s,dispose:()=>{e.onBeforeActiveMeshesEvaluationObservable.remove(i),e.onAfterActiveMeshesEvaluationObservable.remove(a)}}}}static RenderTargetsStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeRenderTargetsRenderObservable.add(()=>{t=H.Now}),a=e.onAfterRenderTargetsRenderObservable.add(()=>{s=H.Now-t});return{id:"Render Targets",getData:()=>s,dispose:()=>{e.onBeforeRenderTargetsRenderObservable.remove(i),e.onAfterRenderTargetsRenderObservable.remove(a)}}}}static ParticlesStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeParticlesRenderingObservable.add(()=>{t=H.Now}),a=e.onAfterParticlesRenderingObservable.add(()=>{s=H.Now-t});return{id:"Particles",getData:()=>s,dispose:()=>{e.onBeforeParticlesRenderingObservable.remove(i),e.onAfterParticlesRenderingObservable.remove(a)}}}}static SpritesStrategy(){return e=>{var r,n;let t=H.Now,s=0;const i=(r=e.onBeforeSpritesRenderingObservable)==null?void 0:r.add(()=>{t=H.Now}),a=(n=e.onAfterSpritesRenderingObservable)==null?void 0:n.add(()=>{s=H.Now-t});return{id:"Sprites",getData:()=>s,dispose:()=>{var o,h;(o=e.onBeforeSpritesRenderingObservable)==null||o.remove(i),(h=e.onAfterSpritesRenderingObservable)==null||h.remove(a)}}}}static AnimationsStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{t=H.Now}),a=e.onAfterAnimationsObservable.add(()=>{s=H.Now-t});return{id:"Animations",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterAnimationsObservable.remove(a)}}}}static PhysicsStrategy(){return e=>{var r,n;let t=H.Now,s=0;const i=(r=e.onBeforePhysicsObservable)==null?void 0:r.add(()=>{t=H.Now}),a=(n=e.onAfterPhysicsObservable)==null?void 0:n.add(()=>{s=H.Now-t});return{id:"Physics",getData:()=>s,dispose:()=>{var o,h;(o=e.onBeforePhysicsObservable)==null||o.remove(i),(h=e.onAfterPhysicsObservable)==null||h.remove(a)}}}}static RenderStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeDrawPhaseObservable.add(()=>{t=H.Now}),a=e.onAfterDrawPhaseObservable.add(()=>{s=H.Now-t});return{id:"Render",getData:()=>s,dispose:()=>{e.onBeforeDrawPhaseObservable.remove(i),e.onAfterDrawPhaseObservable.remove(a)}}}}static FrameTotalStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{t=H.Now}),a=e.onAfterRenderObservable.add(()=>{s=H.Now-t});return{id:"Frame Total",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterRenderObservable.remove(a)}}}}static InterFrameStrategy(){return e=>{let t=H.Now,s=0;const i=e.onBeforeAnimationsObservable.add(()=>{s=H.Now-t}),a=e.onAfterRenderObservable.add(()=>{t=H.Now});return{id:"Inter-frame",getData:()=>s,dispose:()=>{e.onBeforeAnimationsObservable.remove(i),e.onAfterRenderObservable.remove(a)}}}}static GpuFrameTimeStrategy(){return e=>{const t=new mi(e.getEngine());return t.captureGPUFrameTime=!0,{id:"GPU frame time",getData:()=>Math.max(t.gpuFrameTimeCounter.current*1e-6,0),dispose:()=>{t.dispose()}}}}}class Ua{constructor(e,t){this._disableRenderingRefCount=0,this._currentPerformancePriorityMode=0,this._scene=e,this._engine=e.getEngine(),this._engine.isWebGPU&&(this._options={morphTargetsNumMaxInfluences:20,...t},this._engine.snapshotRenderingMode=1,this.fixMeshes(),this._onResizeObserver=this._engine.onResizeObservable.add(()=>{this.disableSnapshotRendering(),this.enableSnapshotRendering()}),this._scene.onBeforeRenderObservable.add(()=>{var s;if(this._fastSnapshotRenderingEnabled){e.skeletons.forEach(i=>i.prepare(!0));for(const i of e.meshes)if(i.infiniteDistance&&i.transferToEffect(i.computeWorldMatrix(!0)),i.skeleton&&i.transferToEffect(i.computeWorldMatrix(!0)),i.morphTargetManager&&i.subMeshes)for(const a of i.subMeshes){const r=a._drawWrapper,n=r.effect;if(n){const o=r.drawContext.buffers.LeftOver,h=(s=n._pipelineContext)==null?void 0:s.uniformBuffer;o&&h&&h.setDataBuffer(o)&&(i.morphTargetManager._bind(n),ai(i,n),h.update())}}}}))}enableSnapshotRendering(){this._engine.isWebGPU&&(--this._disableRenderingRefCount>0||(this._disableRenderingRefCount=0,this._currentPerformancePriorityMode=this._pendingCurrentPerformancePriorityMode??this._scene.performancePriority,this._pendingCurrentPerformancePriorityMode=void 0,this._scene.performancePriority=0,this._scene.executeWhenReady(()=>{this._disableRenderingRefCount>0||this._executeAtFrame(this._engine.frameId+2,()=>{this._engine.snapshotRendering=!0})})))}disableSnapshotRendering(){this._engine.isWebGPU&&(this._disableRenderingRefCount===0&&(this._scene.performancePriority=0,this._currentPerformancePriorityMode!==0&&(this._pendingCurrentPerformancePriorityMode=this._currentPerformancePriorityMode,this._scene.executeWhenReady(()=>{this._executeAtFrame(this._engine.frameId+2,()=>{this._disableRenderingRefCount>0&&this._pendingCurrentPerformancePriorityMode!==void 0&&(this._scene.performancePriority=this._pendingCurrentPerformancePriorityMode),this._pendingCurrentPerformancePriorityMode=void 0},!0)}))),this._engine.snapshotRendering=!1,this._disableRenderingRefCount++)}fixMeshes(e){if(this._engine.isWebGPU){e=e||this._scene.meshes;for(const t of e)t.ignoreCameraMaxZ=!1,t.morphTargetManager&&(t.morphTargetManager.numMaxInfluencers=Math.min(t.morphTargetManager.numTargets,this._options.morphTargetsNumMaxInfluences))}}updateMesh(e){if(this._fastSnapshotRenderingEnabled){if(Array.isArray(e)){for(const t of e)t.transferToEffect(t.computeWorldMatrix(!0));return}e.transferToEffect(e.computeWorldMatrix(!0))}}updateMeshesForEffectLayer(e,t=!0){if(!this._engine.isWebGPU)return;const s=e.mainTexture.renderPassId;t?this._onBeforeRenderObserverUpdateLayer=this._scene.onBeforeRenderObservable.add(()=>{this._updateMeshMatricesForRenderPassId(s)}):this._updateMeshMatricesForRenderPassId(s)}dispose(){this._engine.isWebGPU&&(this._scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver),this._scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserverUpdateLayer),this._engine.onResizeObservable.remove(this._onResizeObserver))}get _fastSnapshotRenderingEnabled(){return this._engine.snapshotRendering&&this._engine.snapshotRenderingMode===1}_updateMeshMatricesForRenderPassId(e){var s;if(!this._fastSnapshotRenderingEnabled)return;const t=this._scene.getTransformMatrix();for(let i=0;i<this._scene.meshes.length;++i){const a=this._scene.meshes[i];if(a.subMeshes)for(let r=0;r<a.subMeshes.length;++r){const n=a.subMeshes[r]._getDrawWrapper(e),o=n==null?void 0:n.effect;if(o){const h=n.drawContext.buffers.LeftOver,l=(s=o._pipelineContext)==null?void 0:s.uniformBuffer;h&&l&&l.setDataBuffer(h)&&(o.setMatrix("viewProjection",t),o.setMatrix("world",a.computeWorldMatrix()),l.update())}}}}_executeAtFrame(e,t,s=!1){const i=this._engine.onEndFrameObservable.add(()=>{if(this._disableRenderingRefCount>0&&!s||this._disableRenderingRefCount===0&&s){this._engine.onEndFrameObservable.remove(i);return}this._engine.frameId>=e&&(this._engine.onEndFrameObservable.remove(i),t())})}}async function Qa(p,e){var r;const t=e.probe??new ri("tempProbe",e.size,p),s=!!e.probe;s||(e.position?t.position=e.position.clone():p.activeCamera&&(t.position=p.activeCamera.position.clone()));const i=e.meshesFilter?p.meshes.filter(e.meshesFilter):p.meshes;(r=t.renderList)==null||r.push(...i),t.refreshRate=he.REFRESHRATE_RENDER_ONCE,t.cubeTexture.render();const a=new bi("tempProceduralTexture","equirectangularPanorama",{width:e.size*2,height:e.size},p);return a.setTexture("cubeMap",t.cubeTexture),new Promise((n,o)=>{a.onGeneratedObservable.addOnce(()=>{const h=a.readPixels();if(!h){o(new Error("No Pixel Data found on procedural texture")),a.dispose(),s||t.dispose();return}h.then(l=>{a.dispose(),s||t.dispose(),e.filename?(ni(e.size*2,e.size,l,void 0,"image/png",e.filename),n(null)):n(l)})})})}class ja{constructor(){this._currentOperation=Promise.resolve()}lockAsync(e,t){t==null||t.throwIfAborted();const s=t?()=>(t.throwIfAborted(),e()):e,i=this._currentOperation.then(s);return this._currentOperation=new Promise(a=>i.then(()=>a(),a)),i}static async LockAsync(e,t,s){if(s==null||s.throwIfAborted(),t.length===0)return await e();const i=new Fi;let a=0;return t.forEach(r=>r.lockAsync(async()=>(a++,a===t.length&&i.resolve(await e()),i.promise),s).catch(n=>i.reject(n))),i.promise}}class qa{constructor(e){this._context=e,this._context.onNodeExecutedObservable.add(t=>{te.Log(`Node executed: ${t.getClassName()}`)})}}export{Ya as AbstractActionManager,Ka as AbstractAssetContainer,Ja as AbstractAssetTask,Tt as AbstractEngine,Ht as AbstractMesh,$a as AcquireNativeObjectAsync,er as Action,tr as ActionEvent,sr as ActionManager,ir as AddAnimationExtensions,ar as AddBlock,rr as AddIndividualParser,nr as AddParser,or as AddRayExtensions,hr as AddressMode,lr as AdvancedTimer,cr as Aggregations,dr as AggregatorBlock,ur as AlignBlock,_r as AlphaState,pr as AmmoJSPlugin,gr as AnaglyphArcRotateCamera,mr as AnaglyphFreeCamera,fr as AnaglyphGamepadCamera,br as AnaglyphPostProcess,xr as AnaglyphUniversalCamera,Gi as Analyser,Pr as AndOrNotEvaluator,yr as Angle,Mr as Animatable,Sr as AnimatedInputBlockTypes,as as Animation,Tr as AnimationAssetTask,qt as AnimationEvent,vr as AnimationGroup,Rr as AnimationGroupMask,Br as AnimationGroupMaskMode,Ar as AnimationKeyInterpolation,Vi as AnimationPropertiesOverride,Dr as AnimationRange,Cr as AnisotropyBlock,wr as ApplyLut,Ir as ApplyPostProcess,Er as Arc2,Fr as ArcFollowCamera,Et as ArcRotateCamera,Or as ArcRotateCameraGamepadInput,kr as ArcRotateCameraInputsManager,Vr as ArcRotateCameraKeyboardMoveInput,zr as ArcRotateCameraMouseWheelInput,Gr as ArcRotateCameraPointersInput,Lr as ArcRotateCameraVRDeviceOrientationInput,Nr as ArcTan2Block,Wr as AssetContainer,Hr as AssetTaskState,Ur as AssetsManager,Qr as AssetsProgressEvent,ja as AsyncLock,jr as AsyncLoop,Wi as AttachToBoxBehavior,qr as AudioEngine,Zr as AudioSceneComponent,Xr as AutoLayoutMode,Yr as AutoReleaseWorkerPool,Kr as AutoRotationBehavior,ke as AxesViewer,Je as Axis,ue as AxisDragGizmo,nt as AxisScaleGizmo,Jr as BRDFTextureTools,$r as BabylonFileLoaderConfiguration,en as BackEase,tn as BackgroundMaterial,sn as BakedVertexAnimationManager,Sa as BallAndSocketConstraint,an as BaseCameraMouseWheelInput,rn as BaseCameraPointersInput,nn as BaseError,on as BaseParticleSystem,ve as BaseSixDofDragBehavior,hn as BaseTexture,ln as BasisFileInfo,cn as BasisTools,dn as BasisToolsOptions,un as BasisTranscodeConfiguration,_n as BezierCurve,pn as BezierCurveEase,gn as BiPlanarBlock,mn as BinaryFileAssetTask,fn as BindBonesParameters,bn as BindFogParameters,xn as BindLight,Pn as BindLightProperties,yn as BindLights,Mn as BindLogDepth,ai as BindMorphTargetParameters,Sn as BindSceneUniformBuffer,Tn as BindTextureMatrix,vn as BlackAndWhitePostProcess,Rn as BlendFactor,Bn as BlendOperation,An as BloomEffect,Dn as BloomMergePostProcess,Cn as BlurPostProcess,wn as Bone,Xi as BoneAxesViewer,In as BoneIKController,En as BoneLookController,Fn as BonesBlock,On as BooleanGeometryBlock,kn as BooleanGeometryOperations,Vn as BounceEase,zn as BouncingBehavior,Gn as BoundingBlock,ft as BoundingBox,ui as BoundingBoxGizmo,Ln as BoundingBoxRenderer,Ut as BoundingInfo,Zi as BoundingInfoHelper,Ns as BoundingSphere,Nn as BoxBlock,Wn as BoxBuilder,Hn as BoxParticleEmitter,Un as Buffer,Qn as BufferBindingType,jn as BufferMapState,qn as BufferUsage,Zn as CSG,Xn as CSG2,lt as Camera,Yn as CameraGizmo,Kn as CameraInputTypes,Jn as CameraInputsManager,$n as CannonJSPlugin,eo as CanvasAlphaMode,to as CanvasToneMappingMode,so as CapsuleBlock,io as CapsuleBuilder,ao as CascadedShadowGenerator,ro as ChromaticAberrationPostProcess,no as CircleEase,oo as CircleOfConfusionPostProcess,ho as ClampBlock,lo as CleanGeometryBlock,co as ClearCoatBlock,uo as ClipPlanesBlock,_o as ClipboardEventTypes,po as ClipboardInfo,go as CloudBlock,mo as CloudPoint,fo as Collider,k as Color3,bo as Color3Gradient,Re as Color4,xo as ColorConverterBlock,Po as ColorCorrectionPostProcess,yo as ColorCurves,Mo as ColorGradient,So as ColorGradingTexture,To as ColorMergerBlock,vo as ColorSplitterBlock,Ro as ColorWrite,Bo as CombineAction,Ao as CompareFunction,Do as CompatibilityOptions,Co as CompilationMessageType,wo as CompleteGreasedLineColorTable,Io as CompleteGreasedLineWidthTable,Eo as CompressionCodes,Fo as ComputeBindingType,Oo as ComputeEffect,ko as ComputeNormalsBlock,Vo as ComputePassTimestampLocation,cs as ComputeShader,hi as ComputeShaderBoundingHelper,zo as ComputeShaderParticleSystem,Go as Condition,Lo as ConditionBlock,No as ConditionBlockTests,Wo as ConditionalBlock,Ho as ConditionalBlockConditions,Uo as ConeDirectedParticleEmitter,Qo as ConeParticleEmitter,jo as Constants,qo as ContainerAssetTask,Zo as ConversionMode,Xo as ConvolutionPostProcess,Yo as Coordinate,Ko as CopyFloatData,Jo as CopyTextureToTexture,$o as CopyTools,Fe as CreateBox,eh as CreateBoxVertexData,_s as CreateCapsule,th as CreateCapsuleVertexData,gt as CreateCylinder,sh as CreateCylinderVertexData,ih as CreateDashedLines,ah as CreateDashedLinesVertexData,rh as CreateDecal,CI as CreateDecoderAsync,Ws as CreateDisc,nh as CreateDiscVertexData,oh as CreateEnvTextureAsync,hh as CreateGeodesic,lh as CreateGoldberg,ch as CreateGoldbergVertexData,dh as CreateGreasedLine,uh as CreateGreasedLineMaterial,_h as CreateGround,ph as CreateGroundFromHeightMap,gh as CreateGroundFromHeightMapVertexData,mh as CreateGroundVertexData,fh as CreateHemisphere,bh as CreateIcoSphere,xh as CreateIcoSphereVertexData,Ph as CreateImageBitmapFromSource,yh as CreateImageDataArrayBufferViews,Mh as CreateLathe,Sh as CreateLineSystem,Th as CreateLineSystemVertexData,U as CreateLines,vh as CreatePickingRay,Rh as CreatePickingRayInCameraSpace,Bh as CreatePickingRayInCameraSpaceToRef,Ah as CreatePickingRayToRef,bs as CreatePlane,Dh as CreatePlaneVertexData,Ch as CreatePolygon,wh as CreatePolygonVertexData,At as CreatePolyhedron,Ih as CreatePolyhedronVertexData,Eh as CreateResizedCopy,Fh as CreateRibbon,Oh as CreateRibbonVertexData,kh as CreateScreenshot,Vh as CreateScreenshotAsync,zh as CreateScreenshotUsingRenderTarget,Gh as CreateScreenshotUsingRenderTargetAsync,Lh as CreateScreenshotWithResizeAsync,Nh as CreateSegmentedBoxVertexData,us as CreateSphere,Wh as CreateSphereVertexData,Hh as CreateText,Uh as CreateTextShapePaths,Qh as CreateTiledBox,jh as CreateTiledBoxVertexData,qh as CreateTiledGround,Zh as CreateTiledGroundVertexData,Xh as CreateTiledPlane,Yh as CreateTiledPlaneVertexData,Kh as CreateTorus,Jh as CreateTorusKnot,$h as CreateTorusKnotVertexData,el as CreateTorusVertexData,tl as CreateTube,sl as CrossBlock,il as CubeMapToSphericalPolynomialTools,Ps as CubeTexture,al as CubeTextureAssetTask,rl as CubicEase,nl as CullMode,ol as CurrentScreenBlock,hl as Curve3,ll as CurveBlock,cl as CurveBlockTypes,dl as CustomBlock,ul as CustomOptimization,_l as CustomParticleEmitter,bi as CustomProceduralTexture,pl as CylinderBlock,gl as CylinderBuilder,ml as CylinderDirectedParticleEmitter,fl as CylinderParticleEmitter,bl as DDSTools,ut as DataBuffer,Na as DataReader,xl as DataStorage,Pl as Database,yl as DebugBlock,Ml as DebugLayer,Sl as DebugLayerTab,Tl as DecalBuilder,vl as DecalMapConfiguration,Rl as DecalMapDefines,Js as Decode,ns as DecodeBase64ToBinary,Bl as DecodeBase64ToString,Al as DecodeBase64UrlToBinary,Dl as DecodeBase64UrlToString,Cl as DecodeFloat32,wI as DecodeRunLength,wl as DeepCopier,Il as DefaultCollisionCoordinator,El as DefaultKTX2DecoderOptions,Fl as DefaultLoadingScreen,Ol as DefaultRenderingPipeline,Fi as Deferred,kl as DepthCullingState,Vl as DepthOfFieldBlurPostProcess,zl as DepthOfFieldEffect,Gl as DepthOfFieldEffectBlurLevel,Ll as DepthOfFieldMergePostProcess,Nl as DepthPeelingRenderer,Wl as DepthPeelingSceneComponent,Hl as DepthReducer,Ul as DepthRenderer,Ql as DepthRendererSceneComponent,Si as DepthSortedParticle,jl as DerivativeBlock,ql as DesaturateBlock,Gs as DetailMapConfiguration,Zl as DeviceInputEventType,Xl as DeviceLostReason,Yl as DeviceOrientationCamera,Kl as DeviceSource,Jl as DeviceSourceManager,$l as DeviceType,ec as DirectionalLight,Ki as DirectionalLightFrustumViewer,tc as DiscBlock,sc as DiscBuilder,ic as DiscardBlock,ac as DisplayPassPostProcess,rc as DistanceBlock,Ta as DistanceConstraint,nc as DistanceJoint,oc as DivideBlock,hc as DoNothingAction,lc as DomManagement,cc as DotBlock,dc as DracoCompression,Dt as DrawWrapper,uc as DualSenseInput,_c as DualShockButton,pc as DualShockDpad,gc as DualShockInput,mc as DualShockPad,fc as DumpTools,bc as DynamicFloat32Array,xc as DynamicTexture,Pc as EXROutputType,yc as EasingFunction,Mc as EdgesRenderer,Is as Effect,Sc as EffectFallbacks,Tc as EffectLayer,vc as EffectLayerSceneComponent,js as EffectRenderer,qs as EffectWrapper,Rc as ElasticEase,Bc as ElbowBlock,rs as EncodeArrayBufferToBase64,Ac as EndsWith,st as Engine,Ji as EngineFactory,Dc as EngineFormat,mi as EngineInstrumentation,et as EngineStore,Cc as EngineView,wc as EnvironmentHelper,Ic as EnvironmentTextureTools,ne as Epsilon,Ec as EquiRectangularCubeTexture,Fc as EquiRectangularCubeTextureAssetTask,Oc as ErrorCodes,kc as ErrorFilter,Vc as EventConstants,zc as EventState,Gc as ExecuteCodeAction,Lc as ExitFullscreen,Nc as ExitPointerlock,Wc as ExponentialEase,Hc as ExrLoaderGlobalConfiguration,Uc as ExternalTexture,Qc as ExtractHighlightsPostProcess,jc as ExtrudePolygon,qc as ExtrudeShape,Zc as ExtrudeShapeCustom,Xc as FactorGradient,Hi as FadeInOutBehavior,Yc as FeatureName,Kc as FileTools,Jc as FileToolsOptions,is as FilesInput,Ks as FilesInputStore,$c as FilterMode,ed as FilterPostProcess,td as FixFlippedFaces,sd as FlowGraph,id as FlowGraphAbsBlock,ad as FlowGraphAcosBlock,rd as FlowGraphAcoshBlock,nd as FlowGraphAddBlock,od as FlowGraphAsinBlock,hd as FlowGraphAsinhBlock,ld as FlowGraphAtan2Block,cd as FlowGraphAtanBlock,dd as FlowGraphAtanhBlock,ud as FlowGraphBitwiseAndBlock,_d as FlowGraphBitwiseLeftShiftBlock,pd as FlowGraphBitwiseNotBlock,gd as FlowGraphBitwiseOrBlock,md as FlowGraphBitwiseRightShiftBlock,fd as FlowGraphBitwiseXorBlock,bd as FlowGraphBlock,xd as FlowGraphBranchBlock,Pd as FlowGraphCeilBlock,yd as FlowGraphClampBlock,Md as FlowGraphConditionalDataBlock,Sd as FlowGraphConnection,Td as FlowGraphConnectionType,vd as FlowGraphConsoleLogBlock,Rd as FlowGraphConstantBlock,Bd as FlowGraphContext,qa as FlowGraphContextLogger,Ad as FlowGraphCoordinateTransformBlock,Dd as FlowGraphCoordinator,Cd as FlowGraphCosBlock,wd as FlowGraphCoshBlock,Id as FlowGraphCountLeadingZerosBlock,Ed as FlowGraphCountOneBitsBlock,Fd as FlowGraphCountTrailingZerosBlock,Od as FlowGraphCounterBlock,kd as FlowGraphCrossBlock,Vd as FlowGraphCubeRootBlock,zd as FlowGraphDataConnection,Gd as FlowGraphDebounceBlock,Ld as FlowGraphDegToRadBlock,Nd as FlowGraphDeterminantBlock,Wd as FlowGraphDivideBlock,Hd as FlowGraphDoNBlock,Ud as FlowGraphDotBlock,Qd as FlowGraphEBlock,jd as FlowGraphEqBlock,qd as FlowGraphEventBlock,Zd as FlowGraphExecutionBlock,Xd as FlowGraphExpBlock,Yd as FlowGraphFlipFlopBlock,Kd as FlowGraphFloorBlock,Jd as FlowGraphForLoopBlock,$d as FlowGraphFractBlock,eu as FlowGraphGetPropertyBlock,tu as FlowGraphGetVariableBlock,su as FlowGraphGreaterThanBlock,iu as FlowGraphGreaterThanOrEqualBlock,au as FlowGraphInfBlock,ru as FlowGraphInterpolateBlock,nu as FlowGraphInvertMatrixBlock,ou as FlowGraphIsInfBlock,hu as FlowGraphIsNanBlock,lu as FlowGraphLengthBlock,cu as FlowGraphLessThanBlock,du as FlowGraphLessThanOrEqualBlock,uu as FlowGraphLog10Block,_u as FlowGraphLog2Block,pu as FlowGraphLogBlock,gu as FlowGraphLogicAndBlock,mu as FlowGraphLogicNotBlock,fu as FlowGraphLogicOrBlock,bu as FlowGraphMatMulBlock,xu as FlowGraphMaxBlock,Pu as FlowGraphMeshPickEventBlock,yu as FlowGraphMinBlock,Mu as FlowGraphMultiGateBlock,Su as FlowGraphMultiplyBlock,Tu as FlowGraphNaNBlock,vu as FlowGraphNegBlock,Ru as FlowGraphNormalizeBlock,Bu as FlowGraphPauseAnimationBlock,Au as FlowGraphPiBlock,Du as FlowGraphPlayAnimationBlock,Cu as FlowGraphPowBlock,wu as FlowGraphRadToDegBlock,Iu as FlowGraphRandomBlock,Eu as FlowGraphReceiveCustomEventBlock,Fu as FlowGraphRemainderBlock,Ou as FlowGraphRotate2DBlock,ku as FlowGraphRotate3DBlock,Vu as FlowGraphSaturateBlock,zu as FlowGraphSceneReadyEventBlock,Gu as FlowGraphSceneTickEventBlock,Lu as FlowGraphSendCustomEventBlock,Nu as FlowGraphSequenceBlock,Wu as FlowGraphSetPropertyBlock,Hu as FlowGraphSetVariableBlock,Uu as FlowGraphSignBlock,Qu as FlowGraphSignalConnection,ju as FlowGraphSinBlock,qu as FlowGraphSinhBlock,Zu as FlowGraphSqrtBlock,Xu as FlowGraphState,Yu as FlowGraphStopAnimationBlock,Ku as FlowGraphSubtractBlock,Ju as FlowGraphSwitchBlock,$u as FlowGraphTanBlock,e_ as FlowGraphTanhBlock,t_ as FlowGraphThrottleBlock,s_ as FlowGraphTimerBlock,i_ as FlowGraphTransposeBlock,a_ as FlowGraphTruncBlock,r_ as FlowGraphWaitAllBlock,n_ as FlowGraphWhileLoopBlock,o_ as FluidRenderer,h_ as FluidRendererSceneComponent,l_ as FluidRenderingDebug,c_ as FluidRenderingObject,d_ as FluidRenderingObjectCustomParticles,u_ as FluidRenderingObjectParticleSystem,__ as FluidRenderingTargetRenderer,p_ as FlyCamera,g_ as FlyCameraInputsManager,m_ as FlyCameraKeyboardInput,f_ as FlyCameraMouseInput,b_ as FogBlock,ji as FollowBehavior,x_ as FollowCamera,P_ as FollowCameraInputsManager,y_ as FollowCameraKeyboardMoveInput,M_ as FollowCameraMouseWheelInput,S_ as FollowCameraPointersInput,T_ as FragCoordBlock,v_ as FragDepthBlock,As as FragmentOutputBlock,R_ as FramingBehavior,Xs as FreeCamera,B_ as FreeCameraDeviceOrientationInput,A_ as FreeCameraGamepadInput,D_ as FreeCameraInputsManager,C_ as FreeCameraKeyboardMoveInput,w_ as FreeCameraMouseInput,I_ as FreeCameraMouseWheelInput,E_ as FreeCameraTouchInput,F_ as FreeCameraVirtualJoystickInput,O_ as FresnelBlock,k_ as FresnelParameters,V_ as FromHalfFloat,z_ as FrontFace,G_ as FrontFacingBlock,L_ as Frustum,N_ as FxaaPostProcess,za as GIRSM,W_ as GIRSMManager,H_ as GIRSMRenderPluginMaterial,U_ as GPUParticleSystem,Q_ as GPUPicker,j_ as GUID,q_ as Gamepad,Z_ as GamepadCamera,X_ as GamepadManager,Y_ as GamepadSystemSceneComponent,Bs as GaussianBlock,vs as GaussianSplattingBlock,K_ as GaussianSplattingMaterial,J_ as GaussianSplattingMesh,$_ as GenerateBase64StringFromPixelData,ep as GenerateBase64StringFromTexture,tp as GenerateBase64StringFromTextureAsync,sp as GenericPad,ip as GeodesicData,ap as Geometry,rp as GeometryArcTan2Block,np as GeometryBufferRenderer,op as GeometryBufferRendererSceneComponent,hp as GeometryClampBlock,lp as GeometryCollectionBlock,cp as GeometryCrossBlock,dp as GeometryCurveBlock,up as GeometryCurveBlockTypes,_p as GeometryDesaturateBlock,pp as GeometryDistanceBlock,gp as GeometryDotBlock,mp as GeometryElbowBlock,fp as GeometryInfoBlock,bp as GeometryInputBlock,xp as GeometryInterceptorBlock,Pp as GeometryLengthBlock,yp as GeometryLerpBlock,Mp as GeometryModBlock,Sp as GeometryNLerpBlock,Tp as GeometryOptimizeBlock,vp as GeometryOutputBlock,Rp as GeometryPosterizeBlock,Bp as GeometryPowBlock,Ap as GeometryReplaceColorBlock,Dp as GeometryRotate2dBlock,Cp as GeometrySmoothStepBlock,wp as GeometryStepBlock,Ip as GeometryTextureBlock,Ep as GeometryTextureFetchBlock,Fp as GeometryTransformBlock,Op as GeometryTrigonometryBlock,kp as GeometryTrigonometryBlockOperations,Vp as GetClass,zp as GetClassName,Gp as GetDOMTextContent,Lp as GetEnvInfo,Np as GetEnvironmentBRDFTexture,II as GetExrHeader,Wp as GetFogState,Hp as GetFontOffset,Up as GetForwardRay,Qp as GetForwardRayToRef,ua as GetHotSpotToRef,jp as GetIndividualParser,qp as GetInternalFormatFromBasisFormat,Zp as GetParser,Xp as GetPointsCount,Yp as GetTGAHeader,Kp as GetTextureDataAsync,yi as GetTransformedPosition,Me as Gizmo,Jp as GizmoAnchorPoint,$p as GizmoCoordinatesMode,$i as GizmoManager,eg as GlowLayer,tg as GoldbergMesh,sg as GradientBlock,ig as GradientBlockColorStep,ag as GradientHelper,rg as GrainPostProcess,ng as GreasedLineBaseMesh,og as GreasedLineMaterialDefaults,hg as GreasedLineMesh,lg as GreasedLineMeshColorDistribution,cg as GreasedLineMeshColorDistributionType,dg as GreasedLineMeshColorMode,ug as GreasedLineMeshMaterialType,_g as GreasedLineMeshWidthDistribution,pg as GreasedLinePluginMaterial,gg as GreasedLineRibbonAutoDirectionMode,mg as GreasedLineRibbonFacesMode,fg as GreasedLineRibbonMesh,bg as GreasedLineRibbonPointsMode,xg as GreasedLineSimpleMaterial,Pg as GreasedLineTools,yg as GridBlock,Mg as GroundBuilder,Sg as GroundMesh,Tg as HDRCubeTexture,vg as HDRCubeTextureAssetTask,Rg as HDRFiltering,Bg as HDRTools,Ag as Halton2DSequence,Dg as HandConstraintBehavior,Cg as HandConstraintOrientation,wg as HandConstraintVisibility,Ig as HandConstraintZone,Eg as HandPart,Fg as HandleFallbacksForShadows,Og as HardwareScalingOptimization,Ia as HavokPlugin,kg as HeightToNormalBlock,Vg as HemisphereBuilder,zg as HemisphericLight,Gg as HemisphericParticleEmitter,Lg as HighlightLayer,Oa as HighlightsPostProcess,Ng as Hinge2Joint,va as HingeConstraint,Wg as HingeJoint,Hg as HtmlElementTexture,Ug as HufUncompress,Qg as IWebXRControllerPhysicsOptions,Va as IblShadowsRenderPipeline,jg as IcoSphereBlock,qg as IcoSphereBuilder,Zg as ImageAssetTask,Xg as ImageProcessingBlock,Yg as ImageProcessingConfiguration,Kg as ImageProcessingPostProcess,Jg as ImageSourceBlock,$g as IncrementValueAction,em as IndexFormat,tm as InitializeCSG2Async,ot as InputBlock,sm as InspectableType,im as InstancedLinesMesh,wt as InstancedMesh,am as InstancesBlock,rm as InstantiateBlock,nm as InstantiateLinearBlock,om as InstantiateOnFacesBlock,hm as InstantiateOnVerticesBlock,lm as InstantiateOnVolumeBlock,cm as InstantiateRadialBlock,dm as InstantiatedEntries,um as IntFloatConverterBlock,_m as InterleaveScalar,rt as InternalTexture,pm as InternalTextureSource,gm as InterpolateValueAction,mm as IntersectionInfo,fm as IsBase64DataUrl,bm as IsCSG2Ready,xm as IsDocumentAvailable,Pm as IsFileURL,ym as IsNavigatorAvailable,Mm as IsWindowObjectExist,ms as IsWrapper,Sm as JoystickAxis,Tm as KeepAssets,vm as KeyboardEventTypes,Rm as KeyboardInfo,Bm as KeyboardInfoPre,Am as KhronosTextureContainer,Dm as KhronosTextureContainer2,Cm as LatheBuilder,wm as Lattice,Im as LatticeBlock,pa as LatticePluginMaterial,Em as Layer,Fm as LayerSceneComponent,Om as LengthBlock,km as LensFlare,Vm as LensFlareSystem,zm as LensFlareSystemSceneComponent,Gm as LensFlaresOptimization,ka as LensRenderingPipeline,Lm as LerpBlock,ii as Light,Nm as LightBlock,Wm as LightGizmo,Hm as LightInformationBlock,Um as LineEdgesRenderer,Qm as LinesBuilder,jm as LinesMesh,qm as LoadFile,Zm as LoadFileError,Xm as LoadImage,Ym as LoadImageConfiguration,Km as LoadOp,Jm as LoadTextureFromTranscodeResult,Ba as LockConstraint,D as Logger,$m as LoopBlock,ef as MapMode,tf as MapRangeBlock,sf as MappingBlock,af as MappingTypes,ti as Material,rf as MaterialAnisotropicDefines,nf as MaterialClearCoatDefines,of as MaterialDefines,hf as MaterialDetailMapDefines,lf as MaterialFlags,cf as MaterialGreasedLineDefines,df as MaterialHelper,uf as MaterialIridescenceDefines,Ls as MaterialPluginBase,_f as MaterialPluginEvent,pf as MaterialPluginManager,gf as MaterialSheenDefines,mf as MaterialSubSurfaceDefines,ff as MathBlock,bf as MathBlockOperations,C as Matrix,xf as MatrixBuilderBlock,Pf as MatrixComposeBlock,yf as MatrixDeterminantBlock,Mf as MatrixTransposeBlock,Sf as MaxBlock,Tf as MergeGeometryBlock,vf as MergeMeshesOptimization,oe as Mesh,Rf as MeshAssetTask,Bf as MeshAttributeExistsBlock,Af as MeshAttributeExistsBlockTypes,Df as MeshBlock,ps as MeshBuilder,Cf as MeshDebugMode,wf as MeshDebugPluginMaterial,La as MeshExploder,If as MeshLODLevel,Ef as MeshParticleEmitter,Te as MeshUVSpaceRenderer,Ff as MeshoptCompression,Of as MinBlock,kf as MinMaxReducer,Vf as MipmapFilterMode,zf as MirrorTexture,Gf as ModBlock,Vt as ModelShape,Lf as MorphTarget,$s as MorphTargetManager,Nf as MorphTargetsBlock,Wf as MotionBlurPostProcess,Hf as MotorEnabledJoint,mt as MultiMaterial,Uf as MultiObserver,Qf as MultiPick,jf as MultiPickWithRay,Ui as MultiPointerScaleBehavior,Zs as MultiRenderTarget,qf as MultiplyBlock,Zf as NLerpBlock,Xf as NativeDataStream,Yf as NativeEngine,Kf as NativePointerInput,Jf as NativeXRFrame,$f as NativeXRLayerRenderTargetTextureProvider,eb as NativeXRLayerWrapper,tb as NativeXRRenderTarget,sb as NegateBlock,ib as Node,ab as NodeGeometry,rb as NodeGeometryBlock,nb as NodeGeometryBlockConnectionPointTypes,ob as NodeGeometryBuildState,hb as NodeGeometryConnectionPoint,lb as NodeGeometryConnectionPointCompatibilityStates,cb as NodeGeometryConnectionPointDirection,db as NodeGeometryContextualSources,ub as NodeMaterial,_b as NodeMaterialBlock,pb as NodeMaterialBlockConnectionPointMode,gb as NodeMaterialBlockConnectionPointTypes,mb as NodeMaterialBlockTargets,fb as NodeMaterialConnectionPoint,bb as NodeMaterialConnectionPointCompatibilityStates,xb as NodeMaterialConnectionPointCustomObject,Pb as NodeMaterialConnectionPointDirection,yb as NodeMaterialDefines,Cs as NodeMaterialModes,ia as NodeMaterialOptimizer,pt as NodeMaterialSystemValues,Mb as NodeMaterialTeleportInBlock,Sb as NodeMaterialTeleportOutBlock,Tb as NoiseBlock,vb as NoiseProceduralTexture,Rb as NormalBlendBlock,Bb as NormalizeBlock,Ab as NormalizeVectorBlock,Db as NullBlock,di as NullEngine,ci as NullEngineOptions,N as Observable,Cb as Observer,ea as OcclusionMaterial,wb as Octree,Ib as OctreeBlock,Eb as OctreeSceneComponent,Fb as OimoJSPlugin,Ob as OnAfterEnteringVRObservableEvent,kb as OneMinusBlock,Vb as Orientation,zb as OutlineRenderer,Es as PBRAnisotropicConfiguration,je as PBRBaseMaterial,Gb as PBRBaseSimpleMaterial,Os as PBRClearCoatConfiguration,ks as PBRIridescenceConfiguration,Lb as PBRMaterial,Nb as PBRMaterialDefines,Wb as PBRMetallicRoughnessBlock,Hb as PBRMetallicRoughnessMaterial,Vs as PBRSheenConfiguration,Ub as PBRSpecularGlossinessMaterial,zs as PBRSubSurfaceConfiguration,Qb as PHI,jb as PadNumber,qb as PanoramaToCubeMapTools,Zb as Parse,Xb as ParseFloat16,Yb as ParseFloat32,Kb as ParseInt32,Jb as ParseInt64,$b as ParseNullTerminatedString,ex as ParseUint16,tx as ParseUint32,sx as ParseUint8,ix as ParseUint8Array,ax as ParseValue,rx as Particle,nx as ParticleBlendMultiplyBlock,ox as ParticleHelper,hx as ParticleRampGradientBlock,ei as ParticleSystem,lx as ParticleSystemSet,cx as ParticleTextureBlock,dx as ParticlesOptimization,ux as PassCubePostProcess,_x as PassPostProcess,px as Path2,gx as Path3D,zi as PathCursor,Ha as PerfCollectionStrategy,pe as PerfCounter,gs as PerformanceConfigurator,mx as PerformanceMonitor,fx as PerformanceViewerCollector,bx as PerturbNormalBlock,xx as PhotoDome,vi as Physics6DoFConstraint,Ma as Physics6DoFLimit,Px as PhysicsActivationControl,Ri as PhysicsAggregate,xt as PhysicsBody,Ve as PhysicsConstraint,yx as PhysicsConstraintAxis,Mx as PhysicsConstraintAxisLimitMode,Sx as PhysicsConstraintMotorType,Tx as PhysicsConstraintType,vx as PhysicsEngine,Rx as PhysicsEngineV2,Bx as PhysicsEventType,Ax as PhysicsHelper,ye as PhysicsImpostor,Dx as PhysicsJoint,Cx as PhysicsMaterialCombineMode,wx as PhysicsMotionType,Ue as PhysicsPrestepType,Ix as PhysicsRadialExplosionEventOptions,Ex as PhysicsRadialImpulseFalloff,Fx as PhysicsRaycastResult,be as PhysicsShape,ss as PhysicsShapeBox,es as PhysicsShapeCapsule,xa as PhysicsShapeContainer,fa as PhysicsShapeConvexHull,ts as PhysicsShapeCylinder,ya as PhysicsShapeGroundMesh,Pa as PhysicsShapeHeightField,ba as PhysicsShapeMesh,$t as PhysicsShapeSphere,Ox as PhysicsShapeType,kx as PhysicsUpdraftEventOptions,Vx as PhysicsUpdraftMode,Yi as PhysicsViewer,zx as PhysicsVortexEventOptions,Gx as Pick,Lx as PickWithBoundingInfo,Nx as PickWithRay,Wx as PickingCustomization,Hx as PickingInfo,Ux as PipelineErrorReason,Ee as PivotTools,Ms as Plane,Qx as PlaneBlock,jx as PlaneBuilder,tt as PlaneDragGizmo,_t as PlaneRotationGizmo,qx as PlayAnimationAction,Zx as PlaySoundAction,Xx as PointColor,Yx as PointLight,Kx as PointParticleEmitter,Qe as PointerDragBehavior,Ke as PointerEventTypes,Jx as PointerInfo,$x as PointerInfoBase,eP as PointerInfoPre,tP as PointerInput,sP as PointsCloudSystem,iP as PointsGroup,ge as Polar,aP as Polygon,rP as PolygonBuilder,nP as PolygonMeshBuilder,oP as PolyhedronBuilder,hP as PolyhedronData,pi as PositionGizmo,Xt as PositionNormalTextureVertex,Zt as PositionNormalVertex,se as PostProcess,lP as PostProcessManager,Oe as PostProcessRenderEffect,jt as PostProcessRenderPipeline,cP as PostProcessRenderPipelineManager,dP as PostProcessRenderPipelineManagerSceneComponent,uP as PostProcessesOptimization,_P as PosterizeBlock,pP as PowBlock,gP as PowerEase,mP as PowerPreference,fP as PrePassOutputBlock,It as PrePassRenderer,bP as PrePassRendererSceneComponent,xP as PrePassTextureBlock,H as PrecisionDate,PP as PredicateCondition,yP as Predictor,MP as PrepareAttributesForBakedVertexAnimation,SP as PrepareAttributesForBones,TP as PrepareAttributesForInstances,vP as PrepareAttributesForMorphTargets,RP as PrepareAttributesForMorphTargetsInfluencers,BP as PrepareDefinesForAttributes,AP as PrepareDefinesForBakedVertexAnimation,DP as PrepareDefinesForBones,CP as PrepareDefinesForCamera,wP as PrepareDefinesForFrameBoundValues,IP as PrepareDefinesForLight,EP as PrepareDefinesForLights,FP as PrepareDefinesForMergedUV,OP as PrepareDefinesForMisc,kP as PrepareDefinesForMorphTargets,VP as PrepareDefinesForMultiview,zP as PrepareDefinesForOIT,GP as PrepareDefinesForPrePass,LP as PrepareUniformsAndSamplersForLight,NP as PrepareUniformsAndSamplersList,Pt as PressureObserverWrapper,WP as PrimitiveTopology,Aa as PrismaticConstraint,He as ProceduralTexture,HP as ProceduralTextureSceneComponent,UP as PropertyTypeForEdition,Ea as ProximityCastResult,QP as PushAttributesForInstances,jP as PushMaterial,qP as QuadraticEase,ZP as QuadraticErrorSimplification,XP as QuarticEase,y as Quaternion,YP as QueryType,KP as QueueNewFrame,JP as QuinticEase,$P as RGBDTextureTools,ey as RSMCreatePluginMaterial,wa as Ragdoll,Ca as RagdollBoneProperties,ty as RandomBlock,sy as RandomBlockLocks,ws as RandomGUID,iy as RandomNumberBlock,Kt as RawCubeTexture,bt as RawTexture,ay as RawTexture2DArray,xi as RawTexture3D,ry as Ray,Yt as RayHelper,ny as ReadFile,oy as ReadFileError,Mi as RecastJSCrowd,ga as RecastJSPlugin,hy as ReciprocalBlock,ly as ReflectBlock,cy as ReflectionBlock,ri as ReflectionProbe,dy as ReflectionTextureBaseBlock,uy as ReflectionTextureBlock,_y as ReflectiveShadowMap,py as Reflector,gy as RefractBlock,my as RefractionBlock,fy as RefractionPostProcess,Jt as RefractionTexture,by as RegisterClass,xy as RegisterMaterialPlugin,Py as RegisterNativeTypeAsync,yy as RegisterTargetForLateAnimationBinding,My as RemapBlock,Sy as RenderPassTimestampLocation,he as RenderTargetTexture,fs as RenderTargetWrapper,Ty as RenderTargetsOptimization,vy as RenderingGroup,Ry as RenderingGroupInfo,By as RenderingManager,Ay as ReplaceColorBlock,Dy as RequestFile,Cy as RequestFileError,wy as RequestFullscreen,Iy as RequestPointerlock,Ey as ResizeImageBitmap,Fy as RetryStrategy,Oy as ReverseLutFromBitmap,ky as RibbonBuilder,Vy as RichType,zy as RichTypeAny,Gy as RichTypeBoolean,Ly as RichTypeColor3,Ny as RichTypeColor4,Wy as RichTypeFlowGraphInteger,Hy as RichTypeMatrix,Uy as RichTypeNumber,Qy as RichTypeQuaternion,jy as RichTypeString,qy as RichTypeVector2,Zy as RichTypeVector3,Xy as RichTypeVector4,Yy as RollingAverage,Ky as Rotate2dBlock,_i as RotationGizmo,Jy as RotationXBlock,$y as RotationYBlock,eM as RotationZBlock,tM as RuntimeAnimation,sM as RuntimeError,iM as SSAO2RenderingPipeline,aM as SSAORenderingPipeline,rM as SSRRenderingPipeline,nM as SamplerBindingType,oM as Scalar,hM as ScaleBlock,gi as ScaleGizmo,lM as ScalingBlock,EI as ScanData,os as Scene,cM as SceneComponentConstants,dM as SceneDepthBlock,fi as SceneInstrumentation,ht as SceneLoader,uM as SceneLoaderAnimationGroupLoadingMode,_M as SceneLoaderFlags,pM as SceneOptimization,gM as SceneOptimizer,mM as SceneOptimizerOptions,fM as ScenePerformancePriority,Wa as SceneRecorder,Ft as SceneSerializer,bM as ScreenSizeBlock,xM as ScreenSpaceBlock,PM as ScreenSpaceCurvaturePostProcess,yM as ScreenSpaceReflectionPostProcess,MM as ScreenshotTools,Ye as SerializationHelper,SM as SetBasisTranscoderWorker,TM as SetColorsBlock,vM as SetCorsBehavior,RM as SetMaterialIDBlock,BM as SetNormalsBlock,AM as SetParentAction,DM as SetPositionsBlock,CM as SetStateAction,wM as SetTangentsBlock,sa as SetToDefaultGaussianSplatting,IM as SetUVsBlock,EM as SetValueAction,FM as ShaderCodeInliner,OM as ShaderLanguage,it as ShaderMaterial,kM as ShaderStage,VM as ShaderStore,aa as ShadowDepthWrapper,si as ShadowGenerator,zM as ShadowGeneratorSceneComponent,GM as ShadowLight,LM as ShadowMapBlock,NM as ShadowsOptimization,WM as ShapeBuilder,Fa as ShapeCastResult,HM as SharpenPostProcess,UM as SheenBlock,QM as SimplexPerlin3DBlock,jM as SimplicationQueueSceneComponent,qM as SimplificationQueue,ZM as SimplificationSettings,XM as SimplificationType,YM as SineEase,oi as SixDofDragBehavior,KM as Size,Wt as Skeleton,JM as SkeletonViewer,Ra as SliderConstraint,$M as SmartArray,eS as SmartArrayNoDuplicate,tS as SmoothStepBlock,Ua as SnapshotRenderingHelper,kt as SolidParticle,ma as SolidParticleSystem,Ti as SolidParticleVertex,sS as Sound,iS as SoundTrack,aS as SourceTextureFormat,rS as Space,nS as SphereBlock,oS as SphereBuilder,hS as SphereDirectedParticleEmitter,lS as SphereParticleEmitter,me as Spherical,cS as SphericalHarmonics,dS as SphericalPolynomial,Ts as SplatReaderBlock,uS as SpotLight,Da as SpringConstraint,_S as Sprite,Ys as SpriteManager,pS as SpriteMap,gS as SpriteMapFrameRotationDirection,Ga as SpritePackedManager,mS as SpriteSceneComponent,fS as Stage,$ as StandardMaterial,bS as StandardMaterialDefines,xS as StandardRenderingPipeline,PS as StartsWith,yS as StateCondition,MS as StencilOperation,SS as StencilState,TS as StencilStateComposer,vS as StepBlock,RS as StereoscopicArcRotateCamera,BS as StereoscopicFreeCamera,AS as StereoscopicGamepadCamera,DS as StereoscopicInterlacePostProcess,CS as StereoscopicInterlacePostProcessI,qi as StereoscopicScreenUniversalCamera,wS as StereoscopicUniversalCamera,IS as StickValues,ES as StopAnimationAction,FS as StopSoundAction,dt as StorageBuffer,OS as StorageReadBlock,kS as StorageTextureAccess,VS as StorageWriteBlock,zS as StoreOp,GS as StringDictionary,LS as StringTools,NS as SubEmitter,WS as SubEmitterType,Hs as SubMesh,HS as SubSurfaceBlock,US as SubSurfaceSceneComponent,QS as SubtractBlock,Qi as SurfaceMagnetismBehavior,jS as SwitchBooleanAction,qS as SwitchInput,ZS as TAARenderingPipeline,XS as TBNBlock,YS as TGATools,KS as Tags,ls as TargetCamera,JS as TargetedAnimation,$S as TeleportInBlock,eT as TeleportOutBlock,tT as TestBase64DataUrl,sT as TextFileAssetTask,j as Texture,iT as TextureAspect,aT as TextureAssetTask,rT as TextureBlock,nT as TextureDimension,oT as TextureFormat,hT as TextureOptimization,lT as TexturePacker,cT as TexturePackerFrame,dT as TextureSampleType,uT as TextureSampler,_T as TextureTools,pT as TextureUsage,gT as TextureViewDimension,mT as ThinEngine,ta as ThinRenderTargetTexture,Ss as ThinTexture,fT as TiledBoxBuilder,bT as TiledPlaneBuilder,xT as TimerState,PT as TmpColors,d as TmpVectors,yT as ToGammaSpace,MT as ToHalfFloat,ST as ToLinearSpace,TT as TonemapPostProcess,vT as TonemappingOperator,te as Tools,RT as TorusBlock,BT as TorusBuilder,AT as TorusKnotBuilder,DT as TouchCamera,CT as TrailMesh,wT as Trajectory,IT as TrajectoryClassifier,ET as TranscodeAsync,FT as TranscodeTarget,Rs as TransformBlock,OT as TransformFeedbackBoundingHelper,X as TransformNode,kT as TranslationBlock,VT as TriPlanarBlock,zT as TrigonometryBlock,GT as TrigonometryBlockOperations,LT as TubeBuilder,NT as TwirlBlock,FI as UncompressPIZ,OI as UncompressPXR,kI as UncompressRAW,VI as UncompressRLE,zI as UncompressZIP,ds as UniformBuffer,hs as UniversalCamera,WT as UnregisterAllMaterialPlugins,HT as UnregisterMaterialPlugin,UT as UploadContent,QT as UploadEnvLevelsAsync,jT as UploadEnvSpherical,qT as UploadLevelsAsync,fe as UtilityLayerRenderer,ZT as VRCameraMetrics,XT as VRDeviceOrientationArcRotateCamera,YT as VRDeviceOrientationFreeCamera,KT as VRDeviceOrientationGamepadCamera,JT as VRDistortionCorrectionPostProcess,$T as VRExperienceHelper,ev as VRMultiviewToSingleviewPostProcess,tv as ValidatedNativeDataStream,sv as ValueCondition,at as Vector2,iv as Vector2ToFixed,c as Vector3,av as Vector3ToFixed,le as Vector4,rv as Vector4ToFixed,nv as VectorConverterBlock,ov as VectorMergerBlock,hv as VectorSplitterBlock,Ni as VertexAnimationBaker,E as VertexBuffer,$e as VertexData,lv as VertexDataMaterialInfo,cv as VertexFormat,Ds as VertexOutputBlock,dv as VertexStepMode,uv as VideoDome,_v as VideoRecorder,pv as VideoTexture,gv as ViewDirectionBlock,Rt as Viewport,mv as VirtualJoystick,fv as VirtualJoysticksCamera,bv as VolumetricLightScatteringPostProcess,xv as VoronoiNoiseBlock,Pv as Wav2Decode,yv as WaveBlock,Mv as WaveBlockKind,Sv as WebGL2ParticleSystem,Tv as WebGL2ShaderProcessor,vv as WebGLDataBuffer,Rv as WebGLHardwareTexture,Bv as WebGLPipelineContext,Av as WebGPUCacheBindGroups,Dv as WebGPUCacheRenderPipeline,Cv as WebGPUCacheRenderPipelineTree,wv as WebGPUCacheSampler,Iv as WebGPUDataBuffer,Ev as WebGPUDrawContext,Bt as WebGPUEngine,Fv as WebGPUPipelineContext,Ov as WebGPURenderTargetWrapper,kv as WebGPUShaderProcessor,Vv as WebGPUTintWASM,xs as WebRequest,zv as WebXRAbstractFeature,Gv as WebXRAbstractMotionController,Lv as WebXRAnchorSystem,Nv as WebXRBackgroundRemover,Wv as WebXRCamera,Hv as WebXRControllerComponent,Uv as WebXRControllerMovement,Qv as WebXRControllerPhysics,jv as WebXRControllerPointerSelection,qv as WebXRDefaultExperience,Zv as WebXRDefaultExperienceOptions,Xv as WebXRDepthSensing,Yv as WebXRDomOverlay,Kv as WebXREnterExitUI,Jv as WebXREnterExitUIButton,$v as WebXREnterExitUIOptions,eR as WebXRExperienceHelper,tR as WebXREyeTracking,sR as WebXRFeatureName,iR as WebXRFeaturePointSystem,aR as WebXRFeaturesManager,rR as WebXRGenericHandController,nR as WebXRGenericTriggerMotionController,oR as WebXRHTCViveMotionController,hR as WebXRHand,lR as WebXRHandJoint,cR as WebXRHandTracking,dR as WebXRHitTest,uR as WebXRHitTestLegacy,_R as WebXRImageTracking,pR as WebXRInput,gR as WebXRInputSource,mR as WebXRLayerRenderTargetTextureProvider,fR as WebXRLayers,bR as WebXRLightEstimation,xR as WebXRManagedOutputCanvas,PR as WebXRManagedOutputCanvasOptions,yR as WebXRMeshDetector,MR as WebXRMicrosoftMixedRealityController,SR as WebXRMotionControllerManager,TR as WebXRMotionControllerTeleportation,vR as WebXRNearControllerMode,RR as WebXRNearInteraction,BR as WebXROculusTouchMotionController,AR as WebXRPlaneDetector,DR as WebXRProfiledMotionController,CR as WebXRRawCameraAccess,wR as WebXRSessionManager,IR as WebXRSpaceWarp,ER as WebXRSpaceWarpRenderTargetTextureProvider,FR as WebXRState,OR as WebXRTrackingState,kR as WebXRWalkingLocomotion,Li as WeightedSound,VR as WorkerPool,zR as WorleyNoise3DBlock,GR as XRSpaceWarpRenderTarget,LR as Xbox360Button,NR as Xbox360Dpad,WR as Xbox360Pad,HR as XboxInput,UR as _BabylonLoaderRegistered,AI as _BasisTextureLoader,QR as _CommonDispose,jR as _CommonInit,qR as _CreationDataStorage,bI as _DDSTextureLoader,PI as _ENVTextureLoader,GI as _ExrTextureLoader,ZR as _GetCompatibleTextureLoader,RI as _HDRTextureLoader,XR as _InstancesBatch,MI as _KTXTextureLoader,YR as _MeshCollisionData,KR as _OcclusionDataStorage,JR as _PrimaryIsoTriangle,TI as _TGATextureLoader,$R as _TimeToken,ys as _UpdateRGBDAsync,eB as _forceSceneHelpersToBundle,tB as _forceTransformFeedbackToBundle,sB as _injectLTSFileTools,iB as _staticOffsetValueColor3,aB as _staticOffsetValueColor4,rB as _staticOffsetValueQuaternion,nB as _staticOffsetValueSize,oB as _staticOffsetValueVector2,hB as _staticOffsetValueVector3,lB as addClipPlaneUniforms,cB as allocateAndCopyTypedBuffer,dB as anaglyphPixelShader,uB as anaglyphPixelShaderWGSL,_B as appendSceneAsync,pB as backgroundPixelShader,gB as backgroundPixelShaderWGSL,mB as backgroundVertexShader,fB as backgroundVertexShaderWGSL,bB as bilateralBlurPixelShader,xB as bilateralBlurPixelShaderWGSL,PB as bilateralBlurQualityPixelShader,yB as bilateralBlurQualityPixelShaderWGSL,MB as bindClipPlane,SB as blackAndWhitePixelShader,TB as blackAndWhitePixelShaderWGSL,vB as bloomMergePixelShader,RB as bloomMergePixelShaderWGSL,BB as bonesDeclaration,AB as bonesDeclarationWGSL,DB as bonesVertex,CB as bonesVertexWGSL,wB as boundingBoxRendererPixelShader,IB as boundingBoxRendererPixelShaderWGSL,EB as boundingBoxRendererVertexShader,FB as boundingBoxRendererVertexShaderWGSL,OB as bumpFragment,kB as bumpFragmentFunctions,VB as bumpFragmentFunctionsWGSL,zB as bumpFragmentMainFunctions,GB as bumpFragmentMainFunctionsWGSL,LB as bumpFragmentWGSL,Qa as captureEquirectangularFromScene,NB as chromaticAberrationPixelShader,WB as chromaticAberrationPixelShaderWGSL,HB as circleOfConfusionPixelShader,UB as circleOfConfusionPixelShaderWGSL,QB as className,jB as clipPlaneFragment,qB as clipPlaneFragmentDeclaration,ZB as clipPlaneFragmentDeclarationWGSL,XB as clipPlaneFragmentWGSL,YB as clipPlaneVertex,KB as clipPlaneVertexDeclaration,JB as clipPlaneVertexDeclarationWGSL,$B as clipPlaneVertexWGSL,eA as colorCorrectionPixelShader,tA as colorCorrectionPixelShaderWGSL,sA as colorPixelShader,iA as colorPixelShaderWGSL,aA as colorVertexShader,rA as colorVertexShaderWGSL,_a as computeMaxExtents,nA as convolutionPixelShader,oA as convolutionPixelShaderWGSL,hA as copyTexture3DLayerToTexturePixelShader,lA as copyTexture3DLayerToTexturePixelShaderWGSL,cA as copyTextureToTexturePixelShader,dA as copyTextureToTexturePixelShaderWGSL,da as createDetailMapPlugin,ra as createPBRAnisotropicPlugin,na as createPBRBRDFPlugin,oa as createPBRClearCoatPlugin,ha as createPBRIridescencePlugin,la as createPBRSheenPlugin,ca as createPBRSubSurfacePlugin,uA as createYieldingScheduler,_A as defaultPixelShader,pA as defaultPixelShaderWGSL,gA as defaultVertexShader,mA as defaultVertexShaderWGSL,fA as depthBoxBlurPixelShader,bA as depthBoxBlurPixelShaderWGSL,xA as depthOfFieldMergePixelShader,PA as depthOfFieldMergePixelShaderWGSL,yA as depthPixelShader,MA as depthPixelShaderWGSL,SA as depthVertexShader,TA as depthVertexShaderWGSL,vA as displayPassPixelShader,RA as displayPassPixelShaderWGSL,BA as editableInPropertyPage,AA as expandToProperty,DA as extractHighlightsPixelShader,CA as extractHighlightsPixelShaderWGSL,wA as extractMinAndMax,IA as extractMinAndMaxIndexed,EA as filterPixelShader,FA as filterPixelShaderWGSL,OA as fluidRenderingBilateralBlurPixelShader,kA as fluidRenderingBilateralBlurPixelShaderWGSL,VA as fluidRenderingParticleDepthPixelShader,zA as fluidRenderingParticleDepthPixelShaderWGSL,GA as fluidRenderingParticleDepthVertexShader,LA as fluidRenderingParticleDepthVertexShaderWGSL,NA as fluidRenderingParticleDiffusePixelShader,WA as fluidRenderingParticleDiffusePixelShaderWGSL,HA as fluidRenderingParticleDiffuseVertexShader,UA as fluidRenderingParticleDiffuseVertexShaderWGSL,QA as fluidRenderingParticleThicknessPixelShader,jA as fluidRenderingParticleThicknessPixelShaderWGSL,qA as fluidRenderingParticleThicknessVertexShader,ZA as fluidRenderingParticleThicknessVertexShaderWGSL,XA as fluidRenderingRenderPixelShader,YA as fluidRenderingRenderPixelShaderWGSL,KA as fluidRenderingStandardBlurPixelShader,JA as fluidRenderingStandardBlurPixelShaderWGSL,$A as fogFragmentDeclaration,eD as fogFragmentDeclarationWGSL,tD as fxaaPixelShader,sD as fxaaPixelShaderWGSL,iD as fxaaVertexShader,aD as fxaaVertexShaderWGSL,rD as geometryPixelShader,nD as geometryPixelShaderWGSL,oD as geometryVertexShader,hD as geometryVertexShaderWGSL,lD as getRichTypeFromValue,cD as glowBlurPostProcessPixelShader,dD as glowBlurPostProcessPixelShaderWGSL,uD as glowMapGenerationPixelShader,_D as glowMapGenerationPixelShaderWGSL,pD as glowMapGenerationVertexShader,gD as glowMapGenerationVertexShaderWGSL,mD as glowMapMergePixelShader,fD as glowMapMergePixelShaderWGSL,bD as glowMapMergeVertexShader,xD as glowMapMergeVertexShaderWGSL,PD as grainPixelShader,yD as grainPixelShaderWGSL,MD as hdrFilteringPixelShader,SD as hdrFilteringPixelShaderWGSL,TD as hdrFilteringVertexShader,vD as hdrFilteringVertexShaderWGSL,RD as helperFunctions,BD as helperFunctionsWGSL,AD as highlightsPixelShader,DD as highlightsPixelShaderWGSL,CD as iblCombineVoxelGridsPixelShader,wD as iblCombineVoxelGridsPixelShaderWGSL,ID as iblGenerateVoxelMipPixelShader,ED as iblGenerateVoxelMipPixelShaderWGSL,FD as iblShadowAccumulationPixelShader,OD as iblShadowAccumulationPixelShaderWGSL,kD as iblShadowDebugPixelShader,VD as iblShadowDebugPixelShaderWGSL,zD as iblShadowGBufferDebugPixelShader,GD as iblShadowGBufferDebugPixelShaderWGSL,LD as iblShadowSpatialBlurPixelShader,ND as iblShadowSpatialBlurPixelShaderWGSL,WD as iblShadowVoxelTracingPixelShader,HD as iblShadowVoxelTracingPixelShaderWGSL,UD as iblShadowsCdfxPixelShader,QD as iblShadowsCdfxPixelShaderWGSL,jD as iblShadowsCdfyPixelShader,qD as iblShadowsCdfyPixelShaderWGSL,ZD as iblShadowsCombinePixelShader,XD as iblShadowsCombinePixelShaderWGSL,YD as iblShadowsIcdfxPixelShader,KD as iblShadowsIcdfxPixelShaderWGSL,JD as iblShadowsIcdfyPixelShader,$D as iblShadowsIcdfyPixelShaderWGSL,eC as iblShadowsImportanceSamplingDebugPixelShader,tC as iblShadowsImportanceSamplingDebugPixelShaderWGSL,sC as iblVoxelGrid2dArrayDebugPixelShader,iC as iblVoxelGrid2dArrayDebugPixelShaderWGSL,aC as iblVoxelGrid3dDebugPixelShader,rC as iblVoxelGrid3dDebugPixelShaderWGSL,nC as iblVoxelGridPixelShader,oC as iblVoxelGridPixelShaderWGSL,hC as iblVoxelGridVertexShader,lC as iblVoxelGridVertexShaderWGSL,cC as iblVoxelSlabDebugPixelShader,dC as iblVoxelSlabDebugPixelShaderWGSL,uC as iblVoxelSlabDebugVertexShader,_C as iblVoxelSlabDebugVertexShaderWGSL,pC as imageProcessingDeclaration,gC as imageProcessingDeclarationWGSL,mC as imageProcessingFunctions,fC as imageProcessingFunctionsWGSL,bC as imageProcessingPixelShader,xC as imageProcessingPixelShaderWGSL,PC as importAnimationsAsync,yC as inlineScheduler,MC as kernelBlurPixelShader,SC as kernelBlurPixelShaderWGSL,TC as kernelBlurVertexShader,vC as kernelBlurVertexShaderWGSL,RC as layerPixelShader,BC as layerPixelShaderWGSL,AC as layerVertexShader,DC as layerVertexShaderWGSL,CC as lensFlarePixelShader,wC as lensFlarePixelShaderWGSL,IC as lensFlareVertexShader,EC as lensFlareVertexShaderWGSL,FC as lightFragment,OC as lightFragmentDeclaration,kC as lightFragmentWGSL,VC as lightUboDeclaration,zC as lightUboDeclarationWGSL,GC as lightVxFragmentDeclaration,LC as lightVxUboDeclaration,NC as lightVxUboDeclarationWGSL,WC as lightsFragmentFunctions,HC as lightsFragmentFunctionsWGSL,UC as linePixelShader,QC as linePixelShaderWGSL,jC as lineVertexShader,qC as lineVertexShaderWGSL,ZC as loadAssetContainerAsync,XC as loadSceneAsync,YC as lodCubePixelShader,KC as lodCubePixelShaderWGSL,JC as lodPixelShader,$C as lodPixelShaderWGSL,e0 as makeAsyncFunction,t0 as makeSyncFunction,s0 as meshUVSpaceRendererFinaliserPixelShader,i0 as meshUVSpaceRendererFinaliserPixelShaderWGSL,a0 as meshUVSpaceRendererFinaliserVertexShader,r0 as meshUVSpaceRendererFinaliserVertexShaderWGSL,n0 as meshUVSpaceRendererMaskerPixelShader,o0 as meshUVSpaceRendererMaskerPixelShaderWGSL,h0 as meshUVSpaceRendererMaskerVertexShader,l0 as meshUVSpaceRendererMaskerVertexShaderWGSL,c0 as meshUVSpaceRendererPixelShader,d0 as meshUVSpaceRendererPixelShaderWGSL,u0 as meshUVSpaceRendererVertexShader,_0 as meshUVSpaceRendererVertexShaderWGSL,p0 as morphTargetsVertex,g0 as morphTargetsVertexDeclaration,m0 as morphTargetsVertexDeclarationWGSL,f0 as morphTargetsVertexGlobal,b0 as morphTargetsVertexGlobalDeclaration,x0 as morphTargetsVertexGlobalDeclarationWGSL,P0 as morphTargetsVertexGlobalWGSL,y0 as morphTargetsVertexWGSL,M0 as motionBlurPixelShader,S0 as motionBlurPixelShaderWGSL,T0 as nativeOverride,v0 as normalizeEnvInfo,R0 as oitBackBlendPixelShader,B0 as oitBackBlendPixelShaderWGSL,A0 as oitFinalPixelShader,D0 as oitFinalPixelShaderWGSL,C0 as outlinePixelShader,w0 as outlinePixelShaderWGSL,I0 as outlineVertexShader,E0 as outlineVertexShaderWGSL,F0 as packingFunctions,O0 as packingFunctionsWGSL,k0 as particlesPixelShader,V0 as particlesPixelShaderWGSL,z0 as particlesVertexShader,G0 as particlesVertexShaderWGSL,L0 as passCubePixelShader,N0 as passCubePixelShaderWGSL,W0 as passPixelShader,H0 as passPixelShaderWGSL,U0 as pbrPixelShader,Q0 as pbrPixelShaderWGSL,j0 as pbrVertexShader,q0 as pbrVertexShaderWGSL,Z0 as pickingPixelShader,X0 as pickingPixelShaderWGSL,Y0 as pickingVertexShader,K0 as pickingVertexShaderWGSL,J0 as postprocessVertexShader,$0 as postprocessVertexShaderWGSL,ew as prepareDefinesForClipPlanes,tw as prepareStringDefinesForClipPlanes,sw as proceduralVertexShader,iw as proceduralVertexShaderWGSL,aw as reflectionFunction,rw as reflectionFunctionWGSL,nw as registerSceneLoaderPlugin,ow as registerTextureLoader,hw as rgbdDecodePixelShader,lw as rgbdDecodePixelShaderWGSL,cw as rgbdEncodePixelShader,dw as rgbdEncodePixelShaderWGSL,uw as rsmFullGlobalIlluminationPixelShader,_w as rsmFullGlobalIlluminationPixelShaderWGSL,pw as rsmGlobalIlluminationPixelShader,gw as rsmGlobalIlluminationPixelShaderWGSL,mw as runCoroutine,fw as runCoroutineAsync,bw as runCoroutineSync,xw as screenSpaceReflection2BlurCombinerPixelShader,Pw as screenSpaceReflection2BlurCombinerPixelShaderWGSL,yw as screenSpaceReflection2BlurPixelShader,Mw as screenSpaceReflection2BlurPixelShaderWGSL,Sw as screenSpaceReflection2PixelShader,Tw as screenSpaceReflection2PixelShaderWGSL,vw as serialize,Rw as serializeAsCameraReference,Bw as serializeAsColor3,Aw as serializeAsColor4,Dw as serializeAsColorCurves,Cw as serializeAsFresnelParameters,ww as serializeAsImageProcessingConfiguration,Iw as serializeAsMatrix,Ew as serializeAsMeshReference,Fw as serializeAsQuaternion,Ow as serializeAsTexture,kw as serializeAsVector2,Vw as serializeAsVector3,zw as setAndStartTimer,Gw as setStereoscopicAnaglyphRigMode,Lw as setStereoscopicRigMode,Nw as setVRRigMode,Ww as shadowMapFragment,Hw as shadowMapFragmentSoftTransparentShadow,Uw as shadowMapFragmentSoftTransparentShadowWGSL,Qw as shadowMapFragmentWGSL,jw as shadowMapPixelShader,qw as shadowMapPixelShaderWGSL,Zw as shadowMapVertexMetric,Xw as shadowMapVertexMetricWGSL,Yw as shadowMapVertexShader,Kw as shadowMapVertexShaderWGSL,Jw as shadowsFragmentFunctions,$w as shadowsFragmentFunctionsWGSL,eI as shadowsVertex,tI as shadowsVertexWGSL,sI as sharpenPixelShader,iI as sharpenPixelShaderWGSL,aI as spritesPixelShader,rI as spritesPixelShaderWGSL,nI as spritesVertexShader,oI as spritesVertexShaderWGSL,hI as ssao2PixelShader,lI as ssao2PixelShaderWGSL,cI as ssaoCombinePixelShader,dI as ssaoCombinePixelShaderWGSL,uI as tonemapPixelShader,_I as tonemapPixelShaderWGSL,pI as unregisterTextureLoader,gI as vrDistortionCorrectionPixelShader,mI as vrDistortionCorrectionPixelShaderWGSL};
